{
    "RoleRestricted": {
        "hash": "cb987940326d7db21e6064f36611abf3e0c9cb5e51417d37fe56a6993f7260c0",
        "query": "query RoleRestricted($contentOwnerLogin: String!) {\n  currentUser {\n    id\n    roles {\n      isStaff\n    }\n  }\n  user(login: $contentOwnerLogin) {\n    id\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "ClipsDownloadButton": {
        "hash": "eb6968f437229308b813563e2169ae1352f90dea2dc34fd0982bca705f920b7e",
        "query": "query ClipsDownloadButton($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    createdAt\n    durationSeconds\n    viewCount\n    broadcaster {\n      id\n    }\n    curator {\n      id\n    }\n    game {\n      id\n      name\n    }\n    playbackAccessToken(params: {platform: \"web\", playerType: \"clips-download\"}) {\n      signature\n      value\n    }\n    videoQualities {\n      sourceURL\n    }\n  }\n}\n"
    },
    "VideoShareBox_CollectionTrackingMeta": {
        "hash": "94fef2320d8f3d23fc8cfa91177360e60fb5a3191a78a2c0a8524b57a5ee095f",
        "query": "query VideoShareBox_CollectionTrackingMeta($creatorID: ID!) {\n  user(id: $creatorID) {\n    id\n    login\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "VideoShareBox_TrackingVideoContext": {
        "hash": "d74226e8c29d1dd3f51724504c6c578b3069c5d590834168f97ded7d5e4abf4c",
        "query": "query VideoShareBox_TrackingVideoContext($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    broadcastType\n    owner {\n      id\n      login\n      roles {\n        isPartner\n      }\n    }\n    game {\n      id\n      name\n    }\n  }\n}\n"
    },
    "DevCommonUtils_FetchGames": {
        "hash": "981d6e143cbbbc4558a6fd28327680ec773d27b5e1ed87da7d637d481fe33034",
        "query": "fragment fetchedGame on Game {\n  id\n  giantBombID\n  name\n}\n\nquery DevCommonUtils_FetchGames($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    games {\n      ...fetchedGame\n    }\n  }\n}\n"
    },
    "TopGameClips": {
        "hash": "429702b95eb5a06ccd686f05811b39eff17c61e8e59e2b6f1c0abfdbf6305ace",
        "query": "query TopGameClips($name: String!, $clipPeriod: ClipsPeriod!, $startAt: Time, $endAt: Time) {\n  game(name: $name) {\n    id\n    clips(criteria: {period: $clipPeriod, startAt: $startAt, endAt: $endAt}) {\n      edges {\n        node {\n          ...contentClipsManagerClip\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevPresignReportURL": {
        "hash": "ca1a73e257a8300dd2c1463d579b13cb7ba695233353b34755d77396ad492543",
        "query": "mutation DevPresignReportURL($input: PresignDevInsightsReportURLInput!) {\n  presignDevInsightsReportURL(input: $input) {\n    url\n  }\n}\n"
    },
    "QuickActionsFollowerOnlyChatQuery": {
        "hash": "314877dc5ee573c27a6cfa5e9959a11913730973247b68a885f8b96c53f37cbc",
        "query": "query QuickActionsFollowerOnlyChatQuery($login: String!) {\n  user(login: $login) {\n    id\n    chatSettings {\n      followersOnlyDurationMinutes\n    }\n  }\n}\n"
    },
    "ChannelSkins": {
        "hash": "c98441fac5de5d64226220ad7a80356ce8a1251d8c650a534d9ec31d9e529c87",
        "query": "query ChannelSkins($channelLogin: String, $sponsorshipsParams: SponsorshipsParams) {\n  channel(name: $channelLogin) {\n    id\n    sponsorships(sponsorshipsParams: $sponsorshipsParams) {\n      channelSkin {\n        ...ChannelSkinsTracking\n        adsAudiencePolicy {\n          ...ChannelSkinsAdsAudiencePolicy\n        }\n        advertiser {\n          ...ChannelSkinsAdvertiser\n        }\n        placements {\n          ...ChannelSkinsPlacement\n        }\n      }\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    login\n    primaryColorHex\n    self {\n      subscriptionBenefit {\n        id\n        product {\n          id\n          hasAdFree\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n    hasTurbo\n  }\n  requestInfo {\n    countryCodeAlpha2\n  }\n}\n\nfragment ChannelSkinsAdsAudiencePolicy on AdsAudiencePolicy {\n  shouldShowToTurbo\n  shouldShowToChannelSubscriber\n}\n\nfragment ChannelSkinsAdvertiser on Advertiser {\n  name\n  ctaMessage\n  ctaURL\n  imageAsset {\n    lightModeURL\n    darkModeURL\n  }\n  iconBackgroundColorHexCode\n}\n\nfragment ChannelSkinsPlacement on SponsorshipPlacement {\n  location\n  assetPosition\n  backgroundType\n  colorHexCode\n  imageAsset {\n    lightModeURL\n    darkModeURL\n  }\n  iconBackgroundColorHexCode\n}\n\nfragment ChannelSkinsTracking on ChannelSkin {\n  activation {\n    id\n  }\n  activationProgression\n  campaign\n  campaignInstance {\n    id\n    displayRef\n    clickRef\n    transparencyInfo {\n      adIDValue\n      adProgramIDValue\n      creativeIDValue\n      slotName\n      version\n      advertiserIDNS\n      campaignIDNS\n      geoCode\n      selectionSignals {\n        isShownBasedOffUserDsaContext\n        isShownBasedOffUserDsaLocation\n        dsaPastActivity\n      }\n    }\n  }\n}\n"
    },
    "RocketBoostOpportunityPurchasableUnits": {
        "hash": "4fb927296c4db7ee8f004984e0145beac90c3e2a9675a60ff268236d727b020c",
        "query": "query RocketBoostOpportunityPurchasableUnits($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    activeRocketBoostOpportunity {\n      id\n      impressionsContributed\n    }\n    self {\n      rocketBoostProducts {\n        id\n        offers {\n          ...subProductOfferFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "SyncedSettingsSetEmoteAnimations": {
        "hash": "dd03932cc134727a2fade3e0d8616bea4f158c23f089b71c69036df794dca178",
        "query": "mutation SyncedSettingsSetEmoteAnimations($input: SetEmoteAnimationsEnabledInput!) {\n  setEmoteAnimationsEnabled(input: $input) {\n    isEmoteAnimationsEnabled\n  }\n}\n"
    },
    "SyncedSettingsEmoteAnimations": {
        "hash": "7cf466664775c472680781115a350ea07c59b222239c2a61895da11922f54340",
        "query": "query SyncedSettingsEmoteAnimations() {\n  currentUser {\n    id\n    chatUISettings {\n      isEmoteAnimationsEnabled\n    }\n  }\n}\n"
    },
    "CodeRedemptionInCheckoutValidation_RedeemKey": {
        "hash": "cd36bd3ad1a18daf21b704763313d78a7d09c3ce0e55e0ff3fa9739b9fd7d570",
        "query": "mutation CodeRedemptionInCheckoutValidation_RedeemKey($input: RedeemClaimableInput!) {\n  redeemClaimable(input: $input) {\n    key {\n      description\n      id\n    }\n    error {\n      code\n    }\n    redemptionID\n  }\n}\n"
    },
    "RedemptionStatusInCheckout": {
        "hash": "bb37c1cc47f5c44a9b86ad2a375542d787b3149f8546db25f46f6b7a537f3dbf",
        "query": "query RedemptionStatusInCheckout($id: ID!) {\n  redemptionItemByID(id: $id) {\n    currency\n    amount\n    status\n    errorCode\n  }\n}\n"
    },
    "SetGiftCardUserResidenceInCheckoutMutation": {
        "hash": "99d56af524ee7cdcc21d2e0f9b6451874b092ca9fcd70b0e525552158dd45b55",
        "query": "mutation SetGiftCardUserResidenceInCheckoutMutation($input: SetUserResidenceInput!) {\n  setUserResidence(input: $input) {\n    user {\n      id\n      residence {\n        countryCode\n      }\n    }\n  }\n}\n"
    },
    "GiftCardRedemptionInCheckoutValidation_GetKeyStatus": {
        "hash": "2c0ded5d4f84c09633354362b451c5f6e676c5b497b8d14725f3a34281f0fc4e",
        "query": "query GiftCardRedemptionInCheckoutValidation_GetKeyStatus($code: String!) {\n  key(code: $code) {\n    id\n    type\n    self {\n      id\n      canClaim\n      statusCode\n    }\n    description\n  }\n}\n"
    },
    "PurchaseOfferMutation": {
        "hash": "a7354f42a64df5e2f397035914d8e6e75244c42b5a6d9b1eb0be774537828dbf",
        "query": "mutation PurchaseOfferMutation($input: PurchaseOfferInput!) {\n  purchaseOffer(input: $input) {\n    purchaseOrder {\n      id\n      actionTokenID\n      state\n    }\n    error\n  }\n}\n"
    },
    "CheckoutFormReviewScreen": {
        "hash": "e8ecf78ec635aa227fd319a9a9188460a0ace5eea20addc741eead7b55600189",
        "query": "query CheckoutFormReviewScreen($purchaseOrderID: ID!, $includeOrder: Boolean!) {\n  currentUser {\n    id\n    purchaseOrder(id: $purchaseOrderID) @include(if: $includeOrder) {\n      id\n      actionTokenID\n      failureReason\n      state\n    }\n  }\n}\n"
    },
    "getUserLoginInfo": {
        "hash": "4482044773d5cb93c49e56b525e1372e8ce8d0febbef72af0090c6d580b11e5c",
        "query": "query getUserLoginInfo($id: ID!) {\n  user(id: $id) {\n    id\n    login\n  }\n}\n"
    },
    "TwoFactorReminder": {
        "hash": "69edce288c3116e5c3862172cc914c65ff7524eaa473ea486ef349b5a584e47a",
        "query": "query TwoFactorReminder() {\n  currentUser {\n    id\n    settings {\n      hasTwoFactorEnabled\n    }\n  }\n}\n"
    },
    "CheckoutFormScreenManager": {
        "hash": "3242cb186848fecb51d2fee7fcef3982b06886a4eebd3fde1d7c3d41c2982264",
        "query": "query CheckoutFormScreenManager($params: PurchasableOfferParams!, $tagBindings: [OfferTagBindingInput!], $giftRecipientIDs: [ID!], $quantity: Int!, $paymentSession: PaymentSession!, $withDiscounts: Boolean, $isDarkMode: Boolean, $referrerData: SubscriptionReferrerData, $inputAmount: MoneyInput, $xsollaInputAmount: XsollaMoneyInput, $benefitsStartTime: Time) {\n  purchasableOffer(params: $params) {\n    listing {\n      chargeModel {\n        internal {\n          self {\n            checkoutPrice(quantity: $quantity, paymentProvider: RECURLY, userInputTotal: $inputAmount, anticipatedChargeDate: $benefitsStartTime) {\n              errorCode\n              checkoutPriceSummary {\n                currency\n                exponent\n                id\n                isTaxInclusive\n                price\n                tax\n                total\n                wasPriceAdjusted\n                discount @include(if: $withDiscounts) {\n                  price\n                  total\n                  tax\n                }\n              }\n              checkoutFuturePriceSummary {\n                effectiveDate\n                price {\n                  id\n                  currency\n                  price\n                }\n              }\n            }\n            checkoutPrice(quantity: $quantity, paymentProvider: XSOLLA_V3, userInputTotal: $inputAmount, anticipatedChargeDate: $benefitsStartTime) {\n              errorCode\n              checkoutPriceSummary {\n                currency\n                exponent\n                id\n                isTaxInclusive\n                price\n                tax\n                total\n                wasPriceAdjusted\n                discount @include(if: $withDiscounts) {\n                  price\n                  total\n                  tax\n                }\n              }\n              checkoutFuturePriceSummary {\n                effectiveDate\n                price {\n                  id\n                  currency\n                  price\n                }\n              }\n            }\n          }\n          plan {\n            renewalPolicy\n            interval {\n              duration\n              unit\n            }\n          }\n          previewPrice(selectionProcess: DEEP_PREFER_RECURLY) {\n            currency\n            exponent\n            id\n            isTaxInclusive\n            price\n            tax\n            discount @include(if: $withDiscounts) {\n              price\n            }\n          }\n        }\n      }\n    }\n    eligibility {\n      isEligible\n      purchaseType\n      reasonCode\n      benefitsStartAt\n    }\n    endAt\n    giftType\n    id\n    quantity {\n      min\n      max\n    }\n    self {\n      checkoutActions(quantity: $quantity, paymentSession: $paymentSession, inputAmount: $inputAmount)\n      promoActions(paymentSession: $paymentSession)\n      eligiblePaymentMethods {\n        ...eligiblePaymentMethodFragment\n      }\n      checkoutConfiguration {\n        xsolla(offerTagBindings: $tagBindings, quantity: $quantity, giftRecipientIDs: $giftRecipientIDs, paymentSession: $paymentSession, isDarkMode: $isDarkMode, referrerData: $referrerData, userInputTotal: $xsollaInputAmount) {\n          token\n          isSandbox\n          ineligibilityReason\n          error\n        }\n      }\n    }\n    tplr\n    tagBindings {\n      key\n      value\n    }\n    promotion @include(if: $withDiscounts) {\n      id\n      name\n      promoDisplay {\n        discountPercent\n        discountType\n      }\n      endAt\n    }\n  }\n  currentUser {\n    id\n    email\n    displayName\n    paymentMethods(includeSubs: false, recurlyOnly: true) {\n      ...paymentMethodFragment\n    }\n    residence {\n      ...userResidenceFragment\n    }\n    purchaseOrderCount\n    accountHealth {\n      isVerifiedEmail\n      isPhoneNumberVerified\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n  recurlyConfigs {\n    payWithAmazonConfigs {\n      clientID\n      isProduction\n      sellerID\n    }\n    braintreeClientAuthorization\n    publicKey\n  }\n}\n"
    },
    "UserBalanceQuery": {
        "hash": "24141445cb14bbcab1e56e4c1be78287831656a4b04bf23101521da584b3734c",
        "query": "query UserBalanceQuery($walletType: WalletType!) {\n  currentUser {\n    id\n    balances(walletType: $walletType) {\n      amount\n      currency\n      exponent\n    }\n  }\n}\n"
    },
    "CheckoutFormSelectScreen_PaymentMethodInsertStatus": {
        "hash": "1581ec08a13cf4bf4124283ff4f306bfa26ca253ed842227b6071a52642344f0",
        "query": "query CheckoutFormSelectScreen_PaymentMethodInsertStatus($workflowID: ID!) {\n  paymentMethodInsertStatus(workflowID: $workflowID) {\n    workflowID\n    outcome\n    errorCode\n    recurlyFraudSessionID\n    threeDSecureActionResultsTokenID\n  }\n}\n"
    },
    "CheckoutFormSelectScreen_SetPaymentMethodMutation": {
        "hash": "2376e7e47f8af911dd650ec721b6f5c339dc08407ede1b975e5ec839743466f6",
        "query": "mutation CheckoutFormSelectScreen_SetPaymentMethodMutation($input: SetPaymentMethodInput!) {\n  setPaymentMethod(input: $input) {\n    workflowID\n    error\n  }\n}\n"
    },
    "BitsBundleSuccessScreen": {
        "hash": "50bc74d3a22c216cca8a65367c705ecbb3d98444c7003d4be8ee30423cda9d17",
        "query": "query BitsBundleSuccessScreen() {\n  currentUser {\n    id\n    bitsBalance\n    bitsOffers {\n      id\n      bits\n      ... on BitsBundleOffer {\n        asin\n      }\n    }\n  }\n}\n"
    },
    "BoostSuccessScreen": {
        "hash": "17e8a2281d6f37ed9d449ff3ffc3002a1aa51fd17a4ffba6a3215255744c15e0",
        "query": "query BoostSuccessScreen($id: ID!) {\n  user(id: $id) {\n    id\n    displayName\n  }\n}\n"
    },
    "ChannelSubGiftSuccessScreen": {
        "hash": "ce0485aa0ce8c977f648f236ed929574733235d1c62e6503e38e8c0faacbd4c7",
        "query": "query ChannelSubGiftSuccessScreen($productName: String!, $giftRecipientID: ID) {\n  user(id: $giftRecipientID) {\n    id\n    displayName\n  }\n  subscriptionProduct(productName: $productName) {\n    id\n    tier\n    owner {\n      id\n      displayName\n      self {\n        displayBadges {\n          id\n          title\n          imageURL(size: QUADRUPLE)\n          setID\n        }\n        availableBadges {\n          id\n          title\n          imageURL(size: QUADRUPLE)\n          setID\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelSubSuccessScreen": {
        "hash": "47874f409b9fc67fbc8ec112a44b6f5f2833ccde557cd7d7809a7840a8e3cd5f",
        "query": "query ChannelSubSuccessScreen($productName: String!) {\n  subscriptionProduct(productName: $productName) {\n    id\n    tier\n    hasAdFree\n    owner {\n      id\n      displayName\n      self {\n        displayBadges {\n          id\n          title\n          imageURL(size: QUADRUPLE)\n          setID\n        }\n        availableBadges {\n          id\n          title\n          imageURL(size: QUADRUPLE)\n          setID\n        }\n      }\n      subscriptionProducts {\n        id\n        tier\n        emotes {\n          id\n          token\n          setID\n        }\n        emoteModifiers {\n          code\n          name\n        }\n      }\n    }\n  }\n}\n"
    },
    "CheckoutFormSuccessScreen": {
        "hash": "d9a3d5fa906c66cf15e530f12a5a38246e77978bbfa5ce68315c9008569d05eb",
        "query": "query CheckoutFormSuccessScreen($params: PurchasableOfferParams!) {\n  purchasableOffer(params: $params) {\n    id\n    tplr\n    tagBindings {\n      key\n      value\n    }\n  }\n}\n"
    },
    "CheckoutPaymentsDisclaimer": {
        "hash": "19fc306d5da7cd1a62818575e12739a03614595090a47262916b3a0110c357d1",
        "query": "query CheckoutPaymentsDisclaimer() {\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "KRExtraLegalDisclaimer": {
        "hash": "c7047ee95879b8ebd978d6073e27f43c938ab92be1f0a8f6525e196327dedccd",
        "query": "query KRExtraLegalDisclaimer() {\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "LegalDisclaimer": {
        "hash": "d899a1d951c7498e5c4cdbded349d7fcb2e72cccf2276af10d766e4a6e3eb763",
        "query": "query LegalDisclaimer() {\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "CompletePurchaseDisclaimer": {
        "hash": "987fe0b0f5c22625a0cf629cdf19895494a52fa7eb43ca624894028a892fce74",
        "query": "query CompletePurchaseDisclaimer($params: PurchasableOfferParams!) {\n  purchasableOffer(params: $params) {\n    id\n    tplr\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "ConfirmCountryOfResidence": {
        "hash": "752103904b2bd06a55170d05192b402b4c6b49eeaf797d7e136d6575e42efba8",
        "query": "query ConfirmCountryOfResidence() {\n  currentUser {\n    id\n    residence {\n      countryCode\n      postalCode\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "BitsProductDescription": {
        "hash": "c34983fcf48acf280ada99c57170b7a6af68cd06b7640bb27a7ee9f30e6e2da8",
        "query": "query BitsProductDescription() {\n  currentUser {\n    id\n    bitsOffers {\n      id\n      bits\n      ... on BitsBundleOffer {\n        asin\n      }\n    }\n  }\n}\n"
    },
    "RocketBoostProductDescription": {
        "hash": "8d3a052c9b9540ddada66544d1accc55fa93b190bec5ecb7a8b925cacfdc3ebc",
        "query": "query RocketBoostProductDescription($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    displayName\n  }\n}\n"
    },
    "SubsProductDescription": {
        "hash": "fda2697b4e55d490e94f7ff215040ea5fd19ec6fa71cf4efd55405fdf9ce6cfd",
        "query": "query SubsProductDescription($productName: String!, $giftRecipientID: ID, $includeGiftRecipientQuery: Boolean!, $params: PurchasableOfferParams!) {\n  subscriptionProduct(productName: $productName) {\n    id\n    tier\n    owner {\n      id\n      login\n      displayName\n      profileImageURL(width: 150)\n    }\n  }\n  user(id: $giftRecipientID) @include(if: $includeGiftRecipientQuery) {\n    id\n    displayName\n  }\n  purchasableOffer(params: $params) {\n    id\n    giftType\n    eligibility {\n      benefitsStartAt\n      purchaseType\n    }\n    listing {\n      chargeModel {\n        internal {\n          plan {\n            renewalPolicy\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "TurboProductDescription": {
        "hash": "fab51d54e8f890c4ba6c5600a14c9dcb9f4246f237b1585f6298f25fb99c7e86",
        "query": "query TurboProductDescription($name: String!) {\n  currentUser {\n    id\n    hasTurbo\n  }\n  subscriptionProduct(productName: $name) {\n    id\n    offers {\n      id\n      eligibility {\n        benefitsStartAt\n      }\n    }\n  }\n}\n"
    },
    "ProductDescription": {
        "hash": "74b8ecbd18e5a3fc9168b7375cdca4532ea6a37bd02c068a61fc251358d38ab1",
        "query": "query ProductDescription($channelID: ID, $params: PurchasableOfferParams!) {\n  user(id: $channelID) {\n    id\n    displayName\n  }\n  purchasableOffer(params: $params) {\n    id\n    tplr\n    tagBindings {\n      key\n      value\n    }\n  }\n}\n"
    },
    "SetUserResidenceMutation": {
        "hash": "6dc98fbb5505c2480556f85fa40b8216d11d4e3e0e20fd2600b3ae4ae07429de",
        "query": "mutation SetUserResidenceMutation($input: SetUserResidenceInput!) {\n  setUserResidence(input: $input) {\n    user {\n      id\n      residence {\n        countryCode\n        postalCode\n      }\n    }\n    warning {\n      code\n    }\n  }\n}\n"
    },
    "SubsCheckoutContainer": {
        "hash": "2e45169e17995dee7590a1042db46aa93260cb32e36a83bed026e5d4a67f1003",
        "query": "query SubsCheckoutContainer($recipientLogin: String!, $productName: String!, $includeRecipientQuery: Boolean!) {\n  user(login: $recipientLogin) @include(if: $includeRecipientQuery) {\n    id\n  }\n  subscriptionProduct(productName: $productName) {\n    ...checkoutContainerSubscriptionProduct\n  }\n}\n"
    },
    "UpdateEmail": {
        "hash": "0d5c55f9706ca4106b230e2b85f8900ab1b06b46764cc8bbdcd69e5f07be74a3",
        "query": "mutation UpdateEmail($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    error {\n      code\n    }\n    user {\n      id\n      email\n      isEmailVerified\n      isEmailReusable\n      isEmailUpdateable\n      settings {\n        isEmailRevertSuccess\n      }\n      verificationRequest {\n        status\n        modified\n      }\n    }\n  }\n}\n"
    },
    "SubtemberCalloutQuery": {
        "hash": "5fb76ed48354b09514dc3e647bab64889239bee237bd9f2781f06c7a77a7f00e",
        "query": "query SubtemberCalloutQuery($id: ID!) {\n  user(id: $id) {\n    id\n    subscriptionProducts {\n      id\n    }\n  }\n}\n"
    },
    "ChannelPage_SubscribeButton_User": {
        "hash": "a4b5286063906824edd3d7b93776539b9d4ef6a1f30a9450aac8071f416e0300",
        "query": "query ChannelPage_SubscribeButton_User($login: String!, $includeExpiredDunning: Boolean) {\n  user(login: $login) {\n    id\n    displayName\n    primaryColorHex\n    subscriptionProducts {\n      id\n      emoteSetID\n      name\n      hasAdFree\n      tier\n      offers {\n        ...subProductOfferFragment\n      }\n      gifting {\n        ...subCommunityGiftingFragment\n      }\n    }\n    self {\n      canPrimeSubscribe\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n      follower {\n        disableNotifications\n      }\n      subscriptionBenefit(includeExpiredDunning: $includeExpiredDunning) {\n        id\n        purchasedWithPrime\n        tier\n        endsAt\n        isDNRd\n        platform\n        pendingSubscription {\n          ...pendingSubscription\n        }\n        gift {\n          isGift\n        }\n        dunningPeriodEndsAt\n      }\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "Sub_Analytics": {
        "hash": "84f80d52b6997281c1c00aed7710fdd223d3a1c846e94e8a2d12cefb7641972f",
        "query": "query Sub_Analytics($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n}\n"
    },
    "SubsidizedSubscriptions": {
        "hash": "65f1da91a5e1a85c3f9a2925f8dea0687f1df29c1f381fff671cc8384c3e4216",
        "query": "query SubsidizedSubscriptions($channelID: ID, $channelLogin: String, $progressType: SponsorshipUserProgressType!, $shouldFetchUserProgress: Boolean!, $sponsorshipsParams: SponsorshipsParams) {\n  channel(id: $channelID, name: $channelLogin) {\n    id\n    sponsorships(sponsorshipsParams: $sponsorshipsParams) {\n      subsidizedSubscriptions {\n        ...SubsidizedSubscriptionsTracking\n        self {\n          id\n          progress(type: $progressType) @include(if: $shouldFetchUserProgress) {\n            amount\n          }\n        }\n        adsAudiencePolicy {\n          ...SubsidizedSubscriptionsAdsAudiencePolicy\n        }\n        advertiser {\n          ...SubsidizedSubscriptionsAdvertiser\n        }\n        communityProgress {\n          ...SubsidizedSubscriptionsProgress\n        }\n      }\n    }\n  }\n  user(id: $channelID, login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    login\n    self {\n      subscriptionBenefit {\n        id\n        product {\n          id\n          hasAdFree\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n    hasTurbo\n  }\n  requestInfo {\n    countryCodeAlpha2\n  }\n}\n\nfragment SubsidizedSubscriptionsAdsAudiencePolicy on AdsAudiencePolicy {\n  shouldShowToTurbo\n  shouldShowToChannelSubscriber\n}\n\nfragment SubsidizedSubscriptionsAdvertiser on SubsidizedSubscriptionsAdvertiser {\n  name\n  ctaMessage\n  ctaURL\n  imageAsset {\n    lightModeURL\n    darkModeURL\n  }\n  iconBackgroundColorHexCode\n}\n\nfragment SubsidizedSubscriptionsTracking on SubsidizedSubscriptions {\n  activation {\n    id\n    startsAt\n    endsAt\n  }\n  activationProgression\n  campaign\n  campaignInstance {\n    id\n  }\n  userProgressLimits {\n    type\n    value\n  }\n  nextDisableAt\n}\n\nfragment SubsidizedSubscriptionsProgress on ActivationTrackingProgress {\n  current\n  target\n}\n"
    },
    "AchievementsPage": {
        "hash": "50d9bae49cacd1dfe49db363fcaf084b19e4cd194eabb0d98fe8beed4ab5aa20",
        "query": "query AchievementsPage($channelID: ID!) {\n  achievementsPage(channelID: $channelID) {\n    achievements {\n      ... on Achievement {\n        id\n        levels {\n          ... on AchievementLevel {\n            id\n            goal {\n              __typename\n              ... on AchievementGoalInt {\n                goal\n                current\n              }\n              ... on AchievementGoalFloat {\n                goal\n                current\n              }\n              ... on AchievementGoalString {\n                goal\n                current\n              }\n            }\n            completedAt\n            reward {\n              __typename\n              ... on CreatorMilestone {\n                redemptionStatus\n                redemptionURL\n                redemptionCode\n              }\n            }\n          }\n        }\n        image\n        imageSm\n        image2x\n        image3x\n      }\n    }\n  }\n}\n"
    },
    "UseQuestsHook": {
        "hash": "e616b760a52953dab0408a1ed0279929a7b65e5af0703d17dd3fc62fd50f422f",
        "query": "query UseQuestsHook($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    quests {\n      buildACommunity {\n        ...buildACommunityQuest\n      }\n      itBegins {\n        ...itBeginsQuest\n      }\n      pathToAffiliate {\n        ...pathToAffiliateQuest\n      }\n      pathToPartner {\n        ...pathToPartnerQuest\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsAdBreaksTimeseriesStats": {
        "hash": "5d15fcf910cd3827679bea316b38a4880f478d01ad7b76d9bd2038b7d096aa68",
        "query": "query ChannelAnalyticsAdBreaksTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      adBreaksInSeconds {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsAdTimePerHourTimeseriesStats": {
        "hash": "e20865c4cbcd94e4bbeae9b171d9dfbe6b27dd7fe40df9a1b6b2b12a4e803a1e",
        "query": "query ChannelAnalyticsAdTimePerHourTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      adTimePerHour {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsAverageViewersTimeseriesStats": {
        "hash": "30d262a128320eaae9c60d982dd089aa9b1af80074c7e8403d395fc84859dc25",
        "query": "query ChannelAnalyticsAverageViewersTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      averageViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsChatMessagesTimeseriesStats": {
        "hash": "a1253d2e6690a54aefd5419a4773ffee3ce30708cd984f358398eb506ff40175",
        "query": "query ChannelAnalyticsChatMessagesTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      chatMessages {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsChattersTimeseriesStats": {
        "hash": "019af5185284133962f2f9ed4339e8aafb8d036db3d05b350ec9a8250d2c2fd6",
        "query": "query ChannelAnalyticsChattersTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      uniqueChatters {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsClipViewsTimeseriesStats": {
        "hash": "cfedf133b1a0d3bfc9c2558a5d3b07397cca3ba98ac1fd40ca8f25ca8259ba99",
        "query": "query ChannelAnalyticsClipViewsTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      clipViews {\n        value\n        timestamp\n      }\n      featuredClipViews {\n        value\n        timestamp\n      }\n      unfeaturedClipViews {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsClipsCreatedTimeseriesStats": {
        "hash": "3bd33ceb29e9fe097aee4081a140f342031fd0c85e094497255352e961c9d543",
        "query": "query ChannelAnalyticsClipsCreatedTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      clipsCreated {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsFollowsTimeseriesStats": {
        "hash": "91d64d9967ca8fb3fab22cf6930cdd814da47c3a376fe5100bcfed90045f75d4",
        "query": "query ChannelAnalyticsFollowsTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      follows {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsHostAndRaidViewersTimeseriesStats": {
        "hash": "36734525c6ec41b63a39ca5af0dbb30bde998b90993a180003b35d938ad20665",
        "query": "query ChannelAnalyticsHostAndRaidViewersTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      hostRaidViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsLiveViewsTimeseriesStats": {
        "hash": "95e4ea14cb8b5fa215cb3fedd3a56a36435d14bf62c893d4f2fce86ed7f2363b",
        "query": "query ChannelAnalyticsLiveViewsTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      liveViews {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsMaxViewersTimeseriesStats": {
        "hash": "e5bbbb49922dc4f9c9ce128de42383dda856c10f55342382b3f6cf0c0d73071f",
        "query": "query ChannelAnalyticsMaxViewersTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      maxViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsMinutesWatchedTimeseriesStats": {
        "hash": "f9665262bf2b0271200b0b7a6cf4ad8c02f3f2fdf54793bde4c109302bc8b965",
        "query": "query ChannelAnalyticsMinutesWatchedTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      minutesWatched {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalytics_NotificationsTimeseries": {
        "hash": "281c06716ad1ea78203e8730c93d58ac52e932920a10c397cbd56e9c670673a9",
        "query": "query ChannelAnalytics_NotificationsTimeseries($channelName: String!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $numberOfIntervals: Int!, $timeZone: String!) {\n  user(login: $channelName) {\n    id\n    goLiveNotificationsTimeseries(startAt: $startAt, endAt: $endAt, granularity: $granularity, numberOfIntervals: $numberOfIntervals, timeZone: $timeZone) {\n      items {\n        engagements\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsPromotionClickTimeseriesStats": {
        "hash": "b0b6b5959d87d26c776d4f56947b0912b2ff42a9daf88e958786688707053a3e",
        "query": "query ChannelAnalyticsPromotionClickTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      promotionClick {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsPromotionDisplayTimeseriesStats": {
        "hash": "fbc76fc2c7f7dc50d83dac99d41c61ecb43fc76d841492e98608b0f6b1002eb6",
        "query": "query ChannelAnalyticsPromotionDisplayTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      promotionDisplay {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsTimeStreamedTimeseriesStats": {
        "hash": "be6425b87c699df04e317ffda75af815dbaac44dca8383056b257c575e94143e",
        "query": "query ChannelAnalyticsTimeStreamedTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      timeStreamed {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsUniqueViewersTimeseriesStats": {
        "hash": "f717550361524c4aaf83dd8d0605cc1960e846def9c787fb1f9deb4445be61a3",
        "query": "query ChannelAnalyticsUniqueViewersTimeseriesStats($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      uniqueViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsCSVExporter": {
        "hash": "389677bd90a990445763d8c85428f8cc37c6eaf4d128c403f20178396f65aa98",
        "query": "query ChannelAnalyticsCSVExporter($channelID: ID!, $startAt: Time!, $endAt: Time!, $granularity: Granularity, $timeZone: String!) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone) {\n      granularity\n      adBreaksInSeconds {\n        value\n        timestamp\n      }\n      adTimePerHour {\n        value\n        timestamp\n      }\n      averageViewers {\n        value\n        timestamp\n      }\n      chatMessages {\n        value\n        timestamp\n      }\n      clipViews {\n        value\n        timestamp\n      }\n      clipsCreated {\n        value\n        timestamp\n      }\n      featuredClipViews {\n        value\n        timestamp\n      }\n      follows {\n        value\n        timestamp\n      }\n      hostRaidViewers {\n        value\n        timestamp\n      }\n      liveViews {\n        value\n        timestamp\n      }\n      maxViewers {\n        value\n        timestamp\n      }\n      minutesWatched {\n        value\n        timestamp\n      }\n      timeStreamed {\n        value\n        timestamp\n      }\n      unfeaturedClipViews {\n        value\n        timestamp\n      }\n      uniqueChatters {\n        value\n        timestamp\n      }\n      uniqueViewers {\n        value\n        timestamp\n      }\n      uniqueEngaged {\n        value\n        timestamp\n      }\n      uniqueNewEngaged {\n        value\n        timestamp\n      }\n      uniqueReturningEngaged {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalytics_NotificationsEngagements": {
        "hash": "fbfac6a808e49dc8c86b65dadd0135a9965330946bc1611b68e3ee1a9c2175fa",
        "query": "query ChannelAnalytics_NotificationsEngagements($channelName: String!, $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $numberOfIntervals: Int!, $timeZone: String!) {\n  user(login: $channelName) {\n    id\n    goLiveNotificationsTimeseries(startAt: $startAt, endAt: $endAt, granularity: $granularity, numberOfIntervals: $numberOfIntervals, timeZone: $timeZone) {\n      total\n    }\n  }\n}\n"
    },
    "ChannelAnalyticsCreatorMetrics": {
        "hash": "f38b2e24704a521fc1f229372b0ae4f3c5eea36293c0592e105b1ec0b569f081",
        "query": "query ChannelAnalyticsCreatorMetrics($channelID: ID!, $startAt: Time!, $endAt: Time!, $numberOfIntervals: Int!) {\n  user(id: $channelID) {\n    id\n    login\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: $numberOfIntervals) {\n      items {\n        ...creatorMetricsByInterval\n      }\n    }\n  }\n}\n\nfragment creatorMetricsByInterval on CreatorMetricsByIntervalItem {\n  adBreaksInSecondsString\n  adSecondsPerHour\n  averageViewers\n  clipViewsString\n  clipsCreatedString\n  followsString\n  hostRaidsPercentage\n  liveViewsString\n  maxViewersString\n  minutesStreamedString\n  minutesWatchedString\n  timestamp\n  totalChatMessagesString\n  totalChattersString\n  uniqueViewersString\n  promotionClickString\n  promotionDisplayString\n  uniqueEngagedString\n  uniqueNewEngagedString\n  uniqueReturningEngagedString\n}\n"
    },
    "PayoutChannelRevenues": {
        "hash": "3f05fb54cf750c6046aa4531bdb719831db037cdddc8665a8a3152f0f82ad429",
        "query": "query PayoutChannelRevenues($input: PayoutChannelRevenuesInput!) {\n  payoutChannelRevenues(input: $input) {\n    payoutChannelRevenues {\n      category\n      timestamp\n      payoutAmount {\n        units\n        nanos\n      }\n      refundAmount {\n        units\n        nanos\n      }\n    }\n    error\n  }\n}\n"
    },
    "PayoutsSubCounts": {
        "hash": "fb16ee13f518fb5da1335b65b2f59c5b1b038df749fbd54cf5ad235e96c7cadf",
        "query": "query PayoutsSubCounts($startAt: Time!, $endAt: Time!, $period: TimeSeriesPeriod!, $channel: String!) {\n  creatorDashboard(startAt: $startAt, endAt: $endAt, period: $period, channel: $channel) {\n    channelAnalytics {\n      subCountSeries {\n        subCountSeriesDataPoints {\n          giftSubTierBreakdown {\n            count\n            tier\n          }\n          multiMonthSubTierBreakdown {\n            count\n            tier\n          }\n          paidSubTierBreakdown {\n            count\n            tier\n          }\n          timeStamp\n        }\n        error\n      }\n    }\n  }\n}\n"
    },
    "Channel_Analytics_Revenue": {
        "hash": "27a795c533b1b1d4a486be1733406b02173cb8a58fd6a1753cd6b0e457947319",
        "query": "query Channel_Analytics_Revenue($startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity, $channelID: ID!) {\n  revenues(startAt: $startAt, endAt: $endAt, granularity: $granularity, timeZone: $timeZone, channelID: $channelID) {\n    ...revenueDashboardFragment\n  }\n}\n\nfragment revenueDashboardFragment on RevenueDashboard {\n  revenueTimeSeries {\n    ...revenueTimeSeriesItemFragment\n  }\n  revenuePanel {\n    ...revenuePanelFragment\n  }\n  totalRevenue\n  error\n}\n\nfragment revenuePanelFragment on RevenueProductLines {\n  primeSubscriptions\n  ads\n  adPolls\n  bountyBoard\n  bits\n  gameCommerce\n  extensions\n  experimental\n  polls\n  hypeChat\n  soundBites\n  sponsorships\n  turbo\n  total\n  paidSubscriptions {\n    ...subscriptionsRevenueAggregateFragment\n  }\n  giftSubscriptions {\n    ...subscriptionsRevenueAggregateFragment\n  }\n  multiMonthGiftSubs {\n    ...subscriptionsRevenueAggregateFragment\n  }\n}\n\nfragment revenueTimeSeriesItemFragment on RevenueTimeseriesItem {\n  timestamp\n  twitchSubscriptions\n  primeSubscriptions\n  giftSubscriptions\n  multiMonthSubscriptions\n  bits\n  ads\n  gameCommerce\n  extensions\n  bountyBoard\n  experimental\n  adPolls\n  polls\n  hypeChat\n  soundBites\n  sponsorships\n  turbo\n  total\n  twitchSubscriptionsRefunds\n  giftSubscriptionsRefunds\n}\n\nfragment subscriptionsRevenueAggregateFragment on SubscriptionRevenueAggregate {\n  total\n  tierOneSubs {\n    ...revenueAmountBySubscriptionFragment\n  }\n  tierTwoSubs {\n    ...revenueAmountBySubscriptionFragment\n  }\n  tierThreeSubs {\n    ...revenueAmountBySubscriptionFragment\n  }\n}\n\nfragment revenueAmountBySubscriptionFragment on RevenueAmountBySubscription {\n  subCount\n  value\n}\n"
    },
    "DashboardInsights_Channel": {
        "hash": "e8ad4da4576910883e3a45d10a7627f0d9209d68810fd7058dc68b162c64accc",
        "query": "query DashboardInsights_Channel($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n    roles {\n      isPartner\n      isAffiliate\n      isExtensionsDeveloper\n    }\n    lastBroadcast {\n      id\n    }\n  }\n}\n"
    },
    "NewVsReturning_TimeSeries": {
        "hash": "b54bf8e93b70a4a6fa2f75f854065b0269a09afedec38afa26f7cd6a380373dd",
        "query": "query NewVsReturning_TimeSeries($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      uniqueViewers {\n        timestamp\n        value\n      }\n      uniqueEngaged {\n        timestamp\n        value\n      }\n      uniqueNewEngaged {\n        timestamp\n        value\n      }\n      uniqueReturningEngaged {\n        timestamp\n        value\n      }\n    }\n  }\n}\n"
    },
    "CategoryRankingQuery": {
        "hash": "312446ffdbe7476d09d67f6adbf8682d80cbb7f502c83643ceeb72d29c134157",
        "query": "query CategoryRankingQuery($channelID: ID!, $categoryTag: String!, $languageTag: String!, $timestamp: Time, $experiments: [String!]) {\n  categoryRanking(input: {channelID: $channelID, categoryTag: $categoryTag, languageTag: $languageTag, timestamp: $timestamp, experiments: $experiments}) {\n    categories {\n      ...categoryRankingFragment\n    }\n    error\n  }\n}\n"
    },
    "CategoryReportQuery": {
        "hash": "43a4c3d80edf18a5752a77c868ffaf45a6d9d137e3eb46009f6baa2b70822022",
        "query": "query CategoryReportQuery($channelID: ID!, $languageTag: String, $timestamp: Time, $experiments: [String!]) {\n  categoryReport(input: {channelID: $channelID, languageTag: $languageTag, timestamp: $timestamp, experiments: $experiments}) {\n    filteredTags {\n      ...categoryTagFragment\n    }\n    rating {\n      ...categoryRatingFragment\n    }\n    ranking {\n      categories {\n        ...categoryRankingFragment\n      }\n    }\n    recentCategories {\n      categories {\n        ...recentCategoryFragment\n      }\n      language\n    }\n    defaultTagName\n    error\n    language\n    filteredLanguages\n    channelCcv\n  }\n}\n"
    },
    "IsPartnerQuery": {
        "hash": "236765e9044f07f675c257321dbea107af03f650a0bccbc392e9a7bb5d1d3966",
        "query": "query IsPartnerQuery($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "ChannelAnalytics_StreamsPanel": {
        "hash": "477e77c10737be9089a234471b6f98894914cee11ad59d0aacf31a6f4bc3224f",
        "query": "query ChannelAnalytics_StreamsPanel($channelLogin: String!, $startAt: Time!, $endAt: Time!) {\n  user(login: $channelLogin) {\n    id\n    login\n    streamSessionsByInterval(startAt: $startAt, endAt: $endAt) {\n      startedAt\n      endedAt\n      archiveVideo {\n        id\n        title\n        previewThumbnailURL(height: 45, width: 80)\n        owner {\n          id\n        }\n      }\n    }\n  }\n}\n"
    },
    "CategoryTimeseriesMetrics": {
        "hash": "a559efa762ee3a7a6f6c08d9e047ac26974138f1f47a549460e7feaec44ac722",
        "query": "fragment categoryTimeseriesItem on CategoryTimeseriesItem {\n  timestamp\n  value\n}\n\nfragment groupedTimeseriesItems on GroupedTimeseriesItems {\n  dataset {\n    ...categoryTimeseriesItem\n  }\n  category\n}\n\nquery CategoryTimeseriesMetrics($startAt: Time!, $endAt: Time!, $period: TimeSeriesPeriod!, $params: CategoryTimeseriesMetricsParams!, $channel: String) {\n  creatorDashboard(startAt: $startAt, endAt: $endAt, channel: $channel, period: $period) {\n    categoryTimeseriesMetrics(params: $params) {\n      datasets {\n        ...groupedTimeseriesItems\n      }\n    }\n  }\n}\n"
    },
    "Channel_Analytics_Sub_Counts": {
        "hash": "5ec753c89f947c0ded06e9a27e6e3a7ee264a6fc1b1cad2cbeb0086b11b9b463",
        "query": "query Channel_Analytics_Sub_Counts($startAt: Time!, $endAt: Time!, $period: TimeSeriesPeriod!, $channel: String!) {\n  creatorDashboard(startAt: $startAt, endAt: $endAt, period: $period, channel: $channel) {\n    channelAnalytics {\n      subCountSeries {\n        subCountSeriesDataPoints {\n          giftSubTierBreakdown {\n            count\n            tier\n          }\n          multiMonthSubTierBreakdown {\n            count\n            tier\n          }\n          paidSubTierBreakdown {\n            count\n            tier\n          }\n          timeStamp\n          totalPrimeSubCount\n        }\n        error\n      }\n    }\n  }\n}\n"
    },
    "Dashboard_TopClips": {
        "hash": "4c855f1f07237b78a7f1d6ad0fca8e7a6118cc7f1ae7bc23f3e827e53fe3e67a",
        "query": "query Dashboard_TopClips($login: String!, $limit: Int, $criteria: UserClipsInput) {\n  user(login: $login) {\n    id\n    displayName\n    clips(first: $limit, criteria: $criteria) {\n      ...DashboardTopClipsConnectionFragment\n    }\n  }\n}\n\nfragment DashboardTopClipsConnectionFragment on ClipConnection {\n  edges {\n    node {\n      id\n      title\n      viewCount\n      url\n      curator {\n        id\n        displayName\n      }\n      thumbnailURL(width: 86, height: 45)\n      slug\n      broadcaster {\n        id\n        login\n      }\n    }\n  }\n}\n"
    },
    "InviteOnlyExtensionsPage_InstallExtension": {
        "hash": "b52de8f880e31b45898a101c6450483d6ccdf13b02cdfcc58e75fc2e34455c2f",
        "query": "mutation InviteOnlyExtensionsPage_InstallExtension($input: InstallExtensionInput!) {\n  installExtension(input: $input) {\n    installedExtension {\n      id\n      extension {\n        id\n        clientID\n        version\n      }\n    }\n  }\n}\n"
    },
    "InviteOnlyExtensionPage": {
        "hash": "d9a6445e332cbd3d002aad76b1fb2a37236178e0cd6ec183535ebb1c1e3fafe2",
        "query": "query InviteOnlyExtensionPage($skipCurrentUser: Boolean!, $afterCursor: Cursor) {\n  currentUser @skip(if: $skipCurrentUser) {\n    id\n    cheer {\n      id\n    }\n    login\n    installedExtensions {\n      id\n      extension {\n        id\n      }\n    }\n  }\n  extensionCategory(id: \"whitelisted\") {\n    id\n    extensions(first: 21, after: $afterCursor) {\n      edges {\n        ...InviteOnlyExtensionPage_ExtensionEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment InviteOnlyExtensionPage_ExtensionEdge on ExtensionEdge {\n  cursor\n  node {\n    id\n    authorName\n    clientID\n    iconURLs {\n      discoverySplash\n      square100\n    }\n    isBitsEnabled\n    bitsSupportLevel\n    name\n    self {\n      canInstall\n    }\n    sku\n    state\n    summary\n    vendorCode\n    version\n    views {\n      component {\n        viewerURL\n      }\n      hidden {\n        viewerURL\n      }\n      mobile {\n        viewerURL\n      }\n      panel {\n        viewerURL\n      }\n      videoOverlay {\n        viewerURL\n      }\n    }\n  }\n}\n"
    },
    "removeReactionByContentKey": {
        "hash": "c4ca010630445a1982ec846c90d75f310b20ad571c1d74555a6f0ef58854dd64",
        "query": "mutation removeReactionByContentKey($input: RemoveReactionByContentKeyInput!) {\n  removeReactionByContentKey(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "updateReactionByContentKey": {
        "hash": "e3e5b798ea3092917bb8b73d8d81ada6cd2bd17a93c457c092f20164ed1dd595",
        "query": "mutation updateReactionByContentKey($input: UpdateReactionByContentKeyInput!) {\n  updateReactionByContentKey(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "StoriesChannelBannerFollowButton_User": {
        "hash": "04f389e571e0e9c27c5a2241570b4da14cae2ac0a10b27f375f802ea076756c4",
        "query": "query StoriesChannelBannerFollowButton_User($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    ...followButtonFragment\n  }\n}\n"
    },
    "aggregateReactionsBreakdownByContentKeys": {
        "hash": "4f98199960fdffec5d0680f8337ad33bc5bb1863332490d34a0eb276c42d319e",
        "query": "query aggregateReactionsBreakdownByContentKeys($contentKeys: [ReactionsContentKey!]!) {\n  aggregateReactionsBreakdownByContentKeys(contentKeys: $contentKeys) {\n    totals {\n      ...AggregateReactionsBreakdownByContentKeyFragment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "availableReactionsByContentType": {
        "hash": "e8a4345812c80b19219d0043cf613fb142fc2e5faa55afda4d9f28dd9de0af95",
        "query": "query availableReactionsByContentType($contentType: ReactionsContentType!) {\n  availableReactionsByContentType(contentType: $contentType) {\n    reactions {\n      ...ReactionAssetMetadataFragment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "currentReactionsByContentKeys": {
        "hash": "5265a567db25ff0186a5bb81f53662934e096cc6c154a5c7bd71cd8da03700a5",
        "query": "query currentReactionsByContentKeys($contentKeys: [ReactionsContentKey!]!) {\n  currentReactionsByContentKeys(contentKeys: $contentKeys) {\n    reactions {\n      ...CurrentReactionByContentKeyFragment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "IndividualStoryForViewers": {
        "hash": "7adf6a084fc1f13160d915080e08466cb0229bea2f56b04b6c7c06e99cd066fb",
        "query": "query IndividualStoryForViewers($input: [BatchStoriesByIdInput!]) {\n  batchStoriesByID(input: $input) {\n    result {\n      code\n      story {\n        ...StoryFragment\n      }\n    }\n  }\n}\n"
    },
    "StoryChannelQuery": {
        "hash": "11487ec6d646e3fa48e0223ea2db8be791bf16c2265427188291114d6dfe5478",
        "query": "query StoryChannelQuery($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n  }\n}\n"
    },
    "StorySummary": {
        "hash": "9f0915456c7ccecfbbfc83dbd9de8958c6227be615948d316e9fe9d58a7aa96e",
        "query": "query StorySummary($input: StorySummaryInput!) {\n  storySummary(input: $input) {\n    id\n    anchorType\n    lastSeenAt\n  }\n}\n"
    },
    "updateStorySummaryMutation": {
        "hash": "1eb199df0623eba999f8435c77756ca2ad5ff735ae9169c3811d42c8e2b020d0",
        "query": "mutation updateStorySummaryMutation($input: UpdateStorySummaryInput!) {\n  updateStorySummary(input: $input) {\n    isSuccessful\n  }\n}\n"
    },
    "WithIsStreamLiveQuery": {
        "hash": "5891158e89ed3c4795a4f776e766c86bb3319239163db1b0242f2155d10ed68d",
        "query": "query WithIsStreamLiveQuery($id: ID!) {\n  user(id: $id) {\n    id\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "CommonHooks_BlockUser": {
        "hash": "44b2b8d2c5aaa52afefa860ee2ec77a5ea540c5c7ddadb560157e9981efcc89c",
        "query": "mutation CommonHooks_BlockUser($input: BlockUserInput!) {\n  blockUser(input: $input) {\n    targetUser {\n      id\n      login\n      profileImageURL(width: 28)\n      displayName\n    }\n  }\n}\n"
    },
    "CommonHooks_BlockedUsersWithDetails": {
        "hash": "323cd3fd24f843fb88544f0367f8f14c1d4b3c52ecf4b6e913f61ba02365ae25",
        "query": "query CommonHooks_BlockedUsersWithDetails() {\n  currentUser {\n    id\n    blockedUsersWithMetadata(first: 1000, after: \"\") {\n      edges {\n        node {\n          id\n          login\n          profileImageURL(width: 28)\n          displayName\n        }\n        blockedAt\n      }\n    }\n  }\n}\n"
    },
    "CommonHooks_BlockedUsers": {
        "hash": "c04c6dafc2ac3da7805faefd4865cb69bb7424cdfa8b89754efbee46044b402d",
        "query": "query CommonHooks_BlockedUsers() {\n  currentUser {\n    id\n    blockedUsers {\n      id\n      login\n    }\n  }\n}\n"
    },
    "CommonHooks_UnblockUser": {
        "hash": "100b8155c0a23e682762dea5f3b46e27524c71a23ebf5b8c64812c8dd4ab353e",
        "query": "mutation CommonHooks_UnblockUser($input: UnblockUserInput!) {\n  unblockUser(input: $input) {\n    targetUser {\n      id\n      login\n      profileImageURL(width: 28)\n      displayName\n    }\n  }\n}\n"
    },
    "AvailableEmotesForChannelPaginated": {
        "hash": "cd5dd924d086f10c6f5fdc139c590dfd932533e50cebd74ef528d9ae4e74055d",
        "query": "query AvailableEmotesForChannelPaginated($channelID: ID!, $withOwner: Boolean!, $pageLimit: Int!, $cursor: Cursor) {\n  channel(id: $channelID) {\n    id\n    self {\n      availableEmoteSetsPaginated(pageLimit: $pageLimit, after: $cursor) {\n        edges {\n          ...EmoteSetsEdgeFragment\n        }\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n}\n\nfragment EmoteSetsEdgeFragment on EmoteSetsEdge {\n  cursor\n  node {\n    id\n    emotes {\n      id\n      setID\n      token\n      modifiers {\n        code\n        name\n      }\n      type\n      assetType\n    }\n    owner @include(if: $withOwner) {\n      id\n      login\n      displayName\n      profileImageURL(width: 28)\n    }\n  }\n}\n"
    },
    "AvailableEmotesForChannel": {
        "hash": "bd801f848a0d039ad930746849945b73bcab61df947b54e62d96c1bed501eb5c",
        "query": "query AvailableEmotesForChannel($channelID: ID!, $withOwner: Boolean!) {\n  channel(id: $channelID) {\n    id\n    self {\n      availableEmoteSets {\n        id\n        emotes {\n          id\n          setID\n          token\n          modifiers {\n            code\n            name\n          }\n          type\n          assetType\n        }\n        owner @include(if: $withOwner) {\n          id\n          login\n          displayName\n          profileImageURL(width: 28)\n        }\n      }\n    }\n  }\n}\n"
    },
    "EmotesForChannelFollowStatus": {
        "hash": "558badfa28748bf312bdd1c26ea112cf21df73d817af26162e79eec972adc0f1",
        "query": "query EmotesForChannelFollowStatus($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      follower {\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "CommunityOnboardingAllowlist": {
        "hash": "8db5f3536b5f8c400b97373710c63005ca358d494715c40148928b95d28a6d29",
        "query": "query CommunityOnboardingAllowlist($channelID: ID!) {\n  communityOnboarding {\n    channelAllowLists(channelID: $channelID) {\n      experimentName\n    }\n  }\n}\n"
    },
    "BlockedUsers": {
        "hash": "1d6306849bef59772f33d71ffd102de5092c4d443960128026d0a6fa5d4258ec",
        "query": "query BlockedUsers() {\n  currentUser {\n    id\n    blockedUsers {\n      id\n    }\n  }\n}\n"
    },
    "UserEmotes": {
        "hash": "808cf5abc7f17296c42fd92c399a8da9afe0a7dde297af7a41205049c34f361b",
        "query": "query UserEmotes($withOwner: Boolean!) {\n  currentUser {\n    id\n    emoteSets {\n      id\n      emotes {\n        id\n        setID\n        token\n        modifiers {\n          code\n          name\n        }\n        type\n      }\n      owner @include(if: $withOwner) {\n        id\n        login\n        displayName\n        profileImageURL(width: 28)\n      }\n    }\n  }\n}\n"
    },
    "UserModStatus": {
        "hash": "7c225c7cee4b787380bda6b94fac518f45177889d339173cf993220deedfb6c5",
        "query": "query UserModStatus($userID: ID!, $channelID: String!) {\n  user(id: $userID) {\n    id\n    login\n    isModerator(channelID: $channelID)\n  }\n}\n"
    },
    "Dashboard_CensusGetBirthdate": {
        "hash": "7dba0339e41eb66258596bb30ebfde0e0566052ee8441192017651aff94d266e",
        "query": "query Dashboard_CensusGetBirthdate() {\n  currentUser {\n    id\n    login\n    onboardingInvitations {\n      payout {\n        id\n        workflow {\n          id\n          registration {\n            birthdate\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "AccessGetFeatureClipRestrictionsQuery": {
        "hash": "2e2eea96056dc073e8240fb7d4445dca30438324203663f987b650bb55f87405",
        "query": "query AccessGetFeatureClipRestrictionsQuery($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      clipsSettings {\n        featuringRestrictedTo {\n          shouldAllowMods\n        }\n      }\n    }\n  }\n}\n"
    },
    "AccessGetUserQuery": {
        "hash": "e2867454c59ac857d121a6cda8b9fbeae3b794ca11178f155edfd8d2865ad4f2",
        "query": "query AccessGetUserQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n  }\n}\n"
    },
    "AccessIsAdsPreRollEnabledQuery": {
        "hash": "43fd5757bf3204b9055640e2c23fbe60e694946d06b7da77722645794f9de908",
        "query": "query AccessIsAdsPreRollEnabledQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    prerollFreeTimeSeconds\n    adProperties {\n      disablePrerollsAbility {\n        hasDisablePrerollsAbilityAccess\n        hasDisablePrerollsAbilityEnabled\n      }\n    }\n  }\n}\n"
    },
    "AccessIsAffiliateQuery": {
        "hash": "bfee93eda061f5794b72e192be74274e0ad576ee1cf21806abf005b866a5cd3a",
        "query": "query AccessIsAffiliateQuery($channelLogin: String!, $isChannelLoginSameAsUserLogin: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    payoutInvite @include(if: $isChannelLoginSameAsUserLogin) {\n      id\n      category\n    }\n    roles {\n      isAffiliate\n    }\n  }\n}\n"
    },
    "AccessIsBountiesEnabledQuery": {
        "hash": "77363436e2b19ca2f7325f253d3c1cac27c18677f9f8dcccd8c83efcc65c6036",
        "query": "query AccessIsBountiesEnabledQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    bountyBoardSettings {\n      status\n    }\n  }\n}\n"
    },
    "AccessIsChannelEditorQuery": {
        "hash": "a9d264d1498f5ddbc016488fe55de264a06ae869503edeea1ae56808516a3aa1",
        "query": "query AccessIsChannelEditorQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "AccessIsChannelModeratorQuery": {
        "hash": "23a0855c3e2f7fdb026c68fb4c491dd7b48da447b6b9428b4689845d7530d1be",
        "query": "query AccessIsChannelModeratorQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      isModerator\n    }\n  }\n}\n"
    },
    "AccessIsChannelPointsAvailableQuery": {
        "hash": "f033d380c3903bf02418267bc619c87a7d61602c7e96ea40fee007be6313c889",
        "query": "query AccessIsChannelPointsAvailableQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isAvailable\n      }\n    }\n  }\n}\n"
    },
    "AccessIsChannelPointsEnabledQuery": {
        "hash": "711965a7c853923ed94e76a967475e78f46c3425e7f8dc2be48116cf12de4567",
        "query": "query AccessIsChannelPointsEnabledQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "AccessIsChannelPointsPredictionsEnabledQuery": {
        "hash": "ad1ddaf48830cbbaf61e1deb57fb59f5d546f008beed019d7ecef354f6839d97",
        "query": "query AccessIsChannelPointsPredictionsEnabledQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      predictionSettings {\n        isEligibleForPredictions\n        canModeratorsManagePredictions\n      }\n    }\n  }\n}\n"
    },
    "AccessIsCommunityMomentsEnabledQuery": {
        "hash": "3d6b318b5e91332faa528ae0e50afb202f60091f5256b1a7d4387da13f54dbf5",
        "query": "query AccessIsCommunityMomentsEnabledQuery($channelID: ID!) {\n  experiment {\n    isInCommunityMomentsExperiment(channelID: $channelID)\n  }\n}\n"
    },
    "AccessIsCreatorGiftsAvailableQuery": {
        "hash": "edcd427b43f4d3f5c009370138d8d5ba11cc266f923febeb2a193ba7c2e3259f",
        "query": "query AccessIsCreatorGiftsAvailableQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    creatorGifting {\n      id\n      subscriptionsBalance\n    }\n  }\n}\n"
    },
    "UserDJStatusQuery": {
        "hash": "25b510b976ce9cf4a28803a0619a25c64f045782cba3f0aa9e44ee7445bf7c5d",
        "query": "query UserDJStatusQuery($login: String) {\n  user(login: $login) {\n    id\n    djStatus {\n      programState\n      lastProgramUpdate\n      isOptOutBlocked\n    }\n  }\n}\n"
    },
    "AccessIsExtensionsDeveloperQuery": {
        "hash": "7ca96bb3d5cb2ccc27257cf033d7e213768521e9e9deb8c4c3a332cc84f82a5d",
        "query": "query AccessIsExtensionsDeveloperQuery($channelLogin: String!, $isChannelLoginSameAsUserLogin: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    payoutInvite @include(if: $isChannelLoginSameAsUserLogin) {\n      id\n      category\n    }\n    roles @include(if: $isChannelLoginSameAsUserLogin) {\n      isExtensionsDeveloper\n    }\n  }\n}\n"
    },
    "AccessIsGlobalModQuery": {
        "hash": "3ce5e649d550fe4af9f1927bb401f5c14029305490656d89a00ecae52dc98e61",
        "query": "query AccessIsGlobalModQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isGlobalMod\n    }\n  }\n}\n"
    },
    "AccessIsPartnerQuery": {
        "hash": "b40f92e63834fcdf950c841ab526b6b1f4ce288e0cc7141c07a0ac7fec2f37a0",
        "query": "query AccessIsPartnerQuery($channelLogin: String!, $isChannelLoginSameAsUserLogin: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    payoutInvite @include(if: $isChannelLoginSameAsUserLogin) {\n      id\n      category\n    }\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "PollChannelSettings": {
        "hash": "da0d8a1bcc704b080fc70b49dd0f79602756808231f9406e30f5b8ca9289f00d",
        "query": "query PollChannelSettings($channelID: ID, $channelLogin: String) {\n  pollChannelSettings(channelID: $channelID, channelLogin: $channelLogin) {\n    hasPollsAccess\n  }\n}\n"
    },
    "AccessIsSiteAdminQuery": {
        "hash": "19e69b2ea46a025914d6dc0d38f2560a35c47f693533b5b2b40d3e3608ea2126",
        "query": "query AccessIsSiteAdminQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isSiteAdmin\n    }\n  }\n}\n"
    },
    "SponsorshipChannelSettings": {
        "hash": "742fa88a5b26c6602d40d102eeaa2702e08bcaac30cece8db8c61327762ad877",
        "query": "query SponsorshipChannelSettings($channelLogin: String!) {\n  userSponsorshipSettings(input: {userLogin: $channelLogin}) {\n    activationSettings {\n      channelSkinVideoOverlayAssetPosition\n    }\n    isProfileEligible\n  }\n}\n"
    },
    "AccessIsStreamDelayEnabledQuery": {
        "hash": "80091cc095492d2319e591b1021f351329fe6722613e39f2de074e9fdb7972f4",
        "query": "query AccessIsStreamDelayEnabledQuery($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    videoStreamSettings {\n      isDelayEnabled\n    }\n  }\n}\n"
    },
    "AccessIsSubscriptionsEnabledQuery": {
        "hash": "7a35d350899568fe0a1e212d6651f4ba19428abda1913f3df989cb674d7e596a",
        "query": "query AccessIsSubscriptionsEnabledQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    subscriptionProducts {\n      id\n    }\n  }\n}\n"
    },
    "AccessMaxAdBreakLengthQuery": {
        "hash": "5da41914d03b83bdd697815aabeb5b2ea961909f951d7d24f49aee284047b439",
        "query": "query AccessMaxAdBreakLengthQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    adProperties {\n      maxAdBreakLength\n    }\n  }\n}\n"
    },
    "ActivityFilterContextQuery": {
        "hash": "8be372c354be9e319abef2d91e33fccf0a6b529324106e6f361bf816ca914d0e",
        "query": "fragment filterCategory on ActivityFeedFilterCategory {\n  id\n  displayName\n}\n\nquery ActivityFilterContextQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    activityFeed {\n      filterCategories {\n        ...filterCategory\n      }\n    }\n  }\n}\n"
    },
    "GlobalBadges": {
        "hash": "6d82b14f0fd123122df45a72233596151295dd307e8992add3cf0ce6eaa217c6",
        "query": "query GlobalBadges() {\n  badges {\n    ...badge\n  }\n}\n"
    },
    "BitsConfigContext_Channel": {
        "hash": "f8aadadc6e98e27e7b986283ee78c334f8ab142ff10dfe73f4af3b7af23ae076",
        "query": "query BitsConfigContext_Channel($login: String!) {\n  user(login: $login) {\n    id\n    cheer {\n      id\n      cheerGroups {\n        ...cheermoteGroup\n      }\n      isBitsEnabled\n      settings {\n        id\n        cheerMinimumBits\n      }\n    }\n  }\n}\n"
    },
    "BitsConfigContext_SharedChatChannels": {
        "hash": "c67a03d64c483bc60ff9044760f493c1dbe12c5ca1d5e886b074dfffd744e434",
        "query": "query BitsConfigContext_SharedChatChannels($ids: [ID!]) {\n  users(ids: $ids) {\n    id\n    cheer {\n      id\n      cheerGroups {\n        ...cheermoteGroup\n      }\n    }\n  }\n}\n"
    },
    "BitsConfigContext_Global": {
        "hash": "c17bf500c826a344e7f5c4655d60ea499235ea6e60f06231d908c8a2b04ae253",
        "query": "query BitsConfigContext_Global() {\n  ...globalCheerInfo\n}\n"
    },
    "BuyBitsCheckout": {
        "hash": "d7239b0e4c5c084d088de415f72ca29d99c00128c72885fbe9b41647cd063aec",
        "query": "query BuyBitsCheckout() {\n  currentUser {\n    id\n    bitsUserState\n  }\n}\n"
    },
    "CommunitySupportSettings": {
        "hash": "f6f4ac545d19aeb22b49236c5b89465aae5bdf83b114c16c3a728c4088eb9702",
        "query": "query CommunitySupportSettings($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    login\n    settings {\n      leaderboard {\n        isCheerEnabled\n        isSubGiftEnabled\n        isClipEnabled\n        defaultLeaderboard\n        timePeriod\n      }\n      recentChannelSupportEvents {\n        isOptedOut\n      }\n    }\n  }\n}\n"
    },
    "UseLive": {
        "hash": "b3c75c26c5b9700d2bd807f16162ea62acac582f4abdca054639d476ebe3b036",
        "query": "query UseLive($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "ChatAdAlert_SetChannelAdSchedule": {
        "hash": "d602ad942b61e5ce53803c480e53eb65aa1727a720bb51396b1f4d5f0ded2dd2",
        "query": "mutation ChatAdAlert_SetChannelAdSchedule($input: SetChannelAdScheduleInput!) {\n  setChannelAdSchedule(input: $input) {\n    targetChannelID\n    isChatReminderEnabled\n  }\n}\n"
    },
    "IncomingAdAlert_SnoozeAd": {
        "hash": "46c7533d87582667d381e66598ff91534ff90cb4171e0ac827a63501b41e9e0e",
        "query": "mutation IncomingAdAlert_SnoozeAd($input: SnoozeAdInput!) {\n  snoozeAd(input: $input) {\n    status\n  }\n}\n"
    },
    "AdsSchedulerService_QueryAdProperties": {
        "hash": "19bc0f1e1321010834ad54ffa01e99a0b7ddcd5a34bf790947caac5d2a4a52f9",
        "query": "query AdsSchedulerService_QueryAdProperties($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        isAdScheduleEnabled\n        reminder {\n          seconds\n          isChatReminderEnabled\n          isModChatReminderEnabled\n        }\n        adSchedule {\n          runAtTime\n          durationSeconds\n        }\n        snooze {\n          currentAmount\n          maxAmount\n          durationSeconds\n        }\n      }\n    }\n  }\n}\n"
    },
    "SendAnnouncementMessage": {
        "hash": "79787dba36d6213b91d691b1d2e7033bfd109d30ddbf6b603751222fbdb0c285",
        "query": "mutation SendAnnouncementMessage($input: SendAnnouncementMessageInput!) {\n  sendAnnouncementMessage(input: $input) {\n    error\n  }\n}\n"
    },
    "ChatScreenReaderAutoAnnounce": {
        "hash": "f77772b2d2627955b773cc3460fe01d4d8e1bc03ff7d93226c9e140394225360",
        "query": "query ChatScreenReaderAutoAnnounce() {\n  currentUser {\n    id\n    isChatScreenReaderAutoAnnounceEnabled\n  }\n}\n"
    },
    "AutoModSender": {
        "hash": "3a06183100f3c98377b75b7e587837666e2d4b19edc4dc181f9e53d6bf5b8d5d",
        "query": "query AutoModSender($senderID: ID!, $channelID: ID!) {\n  user(id: $senderID) {\n    ...messageSender\n  }\n}\n"
    },
    "SyncedSettingsSetCelebrations": {
        "hash": "037787657ca1e79944c6bd9015e40a5200fbd6309c6d4b5add6e7839ec99c185",
        "query": "mutation SyncedSettingsSetCelebrations($input: SetCelebrationsEnabledInput!) {\n  setCelebrationsEnabled(input: $input) {\n    isCelebrationsEnabled\n  }\n}\n"
    },
    "SyncedSettingsCelebrations": {
        "hash": "f6116a0dfc753979ad72ec2fe3ef681440103cf80abe878f72d343209c590ccb",
        "query": "query SyncedSettingsCelebrations() {\n  currentUser {\n    id\n    chatUISettings {\n      isCelebrationsEnabled\n    }\n  }\n}\n"
    },
    "ChatFilterContextManager_User": {
        "hash": "b31bcfba187b8f67147f077d2b9ca65d1df5689a3988879c5cdbcf742e1b4b35",
        "query": "query ChatFilterContextManager_User() {\n  currentUser {\n    id\n    createdAt\n  }\n}\n"
    },
    "ChatInput": {
        "hash": "00527c1be7278cf0707ad8566bb2f3d268c82f4c5bc7ff54d616b7a58e31f5c1",
        "query": "query ChatInput($channelLogin: String!, $isEmbedded: Boolean!) {\n  currentUser {\n    id\n    bitsBalance\n    isPartner @include(if: $isEmbedded)\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      chatModeratorStrikeStatus {\n        ...chatModeratorStrikeDetails\n      }\n    }\n    displayName\n    profileImageURL(width: 50)\n    cheer {\n      id\n      settings {\n        id\n        emoteMinimumBits\n        cheerMinimumBits\n        event\n      }\n    }\n  }\n}\n"
    },
    "SharedChatCanRequestUnban": {
        "hash": "7e91d0910fb905b6a2398e2846753d3f51a943dcf3b76ef561eac40044c0103a",
        "query": "query SharedChatCanRequestUnban($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    self {\n      canRequestUnban\n    }\n  }\n}\n"
    },
    "ChatReplies": {
        "hash": "e0294313b5f4dd5a6116bc081fed3ffe9428646c8b667dd49f1aa0c296697856",
        "query": "query ChatReplies($messageID: ID!) {\n  message(id: $messageID) {\n    ...replyMessage\n    replies {\n      nodes {\n        ...replyMessage\n      }\n      totalCount\n    }\n  }\n}\n\nfragment replyMessage on Message {\n  id\n  deletedAt\n  sentAt\n  content {\n    ...messageContent\n  }\n  sender {\n    id\n    login\n    displayName\n  }\n  senderBadges {\n    setID\n    version\n    id\n  }\n  senderChatColor\n  sourceChannel {\n    id\n  }\n  sourceSenderBadges {\n    setID\n    version\n    id\n  }\n}\n"
    },
    "AcknowledgeChatWarning": {
        "hash": "12874f51695b554ec9aa4c0ffb46f1e799a95b1348a6fc87cc192945b693c676",
        "query": "mutation AcknowledgeChatWarning($input: AcknowledgeChatWarningInput!) {\n  acknowledgeChatWarning(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChatInput_SendCheer": {
        "hash": "024050911efbd79d1bab9363136503d35c68cb1ddbb2c74602e68a917ad81a3e",
        "query": "mutation ChatInput_SendCheer($input: SendCheerInput!) {\n  sendCheer(input: $input) {\n    id\n    currentUser {\n      id\n      bitsBalance\n    }\n    validationError {\n      code\n      message\n      messageContent {\n        text\n        fragments {\n          text\n          content {\n            ... on AutoMod {\n              topics {\n                type\n                weight\n              }\n            }\n            ... on CheermoteToken {\n              bitsAmount\n              prefix\n              tier\n            }\n            ... on Emote {\n              id\n              setID\n              token\n            }\n            ... on User {\n              id\n              login\n              displayName\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "Announcement_CreatorColor": {
        "hash": "fb597d16f78f383c5547ba10e407d18910ce32b687f5a1cddf5834b3ef152e79",
        "query": "query Announcement_CreatorColor($login: String!) {\n  user(login: $login) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "ChatLine_SubsOnlyUpsell_UserSubscriptionProducts": {
        "hash": "9d6b7d98723e54839ddb81d1595702ce875cf7bf1a8f134310d936f1e87ed6f7",
        "query": "query ChatLine_SubsOnlyUpsell_UserSubscriptionProducts($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      url\n    }\n  }\n}\n"
    },
    "SyncedSettingsSetChatPauseSetting": {
        "hash": "53e70723c4383841e0ac9dba7ef0988deca33d78b1406512d1826da6e409bcd4",
        "query": "mutation SyncedSettingsSetChatPauseSetting($input: SetChatPauseSettingInput!) {\n  setChatPauseSetting(input: $input) {\n    chatPauseSetting\n  }\n}\n"
    },
    "SyncedSettingsChatPauseSetting": {
        "hash": "9c8927f949e836a053c17214f16f325ba5ed5d2f2d05d88093749056cad7e3f0",
        "query": "query SyncedSettingsChatPauseSetting() {\n  currentUser {\n    id\n    chatUISettings {\n      chatPauseSetting\n    }\n  }\n}\n"
    },
    "ChatRoomState": {
        "hash": "e3b0ef3670e132507eb8fdda7a715411e1bd363b99e2146e01f665c51c0bf4b0",
        "query": "fragment chatPartialVerification on ChatPartialVerificationConfig {\n  minimumAccountAgeInMinutes\n  minimumFollowerAgeInMinutes\n  shouldRestrictBasedOnAccountAge\n  shouldRestrictFirstTimeChatters\n  shouldRestrictBasedOnFollowerAge\n}\n\nfragment chatAccountVerificationOptions on ChatAccountVerificationOptions {\n  emailVerificationMode\n  partialEmailVerificationConfig {\n    ...chatPartialVerification\n  }\n  phoneVerificationMode\n  partialPhoneVerificationConfig {\n    ...chatPartialVerification\n  }\n  isSubscriberExempt\n  isVIPExempt\n  isModeratorExempt\n}\n\nquery ChatRoomState($login: String) {\n  user(login: $login) {\n    id\n    chatSettings {\n      isEmoteOnlyModeEnabled\n      followersOnlyDurationMinutes\n      slowModeDurationSeconds\n      accountVerificationOptions {\n        ...chatAccountVerificationOptions\n      }\n    }\n    subscriptionProducts {\n      id\n      hasSubOnlyChat\n    }\n  }\n}\n"
    },
    "ChatList_ActiveCharityCampaign": {
        "hash": "aa8ff75b9cb483c4fa77e14e36c7ba8339aefc943357beaddbd93ad6faca9eb7",
        "query": "query ChatList_ActiveCharityCampaign($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    activeCharityCampaign {\n      ...charityCampaign\n    }\n  }\n}\n"
    },
    "ChatList_Badges": {
        "hash": "e43a054102dba32c0ea226b5687af0ceec7fbeebbfdd9c65dd85e798155d7dcd",
        "query": "query ChatList_Badges($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    primaryColorHex\n    broadcastBadges {\n      ...badge\n    }\n    self {\n      selectedBadge {\n        ...badge\n      }\n      displayBadges {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "Chat_ChannelData": {
        "hash": "213dcc0a45ee3e04b6085c54d728236561dab73ce9c1f188e62115abe8d940a9",
        "query": "query Chat_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n    chatSettings {\n      rules\n    }\n    self {\n      isEditor\n      isModerator\n      isVIP\n    }\n  }\n}\n"
    },
    "Chat_UserData": {
        "hash": "31846a9010815bdc3cd889ebab5e54a6ec862df090dda27ace683e544555e89e",
        "query": "query Chat_UserData() {\n  user {\n    id\n    displayName\n    login\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n    }\n  }\n}\n"
    },
    "ClipsExperimentEnrollmentStatus": {
        "hash": "b86d4859084656940618b7b1b5020f1e1ab81a916dd5c6aeb1a72d6b3f76b73c",
        "query": "query ClipsExperimentEnrollmentStatus($channelID: ID!) {\n  isEnrolledInClipsExperiment(channelID: $channelID) {\n    id\n    isEnrolled\n  }\n}\n"
    },
    "IsParticipatingDJ": {
        "hash": "08e59c3b9dbc59967311fdbb4941f1afbc1583c64127db4778913f72732b1e6b",
        "query": "query IsParticipatingDJ($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    roles {\n      isParticipatingDJ\n    }\n  }\n}\n"
    },
    "ClipsChatCard_Clip": {
        "hash": "b406394b6684f3d2d2a06f31051519fdbcb4593f0ae5c805ccffa9c50cb636ff",
        "query": "query ClipsChatCard_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    thumbnailURL\n    title\n    slug\n    url\n    curator {\n      id\n      displayName\n    }\n    broadcaster {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "SyncedSettingsSetDeletedMessageDisplaySetting": {
        "hash": "ad0b4f5aaaf6e23a082259dca7022d87bf7aa76182864da705f69860a411c753",
        "query": "mutation SyncedSettingsSetDeletedMessageDisplaySetting($input: SetDeletedMessageDisplaySettingInput!) {\n  setDeletedMessageDisplaySetting(input: $input) {\n    deletedMessageDisplaySetting\n  }\n}\n"
    },
    "SyncedSettingsDeletedMessageDisplaySetting": {
        "hash": "1202b39eab9804dae529c68b2e5ebaf7065bb19d71f367e4a91718c8de5a5cb7",
        "query": "query SyncedSettingsDeletedMessageDisplaySetting() {\n  currentUser {\n    id\n    chatUISettings {\n      deletedMessageDisplaySetting\n    }\n  }\n}\n"
    },
    "Core_Services_Spade_EmoteCard_User": {
        "hash": "d2c1f01e565e95a00232df9829b81f74a9d7a3dcca406a0ea1e7f075c4bd7f4a",
        "query": "query Core_Services_Spade_EmoteCard_User($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    hasPrime\n    self {\n      canPrimeSubscribe\n      subscriptionBenefit {\n        id\n        tier\n        purchasedWithPrime\n      }\n    }\n  }\n}\n"
    },
    "EmoteCard": {
        "hash": "026e28617c4f4d620d2b9073facf58791d9828c57dfa6701457ae9d85882b621",
        "query": "query EmoteCard($emoteID: ID!, $octaneEnabled: Boolean!, $artistEnabled: Boolean!) {\n  emote(id: $emoteID) {\n    id\n    type\n    subscriptionTier @include(if: $octaneEnabled)\n    token\n    setID\n    artist @include(if: $artistEnabled) {\n      id\n      login\n      displayName\n    }\n    owner {\n      id\n      login\n      displayName\n      channel {\n        id\n        localEmoteSets {\n          id\n          emotes {\n            id\n            token\n          }\n        }\n      }\n      stream {\n        id\n        type\n      }\n      self {\n        follower {\n          followedAt\n        }\n        subscriptionBenefit {\n          id\n          tier\n        }\n      }\n      subscriptionProducts {\n        id\n        displayName\n        tier\n        name\n        url\n        emotes {\n          id\n          token\n        }\n        priceInfo {\n          id\n          currency\n          price\n        }\n      }\n    }\n    subscriptionProduct @skip(if: $octaneEnabled) {\n      ...subProduct\n    }\n    subscriptionSummaries @include(if: $octaneEnabled) {\n      ...subSummary\n    }\n    bitsBadgeTierSummary {\n      threshold\n      self {\n        isUnlocked\n        numberOfBitsUntilUnlock\n      }\n    }\n  }\n}\n\nfragment subSummary on SubscriptionSummary {\n  id\n  name\n  offers {\n    id\n    currency\n    exponent\n    price\n    promoDescription\n  }\n  emotes {\n    id\n    token\n    subscriptionTier\n  }\n  url\n  tier\n  modifiers {\n    code\n    name\n    subscriptionTier\n  }\n  self {\n    subscribedTier\n    cumulativeTenure\n  }\n}\n"
    },
    "SyncedSettingsSetReadableChatColors": {
        "hash": "c8a10e72766e3b9839501538a8d9e16af1a9d762d698f66a65832883cdb552cd",
        "query": "mutation SyncedSettingsSetReadableChatColors($input: SetReadableChatColorsEnabledInput!) {\n  setReadableChatColorsEnabled(input: $input) {\n    isReadableChatColorsEnabled\n  }\n}\n"
    },
    "SyncedSettingsReadableChatColors": {
        "hash": "308a2db9f0b2e02526c92c47347ea21d81b4df90d7a7e297f84a37980731c44c",
        "query": "query SyncedSettingsReadableChatColors() {\n  currentUser {\n    id\n    chatUISettings {\n      isReadableChatColorsEnabled\n    }\n  }\n}\n"
    },
    "StreamChat": {
        "hash": "0e18a7e6a30d455f94c59ddc5697fce904b4410c2b72f922384a31a3ab87e0b4",
        "query": "query StreamChat($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    roles {\n      isPartner\n      isAffiliate\n    }\n    self {\n      banStatus {\n        isPermanent\n      }\n      isChannelMember\n      isModerator\n      subscriptionBenefit {\n        id\n      }\n    }\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "VideoChatCard_Video": {
        "hash": "c289d0aa28cb97a6bca96ef46f4450aea40f3260805ac6e69605031224ccedaa",
        "query": "query VideoChatCard_Video($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    title\n    previewThumbnailURL(width: 90, height: 51)\n    publishedAt\n    owner {\n      id\n      login\n      displayName\n    }\n  }\n}\n"
    },
    "Chat_BanUserFromChatRoom": {
        "hash": "bd0d1f7fd786a72c5dcfb04fcd447b5a3c70b5fcc1ea5176428b547c74d40ccf",
        "query": "mutation Chat_BanUserFromChatRoom($input: BanUserFromChatRoomInput!) {\n  banUserFromChatRoom(input: $input) {\n    ban {\n      bannedUser {\n        id\n        login\n        displayName\n      }\n      createdAt\n      expiresAt\n      isPermanent\n      moderator {\n        id\n        login\n        displayName\n      }\n      reason\n    }\n    error {\n      code\n      minTimeoutDurationSeconds\n      maxTimeoutDurationSeconds\n    }\n  }\n}\n"
    },
    "Chat_DeleteChatMessage": {
        "hash": "51d6820f335e8cafe6a758087fe01e09a9568c62f8b2d83ce4a6dce3703b5df9",
        "query": "mutation Chat_DeleteChatMessage($input: DeleteChatMessageInput!) {\n  deleteChatMessage(input: $input) {\n    responseCode\n    message {\n      id\n      sender {\n        id\n        login\n        displayName\n      }\n      content {\n        text\n      }\n    }\n  }\n}\n"
    },
    "Chat_UnbanUserFromChatRoom": {
        "hash": "363fdda3fae6f861a7fbe400b08cfb9f41cace75997031033cc22952587f8d9f",
        "query": "mutation Chat_UnbanUserFromChatRoom($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      bannedUser {\n        id\n        login\n        displayName\n      }\n      createdAt\n      expiresAt\n      isPermanent\n      moderator {\n        id\n        login\n        displayName\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChatRoomBanStatus": {
        "hash": "c1f84679cef5b7b53ecb9d6d4a8f686e637d94e82e3eb0cd83a71472ead1d989",
        "query": "query ChatRoomBanStatus($targetUserID: ID!, $channelID: ID!) {\n  chatRoomBanStatus(channelID: $channelID, userID: $targetUserID) {\n    bannedUser {\n      id\n      login\n      displayName\n    }\n    createdAt\n    expiresAt\n    isPermanent\n    moderator {\n      id\n      login\n      displayName\n    }\n    reason\n  }\n  user(id: $targetUserID, lookupType: ALL) {\n    id\n    login\n  }\n}\n"
    },
    "CurrentUserBannedStatus": {
        "hash": "b388fc953307abfe1964d9de20f476e33c28c76bdff9688464a1f653e6533146",
        "query": "query CurrentUserBannedStatus($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      banStatus {\n        isPermanent\n        expiresAt\n        expiresInMs\n        reason\n      }\n    }\n  }\n}\n"
    },
    "ChatModeratorStrikeStatus": {
        "hash": "e369aad6ff3b22365e15a581dd3b96ac00022705e0c3a0f28e3cb6ddddb11559",
        "query": "query ChatModeratorStrikeStatus($targetUserID: ID!, $channelID: ID!) {\n  chatModeratorStrikeStatus(channelID: $channelID, userID: $targetUserID) {\n    id\n    moderatedUser {\n      id\n      login\n      displayName\n    }\n    roomOwner {\n      id\n      login\n      displayName\n    }\n    banDetails {\n      id\n      bannedBy {\n        id\n        displayName\n        login\n      }\n      createdAt\n      reason\n    }\n    timeoutDetails {\n      id\n      timedOutBy {\n        id\n        displayName\n        login\n      }\n      createdAt\n      expiresAt\n      expiresInMs\n      reason\n    }\n    warningDetails {\n      id\n      warnedBy {\n        id\n        displayName\n        login\n      }\n      createdAt\n      reason\n      chatRulesCited\n    }\n  }\n}\n"
    },
    "CurrentUserStrikeStatus": {
        "hash": "1cab8a5cbec5b2a7280e49784a3446f912d48e6e0ae53aa9ff3f95c43ed72537",
        "query": "query CurrentUserStrikeStatus($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      chatModeratorStrikeStatus {\n        id\n        banDetails {\n          id\n          createdAt\n          reason\n        }\n        timeoutDetails {\n          id\n          expiresAt\n          expiresInMs\n          reason\n        }\n        warningDetails {\n          id\n          chatRulesCited\n          reason\n        }\n      }\n    }\n  }\n}\n"
    },
    "SharedChatModeratorStrikes": {
        "hash": "ba89dedfe9cb7c91bba4aead21ebcdefcebd398936269af0917b54b5e998c2ed",
        "query": "query SharedChatModeratorStrikes($channelIDs: [ID!]!) {\n  users(ids: $channelIDs) {\n    id\n    displayName\n    login\n    self {\n      chatModeratorStrikeStatus {\n        ...chatModeratorStrikeDetails\n      }\n    }\n  }\n}\n"
    },
    "ChatRestrictions": {
        "hash": "36b34ba9b30c715bafd702ee64a112f490372c415a387ec4cfb0f275765d25fb",
        "query": "query ChatRestrictions($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      chatRestrictedReasons\n      lastRecentChatMessageAt\n      follower {\n        followedAt\n      }\n      banStatus {\n        isPermanent\n      }\n      isFirstTimeChatter\n      subscriptionBenefit {\n        id\n      }\n      isVIP\n      isModerator\n    }\n    chatSettings {\n      requireVerifiedAccount\n    }\n  }\n  currentUser {\n    id\n    createdAt\n    isEmailVerified\n    isPhoneNumberVerified\n  }\n}\n"
    },
    "MessageBuffer_Channel": {
        "hash": "4b826143a98e6290b972d70cb2609e23d8e089b6a8f6402af6e199b7397b7fec",
        "query": "query MessageBuffer_Channel($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    chatSettings {\n      chatDelayMs\n    }\n  }\n}\n"
    },
    "MessageBufferChatHistory": {
        "hash": "669f3a6efde2439dadf66c903bef190042ac51c7b6ebd8272db072a77cdaf1c7",
        "query": "query MessageBufferChatHistory($channelLogin: String!, $channelID: ID) {\n  channel(name: $channelLogin) {\n    id\n    recentChatMessages {\n      ...historicalMessage\n    }\n  }\n}\n\nfragment chatHistoryParentMessage on Message {\n  id\n  content {\n    text\n  }\n  deletedAt\n  sender {\n    id\n    login\n    displayName\n  }\n}\n\nfragment chatHistoryThreadParentMessage on Message {\n  id\n  deletedAt\n  sender {\n    id\n    login\n  }\n}\n\nfragment historicalMessage on Message {\n  id\n  deletedAt\n  sentAt\n  content {\n    ...messageContent\n  }\n  parentMessage {\n    ...chatHistoryParentMessage\n  }\n  threadParentMessage {\n    ...chatHistoryThreadParentMessage\n  }\n  sender {\n    id\n    login\n    displayName\n    __typename\n  }\n  senderBadges(channelID: $channelID) {\n    setID\n    version\n    id\n  }\n  senderChatColor\n  sourceChannel {\n    id\n  }\n  sourceSenderBadges {\n    setID\n    version\n    id\n  }\n}\n"
    },
    "Core_Services_Spade_ChatEvent_User": {
        "hash": "bc43d56d37e1280b0a87a22e60b2295c27bfd852c878f557e1e44c19a05ae8db",
        "query": "query Core_Services_Spade_ChatEvent_User($id: ID!) {\n  user(id: $id) {\n    id\n    isPartner\n    stream {\n      id\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "ChatLoginModerationTracking": {
        "hash": "57648ebd21445654a46847a94fdfb4037836749e08a33c80da025d5238a03b15",
        "query": "query ChatLoginModerationTracking($channelID: ID!, $targetUserID: ID!) {\n  user(id: $targetUserID) {\n    id\n    login\n  }\n  user(id: $channelID) {\n    id\n    login\n    self {\n      isModerator\n      isEditor\n    }\n  }\n  currentUser {\n    id\n    login\n    roles {\n      isStaff\n    }\n  }\n}\n"
    },
    "CommunityIntroductionStatus": {
        "hash": "e2f62ed38f088ae0f3d86327a6353bf45a61454ebb42a2480aafe033be5277f2",
        "query": "query CommunityIntroductionStatus($channelID: ID) {\n  channel(id: $channelID) {\n    id\n    owner {\n      id\n      displayName\n      profileImageURL(width: 28)\n    }\n    self {\n      communityIntroStatus {\n        code\n        prompt\n        promptID\n      }\n    }\n  }\n}\n"
    },
    "SendCommunityIntroduction": {
        "hash": "02af2fbfdd05bb2cd00e081a5fe3dd296203024823ab5cb44c3ae282c30c576e",
        "query": "fragment sendCommunityIntroError on SendCommunityIntroError {\n  code\n  promptAnswerErrors {\n    code\n    promptID\n  }\n}\n\nmutation SendCommunityIntroduction($input: SendCommunityIntroInput!) {\n  sendCommunityIntro(input: $input) {\n    messageID\n    error {\n      ...sendCommunityIntroError\n    }\n  }\n}\n"
    },
    "CommunityPoints_Icon": {
        "hash": "47e31d7bfe359ecae89ff407584ce6ccfcf47794b4a8a7dea9043fcfebd2ac20",
        "query": "query CommunityPoints_Icon($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    ...pointCustomizationFragment\n  }\n}\n"
    },
    "ChannelPointsGlobalContext": {
        "hash": "9c36e0e896699e25fa6e4046d5e5ee824ad00ee55e624729084e5255aad9e860",
        "query": "query ChannelPointsGlobalContext() {\n  emoteModifiers {\n    ...emoteModifierFragment\n  }\n}\n"
    },
    "ChannelPointsContext": {
        "hash": "8ecdd2bd86b1bae040e7657d07b043e3c0278647fc1bc243e38b91f64ae32130",
        "query": "query ChannelPointsContext($channelLogin: String!, $includeGoalTypes: [CommunityPointsCommunityGoalType!]) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    ...availableClaimFragment\n    ...communityPointsBalanceFragment\n    ...pointCustomizationFragment\n    ...rewardsFragment\n    channel {\n      id\n      communityPointsSettings {\n        isEnabled\n        raidPointAmount\n        emoteVariants {\n          ...emoteVariantFragment\n        }\n        earning {\n          ...earningSettingsFragment\n        }\n      }\n      self {\n        communityPoints {\n          activeMultipliers {\n            ...activeMultipliersFragment\n          }\n          lastViewedContent {\n            ...lastViewedContentByTypeFragment\n          }\n          userRedemptions {\n            ...userRedemptionFragment\n          }\n        }\n      }\n    }\n    self {\n      isModerator\n    }\n  }\n  currentUser {\n    id\n    communityPoints {\n      lastViewedContent {\n        ...lastViewedContentByTypeAndIDFragment\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsPredictionContext": {
        "hash": "17fc6336149541dc9fb07945db868879fca06b0c1b849f49dc5f3197fc7c6aac",
        "query": "query ChannelPointsPredictionContext($channelLogin: String!, $count: Int) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      predictionSettings {\n        isEligibleForPredictions\n      }\n      activePredictionEvents {\n        ...predictionEventFragment\n      }\n      lockedPredictionEvents {\n        ...predictionEventFragment\n      }\n      resolvedPredictionEvents(first: $count) {\n        edges {\n          ...predictionEventEdgeFragment\n        }\n      }\n      self {\n        recentPredictions {\n          ...recentPredictionFragment\n        }\n      }\n    }\n  }\n  currentUser {\n    ...predictionSettingsFragment\n  }\n}\n"
    },
    "CommunityPointsRewardRedemptionContext": {
        "hash": "5177ca9bc8aedead12c7a81f7d3c183721a345855546c72c739f2ac448356210",
        "query": "query CommunityPointsRewardRedemptionContext($channelLogin: String!) {\n  user(login: $channelLogin) {\n    ...communityPointsUserFragment\n  }\n}\n"
    },
    "RedeemCustomReward": {
        "hash": "1a852ed506ecd16af60d93442ba57f891a43bbfa3886a880b8d9238c66528312",
        "query": "mutation RedeemCustomReward($input: RedeemCommunityPointsCustomRewardInput!) {\n  redeemCommunityPointsCustomReward(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SendAnimatedChatMessage": {
        "hash": "8157c0a72203b27c216a67f73bf9480a4d4befc51512e136e723c19bd8f0fc23",
        "query": "mutation SendAnimatedChatMessage($input: SendAnimatedChatMessageInput!) {\n  sendAnimatedChatMessage(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SendHighlightedChatMessage": {
        "hash": "eb13338caa714e4b2239335cdcb71d2f3ab9c9243a822c360bfdd98a0c78a5ee",
        "query": "mutation SendHighlightedChatMessage($input: SendHighlightedChatMessageInput!) {\n  sendHighlightedChatMessage(input: $input) {\n    balance\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SendSubsOnlyMessage": {
        "hash": "548f2d43bf550952fa3060ce96370ec2e7a2c0649a71823297a60f43aa41e93e",
        "query": "mutation SendSubsOnlyMessage($input: SendChatMessageThroughSubscriberModeInput!) {\n  sendChatMessageThroughSubscriberMode(input: $input) {\n    balance\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnlockChosenSubscriberEmote": {
        "hash": "fe3c81f66974a53c5a500fd8b96944460f18dc53ad7310ae29d7275a67c9f373",
        "query": "mutation UnlockChosenSubscriberEmote($input: UnlockChosenSubscriberEmoteInput!) {\n  unlockChosenSubscriberEmote(input: $input) {\n    balance\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnlockModifiedEmote": {
        "hash": "af9cdcc36acc4ba3d1f2e2ada098332abea23717a3515872827d9f47240623e9",
        "query": "mutation UnlockModifiedEmote($input: UnlockChosenModifiedSubscriberEmoteInput!) {\n  unlockChosenModifiedSubscriberEmote(input: $input) {\n    balance\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnlockRandomSubscriberEmote": {
        "hash": "84520c07102febfaa013293ff2eebba69b582195cf146064cb85b9b5f6cd70ac",
        "query": "mutation UnlockRandomSubscriberEmote($input: UnlockRandomSubscriberEmoteInput!) {\n  unlockRandomSubscriberEmote(input: $input) {\n    balance\n    emote {\n      id\n      token\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateCommunityPointsLastViewedContent": {
        "hash": "cda91736a735c709de52a933b5a7c6a7711ddef5b3d8ddd0be642ecfcf898f9a",
        "query": "mutation UpdateCommunityPointsLastViewedContent($input: UpdateCommunityPointsLastViewedContentInput!) {\n  updateCommunityPointsLastViewedContent(input: $input) {\n    lastViewedChannelContent {\n      ...lastViewedContentByTypeFragment\n    }\n    lastViewedGlobalContent {\n      ...lastViewedContentByTypeAndIDFragment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateChatHighlightSettings": {
        "hash": "8321f13b170b8fdf39c3c7587be68f191b6c45754d04d2836171a6797c404a20",
        "query": "mutation UpdateChatHighlightSettings($input: UpdateChatHighlightSettingsInput!) {\n  updateChatHighlightSettings(input: $input) {\n    chatHighlightSettings {\n      firstTimeChatters {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      mentions {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      mods {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      raiders {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      returningChatters {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      subscribers {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      suspiciousUsers {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      vips {\n        displaySetting {\n          chatHighlightDisplayMode\n          isEnabled\n          durationMinutes\n        }\n        releaseDate\n      }\n      shouldHideIcon\n      lastSeen\n    }\n  }\n}\n"
    },
    "ChatHighlightSettings": {
        "hash": "d3888322323f7b2f2d6854706a96a628b989d1df9c12c60747263477f65692dc",
        "query": "fragment chatHighlightDisplay on ChatHighlightDisplay {\n  chatHighlightDisplayMode\n  isEnabled\n  durationMinutes\n}\n\nquery ChatHighlightSettings() {\n  chatHighlightSettings {\n    firstTimeChatters {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    mentions {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    mods {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    raiders {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    returningChatters {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    subscribers {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    suspiciousUsers {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    vips {\n      displaySetting {\n        ...chatHighlightDisplay\n      }\n      releaseDate\n    }\n    shouldHideIcon\n    lastSeen\n  }\n}\n"
    },
    "ExtensionsForChannel": {
        "hash": "a9c00a68cb4f3098f2770e75e0acbbe7f722611d63d1e3b1ed73c985919bbf44",
        "query": "query ExtensionsForChannel($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    channel {\n      id\n      selfInstalledExtensions {\n        ...extensionInstallationSelfEdge\n      }\n    }\n  }\n}\n\nfragment extensionInstallationSelfEdge on ExtensionInstallationSelfEdge {\n  installation {\n    id\n    extension {\n      ...extension\n    }\n    abilities {\n      isChatEnabled\n      isBitsEnabled\n      isSubscriptionStatusAvailable\n    }\n    activationConfig {\n      anchor\n      slot\n      state\n      x\n      y\n    }\n    self {\n      canActivate\n    }\n  }\n  helixToken {\n    extensionID\n    jwt\n  }\n  token {\n    extensionID\n    jwt\n  }\n  configuration {\n    extensionID\n    broadcaster {\n      version\n      content\n    }\n    developer {\n      version\n      content\n    }\n    global {\n      version\n      content\n    }\n  }\n  issuedAt\n}\n\nfragment extension on Extension {\n  authorName\n  clientID\n  description\n  hasIdentityLinking\n  iconURLs {\n    ...extensionIconURLs\n  }\n  id\n  isBitsEnabled\n  name\n  sku\n  summary\n  vendorCode\n  version\n  views {\n    ...extensionViews\n  }\n  state\n  whitelistedConfigURLs\n  whitelistedPanelURLs\n}\n\nfragment extensionIconURLs on ExtensionIcons {\n  square100\n  square24\n  discoverySplash\n}\n\nfragment extensionViews on ExtensionViews {\n  component {\n    viewerURL\n    canLinkExternalContent\n    aspectRatioX\n    aspectRatioY\n    targetHeight\n    hasAutoscale\n    scalePixels\n  }\n  config {\n    canLinkExternalContent\n    viewerURL\n  }\n  hidden {\n    canLinkExternalContent\n    viewerURL\n  }\n  liveConfig {\n    canLinkExternalContent\n    viewerURL\n  }\n  mobile {\n    viewerURL\n  }\n  panel {\n    canLinkExternalContent\n    height\n    viewerURL\n  }\n  videoOverlay {\n    canLinkExternalContent\n    viewerURL\n  }\n}\n"
    },
    "FollowButton_FollowUser": {
        "hash": "ac8c9d52fe73ce7da8aa7bf1b7416da54936e6fe32d5f958907e95333d52b340",
        "query": "mutation FollowButton_FollowUser($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        ...followButtonFragment\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "FollowButton_UnfollowUser": {
        "hash": "38f0fa28d7f4ca50f6e74c3532bf1d01ddf68bdb9b0652fc0486c3aeff1a3609",
        "query": "mutation FollowButton_UnfollowUser($input: UnfollowUserInput!) {\n  unfollowUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        ...followButtonFragment\n      }\n    }\n  }\n}\n"
    },
    "FollowButton_User": {
        "hash": "e27ff1b2b3ba69da6a490d2be6a7f0650d23a862677c90bf62dd69fe6224159c",
        "query": "query FollowButton_User($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    ...followButtonFragment\n  }\n}\n"
    },
    "OpenCallingCallerInfo": {
        "hash": "1b40b818ebe36765802dbd6113d2e00fcc5cae14f5d5ec825bfeb2c39a14930e",
        "query": "query OpenCallingCallerInfo($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 28)\n    primaryColorHex\n    description\n    roles {\n      isPartner\n      isAffiliate\n    }\n    self {\n      hasGuestStarFavorited\n    }\n    stream {\n      id\n      collaborationViewersCount\n      viewersCount\n      game {\n        id\n        displayName\n      }\n    }\n  }\n  channel(name: $channelLogin) {\n    id\n    guestStarSessionCall {\n      id\n      guests {\n        id\n        user {\n          ...openCallingCallerInfoGuestFragment\n          stream {\n            id\n            viewersCount\n            collaborationViewersCount\n          }\n        }\n      }\n    }\n  }\n}\n\nfragment openCallingCallerInfoGuestFragment on User {\n  id\n  login\n  displayName\n  profileImageURL(width: 28)\n  description\n  primaryColorHex\n}\n"
    },
    "StreamTogetherCollabStatus": {
        "hash": "b7cab16b3be42c558dce9e42cde328f5ea232710174a862686a431abe7710948",
        "query": "query StreamTogetherCollabStatus($channelLogin: String!) {\n  guestStarSettings(userLogin: $channelLogin) {\n    id\n    hostSettings {\n      collabStatus\n    }\n  }\n}\n"
    },
    "StreamTogetherCollabSettings": {
        "hash": "ef9a457514dbf5bf608de6a47255b60440bf8b9347438b5499b1d03c0310d2a4",
        "query": "query StreamTogetherCollabSettings($userID: ID!) {\n  guestStarSettings(userID: $userID) {\n    id\n    hostSettings {\n      ...guestStarHostCollabSettings\n    }\n  }\n}\n"
    },
    "GuestStarDropinRequests": {
        "hash": "69d32f24b0570e5ededc734db3d6821735acf3a0830205bad1a8158ff6514347",
        "query": "query GuestStarDropinRequests($hostID: ID!) {\n  guestStarDropInRequests(hostID: $hostID) {\n    ...dropinRequestFragment\n  }\n}\n\nfragment dropinRequestFragment on GuestStarDropIn {\n  user {\n    ...dropinUserFragment\n  }\n  requestStatus\n  expiresAt\n}\n"
    },
    "GuestStarFavoriteGuests": {
        "hash": "4d5564e7773a67e6adaf9787fc5a6cfceb08d0177d434ecef3e39b64aa58b511",
        "query": "query GuestStarFavoriteGuests($channelID: ID!, $channelLogin: String, $after: Cursor, $first: Int) {\n  guestStarFavoriteGuests(channelID: $channelID, channelLogin: $channelLogin, first: $first, after: $after) {\n    edges {\n      ...guestStarFavoriteUserFragment\n    }\n    pageInfo {\n      hasNextPage\n    }\n    status\n  }\n}\n"
    },
    "GuestListQuery": {
        "hash": "857803fdbe1809d713d6ec0db6da1377cc480ffd6c5ebe778c6a34b09e0efc46",
        "query": "query GuestListQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    guestStarSessionCall {\n      id\n      guests {\n        ...guestStarSlotForViewers\n      }\n    }\n  }\n}\n\nfragment guestStarSlotForViewers on GuestStarSlotForViewers {\n  id\n  slotID\n  user {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n    primaryColorHex\n    description\n  }\n}\n"
    },
    "GetGuestStarSessionQuery": {
        "hash": "3d106b6ecdb82afcedcb63b2b8b54a8ce52320acd10fc6fd36ac7a83686ce031",
        "query": "query GetGuestStarSessionQuery($channelLogin: String!, $sessionOptions: GuestStarSessionOptions!, $isAuthenticatedRequest: Boolean!) {\n  user(login: $channelLogin) {\n    ...guestStarUser\n  }\n  guestStarSettings(userLogin: $channelLogin) @include(if: $isAuthenticatedRequest) {\n    id\n    viewOnlyToken\n    slotCount\n  }\n  guestStarSession(options: $sessionOptions) {\n    id\n    host {\n      id\n      login\n    }\n    guests {\n      ...sessionParticipant\n    }\n    self {\n      guest {\n        ...guestStarSessionSelfSlotFragment\n      }\n      guestState\n      role\n      isConnected\n    }\n    invites(first: 25) @include(if: $isAuthenticatedRequest) {\n      edges {\n        ...guestStarInviteEdgeFragment\n      }\n    }\n    version\n  }\n}\n"
    },
    "GuestStarJoinRequests": {
        "hash": "cfb819c41fcdaeeaf40ace63a2fb7c431cda456abd20bd034d102d2436c6a072",
        "query": "query GuestStarJoinRequests($hostID: ID!) {\n  guestStarJoinRequests(hostID: $hostID) {\n    ...joinRequestFragment\n  }\n}\n\nfragment joinRequestFragment on GuestStarJoinRequest {\n  id\n  user {\n    ...joinRequestUserFragment\n  }\n  status\n  expiresAt\n  inviteMessage\n  joinRequestID\n}\n"
    },
    "GetLiveStreamIDQuery": {
        "hash": "009a328b09add97e600107f846d140c0ab449405d8a38dacdd603d9bbc38f9a6",
        "query": "query GetLiveStreamIDQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "GuestStarSessionID": {
        "hash": "cc6de144da04950c7afa7f539554de49121129e5cb4bef6becef1cc6ebc77ebf",
        "query": "query GuestStarSessionID($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    guestStarSessionCall {\n      id\n    }\n  }\n}\n"
    },
    "IsInInviteRaidersExperimentClusterQuery": {
        "hash": "c59d0af4af970645503f8af4c185d330d3ee4a783ee00cbd363dc90c86037cba",
        "query": "query IsInInviteRaidersExperimentClusterQuery($clusterID: ID!, $userID: ID!) {\n  experimentCluster(input: {clusterID: $clusterID, userID: $userID}) {\n    id\n    isEligible\n    experimentGroup\n  }\n}\n"
    },
    "UpdateDropinRequestStatus": {
        "hash": "768bba709cc3b9760fb20ce15ace7c02e83c1dfc72e94509f2ca13f8a55229c9",
        "query": "mutation UpdateDropinRequestStatus($input: UpdateGuestStarDropInStatusInput!) {\n  updateGuestStarDropInStatus(input: $input) {\n    error {\n      code\n    }\n    session {\n      id\n      host {\n        id\n        login\n      }\n    }\n  }\n}\n"
    },
    "UpdateJoinRequestStatus": {
        "hash": "ea42ff666e7bbce4a1c77da445e80aae9278fcba57c0017862a2ea5172eddbd8",
        "query": "mutation UpdateJoinRequestStatus($input: UpdateGuestStarJoinRequestStatusInput!) {\n  updateGuestStarJoinRequestStatus(input: $input) {\n    error {\n      code\n    }\n    session {\n      id\n      host {\n        id\n        login\n      }\n    }\n  }\n}\n"
    },
    "LiveNotificationsToggle_ToggleNotifications": {
        "hash": "e9fa84a0f52a900fb32bfcc9dbae9ad9200c317adecd2780f2b61b01757b6a5d",
        "query": "mutation LiveNotificationsToggle_ToggleNotifications($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      user {\n        id\n        self {\n          follower {\n            disableNotifications\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "LiveNotificationsToggle_User": {
        "hash": "86efce0778a337c442e8d3ffa36a4dc587ae839ca60cc3af0c536730eb90a08b",
        "query": "query LiveNotificationsToggle_User($login: String!) {\n  user(login: $login) {\n    ...followButtonFragment\n  }\n}\n"
    },
    "AllowCaughtAutoModMessage": {
        "hash": "f4879473c16bcf56972d67c9616853eba7b672da15594b0b8469f39fd074181d",
        "query": "mutation AllowCaughtAutoModMessage($input: AllowRejectedChatMessageInput!) {\n  allowRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n"
    },
    "DenyCaughtAutoModMessage": {
        "hash": "14dcb80210da7fe495a2360d16abe2747930d52cf1f0e6480b48dd4857762c3f",
        "query": "mutation DenyCaughtAutoModMessage($input: DenyRejectedChatMessageInput!) {\n  denyRejectedChatMessage(input: $input) {\n    message {\n      id\n    }\n  }\n}\n"
    },
    "GetDisplayNameFromID": {
        "hash": "821d2f20b42e31994d12f1f31a10a8b0c3160309b2f6c63f5d6fc75baa7d6f55",
        "query": "query GetDisplayNameFromID($userID: ID!) {\n  user(id: $userID) {\n    id\n    login\n    displayName\n  }\n}\n"
    },
    "GetDisplayName": {
        "hash": "87a8e5f51a1cc53cc1c24ff16c25c784c79f6f1d25a7ae5caac9ecbbcaa11a61",
        "query": "query GetDisplayName($login: String!) {\n  user(login: $login) {\n    id\n    login\n    displayName\n  }\n}\n"
    },
    "CurrentUserModeratorStatus": {
        "hash": "e2d08661cd94f9d76837ddbd44e065c1bccb751d2c319b4f6120e3e1317797df",
        "query": "query CurrentUserModeratorStatus($channelID: ID, $channelLogin: String) {\n  user(id: $channelID, login: $channelLogin) {\n    id\n    self {\n      isModerator\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "UseGetUserLogin": {
        "hash": "8a07575cc335cf410cba5b1ae91be0a08cc88eba670b58711e3571fbdfc6dca0",
        "query": "query UseGetUserLogin($id: ID!) {\n  user(id: $id) {\n    id\n    login\n  }\n}\n"
    },
    "BansSharingRelationships": {
        "hash": "f03b234d7c0c57fbafd4d6a01b042ce3d1cbfc817bec4545df94b1ff8656c135",
        "query": "query BansSharingRelationships($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    bansSharingRelationships {\n      outgoingRequests {\n        ...bansSharingRequest\n      }\n      acceptedRequests {\n        ...bansSharingRequest\n      }\n    }\n  }\n}\n"
    },
    "ModCommentsAndSharedModComments": {
        "hash": "2e3fa84ff53690fad277e811cb886482f372eb6c7f540aab19c8061a4ee48218",
        "query": "query ModCommentsAndSharedModComments($channelID: ID!, $targetID: ID!, $cursor: Cursor) {\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    comments(first: 100, after: $cursor) {\n      ... on ModLogsCommentConnection {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      ... on ModLogsCommentsError {\n        code\n      }\n      __typename\n    }\n    sharedComments(first: 100, after: $cursor) {\n      ... on SharedModLogsCommentConnection {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n      ... on SharedModLogsCommentsError {\n        code\n      }\n      __typename\n    }\n  }\n}\n"
    },
    "ChannelSharedBans": {
        "hash": "9564c6e77c7ecaf16aca7ef6792ef5edba3245e449419740328ebbd5f7f4a820",
        "query": "query ChannelSharedBans($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    bansSharingRelationships {\n      acceptedRequests {\n        id\n        requestingChannel {\n          ...sharedBanChannel\n        }\n        requestedChannel {\n          ...sharedBanChannel\n        }\n      }\n    }\n  }\n}\n"
    },
    "LowTrustUserProperties": {
        "hash": "3d29f5b2922a6fff159105fbf72874a6e34499e8301c3873962a3b315521703c",
        "query": "query LowTrustUserProperties($targetUserID: ID!, $channelID: ID!) {\n  lowTrustUserProperties(channelID: $channelID, userID: $targetUserID) {\n    ...lowTrustUserProperties\n  }\n}\n"
    },
    "PinnedCheersSettings": {
        "hash": "10e10922a6eb22fa677822b7cb94affd371284aa670071f79d21f969ae247a41",
        "query": "query PinnedCheersSettings($login: String!) {\n  user(login: $login) {\n    id\n    cheer {\n      id\n      settings {\n        id\n        isPinnedCheersEnabled\n      }\n    }\n  }\n}\n"
    },
    "PaidPinnedChat": {
        "hash": "a88c43f7236da99747e0d42b7b41a6b1abf8363125724f6d8f867f345f2ca353",
        "query": "query PaidPinnedChat($channelID: ID!, $count: Int!, $messageType: PinnedChatMessageType!, $after: Cursor) {\n  channel(id: $channelID) {\n    id\n    pinnedChatMessages(first: $count, after: $after, messageType: $messageType) {\n      edges {\n        node {\n          ...pinnedChatMessage\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment pinnedChatMessage on PinnedChatMessage {\n  id\n  pinnedMessage {\n    id\n    content {\n      ...messageContent\n    }\n    sentAt\n    sender {\n      id\n      chatColor\n      displayName\n    }\n  }\n  startsAt\n  updatedAt\n  endsAt\n  type\n  paidLevel\n  bitsAmount\n}\n"
    },
    "PinnedChatSettings": {
        "hash": "526082d3caf95c386d995205ca71bf22e9542568220a277dc6334de46834fc9b",
        "query": "query PinnedChatSettings($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    pinnedChatSettings {\n      isModAccessEnabled\n    }\n  }\n}\n"
    },
    "GetPinnedChat": {
        "hash": "169c9eb86ff295b79b28c4b439eb838d41dbc5040eab52ad99e481a89dc0773a",
        "query": "query GetPinnedChat($channelID: ID!, $count: Int!, $after: Cursor) {\n  channel(id: $channelID) {\n    id\n    pinnedChatMessages(first: $count, after: $after, messageType: MOD) {\n      edges {\n        node {\n          id\n          type\n          pinnedMessage {\n            id\n            content {\n              text\n              fragments {\n                content {\n                  ... on User {\n                    id\n                    login\n                  }\n                  ... on Emote {\n                    id\n                  }\n                  ... on CheermoteToken {\n                    bitsAmount\n                    prefix\n                    tier\n                  }\n                  __typename\n                }\n                text\n              }\n            }\n            parentMessage {\n              id\n              content {\n                text\n              }\n              sentAt\n              sender {\n                id\n                displayName\n              }\n            }\n            threadParentMessage {\n              id\n              content {\n                text\n              }\n              sender {\n                id\n                displayName\n              }\n            }\n            sentAt\n            sender {\n              id\n              chatColor\n              displayName\n              displayBadges(channelID: $channelID) {\n                id\n                setID\n                version\n              }\n            }\n          }\n          startsAt\n          updatedAt\n          endsAt\n          pinnedBy {\n            id\n            displayName\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "PinChatMessage": {
        "hash": "313d3a7eb4e7d362f2ee80c05263c3d2310cff83e4efc5fc62886c9ec1d1fdbf",
        "query": "mutation PinChatMessage($input: PinChatMessageInput!) {\n  pinChatMessage(input: $input) {\n    pinnedChatMessage {\n      id\n      pinnedMessage {\n        id\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChannelPollContext_GetViewablePoll": {
        "hash": "15e6a4f1ccbe5b8940217f8d02d1b8c5b78c50ec5893e16fe056f468353c2349",
        "query": "query ChannelPollContext_GetViewablePoll($login: String!) {\n  user(login: $login) {\n    id\n    viewablePoll {\n      ...poll\n      self {\n        voter {\n          ...pollVoter\n        }\n      }\n    }\n    self {\n      isEditor\n      isModerator\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "ChannelPollContext_VoteInPoll": {
        "hash": "1ff785335b756e7c2d1227692e379934b1ddebcfe1eb7ad73074acbce1072115",
        "query": "mutation ChannelPollContext_VoteInPoll($input: VoteInPollInput!) {\n  voteInPoll(input: $input) {\n    voter {\n      ...pollVoter\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "NewPollModalQuery": {
        "hash": "8cb76460f5c69c1b3e10acedb5ce83fdc7f52578b714e456d0594f37685f92e7",
        "query": "query NewPollModalQuery($id: ID!) {\n  user(id: $id) {\n    id\n    latestPoll {\n      id\n      durationSeconds\n      settings {\n        ...pollSettings\n      }\n    }\n  }\n  user(id: $id) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        name\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "ArchivePoll": {
        "hash": "1da3812a025ec19f232939c5f7709dd73851c0478b75bebd8e279c24700c026d",
        "query": "mutation ArchivePoll($input: ArchivePollInput!) {\n  archivePoll(input: $input) {\n    poll {\n      id\n    }\n  }\n}\n"
    },
    "CreatePoll": {
        "hash": "54a61c82740da4e1ac5e2a63dcfa9e68504ca57ff34b02ab3a2ddb1bc47a6f3e",
        "query": "mutation CreatePoll($input: CreatePollInput!) {\n  createPoll(input: $input) {\n    poll {\n      id\n      ownedBy {\n        id\n        latestPoll {\n          ...poll\n        }\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "TerminatePoll": {
        "hash": "615f15fdd5eebd73faf6d292109f012ef83f4fd7c04f014c19122d333730894f",
        "query": "mutation TerminatePoll($input: TerminatePollInput!) {\n  terminatePoll(input: $input) {\n    poll {\n      id\n    }\n  }\n}\n"
    },
    "ChannelQNAState": {
        "hash": "cdf551967826985a7cb24523dbd86d792dbbc157aca226a3504f7bdd6cb447f3",
        "query": "query ChannelQNAState($channelID: ID!) {\n  channelQuestionAndAnswerSettings(channelID: $channelID) {\n    isAvailable\n  }\n  user(id: $channelID) {\n    id\n    channel {\n      id\n      activeQuestionAndAnswerSession {\n        ...questionAndAnswerSession\n      }\n    }\n    self {\n      isModerator\n    }\n  }\n}\n"
    },
    "CreateQuestionAndAnswerSession": {
        "hash": "40c3793d90191ff2102a2907ac0628c9b19fcf4fdc76c90d3ba98eedefe610c0",
        "query": "mutation CreateQuestionAndAnswerSession($input: CreateQuestionAndAnswerSessionInput!) {\n  createQuestionAndAnswerSession(input: $input) {\n    error {\n      code\n    }\n    session {\n      ...questionAndAnswerSession\n    }\n  }\n}\n"
    },
    "EndQuestionAndAnswerSession": {
        "hash": "bf65615954f508975e9534829d197d66ec3ffd3cdbb629c5856e0427f12732c5",
        "query": "mutation EndQuestionAndAnswerSession($input: EndQuestionAndAnswerSessionInput!) {\n  endQuestionAndAnswerSession(input: $input) {\n    error {\n      code\n    }\n    session {\n      ...questionAndAnswerSession\n    }\n  }\n}\n"
    },
    "StartAd": {
        "hash": "6c850200d84a9c264779ac684ac5a0fe429d465ba89dc37b524da18d3ab85c59",
        "query": "mutation StartAd($input: StartAdInput!) {\n  startAd(input: $input) {\n    adSession {\n      lengthSeconds\n      id\n    }\n    error {\n      code\n      retryAfterSeconds\n    }\n  }\n}\n"
    },
    "SharedChatUsersInfo": {
        "hash": "66ba9591b433544c438c247b381a56b2f7ca399c7013c141ca66378eaa9584cc",
        "query": "query SharedChatUsersInfo($ids: [ID!]) {\n  badges {\n    ...badge\n  }\n  users(ids: $ids) {\n    id\n    login\n    displayName\n    login\n    profileImageURL(width: 28)\n    broadcastBadges {\n      ...badge\n    }\n    primaryColorHex\n  }\n}\n"
    },
    "SharedChatSession": {
        "hash": "c29903f8695a42f5d6222da49bfcb920fed35e7d4eff4f81c9541ef0e03d1c7f",
        "query": "query SharedChatSession($channelID: ID!) {\n  sharedChatSession(channelID: $channelID) {\n    id\n    host {\n      id\n    }\n    status\n    participants {\n      ...sharedChatParticipant\n    }\n    createdAt\n    updatedAt\n    autoStartsAt\n  }\n}\n"
    },
    "AddChannelToSharedChatSession": {
        "hash": "d45cea8790c78d8933e73f0b584bd5a5ad9d83afe98a6418a31d214f5a5d78c0",
        "query": "mutation AddChannelToSharedChatSession($input: AddChannelToSharedChatSessionInput!) {\n  addChannelToSharedChatSession(input: $input) {\n    session {\n      id\n      host {\n        id\n      }\n      status\n      participants {\n        id\n      }\n      createdAt\n      updatedAt\n      autoStartsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateSharedChatSession": {
        "hash": "cbccf50cdb882ef8813a48045148562327385bd1487f61b2527f896dc8cdc99b",
        "query": "mutation CreateSharedChatSession($input: CreateSharedChatSessionInput!) {\n  createSharedChatSession(input: $input) {\n    session {\n      id\n      host {\n        id\n      }\n      status\n      participants {\n        id\n      }\n      createdAt\n      updatedAt\n      autoStartsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EndSharedChatSession": {
        "hash": "b0d5561bc026c6a64c859494d3f52917188f0dd484aa10dc4d7fe20660d823b9",
        "query": "mutation EndSharedChatSession($input: EndSharedChatSessionInput!) {\n  endSharedChatSession(input: $input) {\n    session {\n      id\n      host {\n        id\n      }\n      status\n      participants {\n        id\n      }\n      createdAt\n      updatedAt\n      autoStartsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveChannelFromSharedChatSession": {
        "hash": "ac9682743eb8dc3ea8d26f313643670a7b8e3e08eda854088e9cc337acc18a1b",
        "query": "mutation RemoveChannelFromSharedChatSession($input: RemoveChannelFromSharedChatSessionInput!) {\n  removeChannelFromSharedChatSession(input: $input) {\n    session {\n      id\n      host {\n        id\n      }\n      status\n      participants {\n        id\n      }\n      createdAt\n      updatedAt\n      autoStartsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CanCreateClip": {
        "hash": "90fa60f6240dfd3e79870158662eafd852014f34749b7922070ad211f08ac4e2",
        "query": "query CanCreateClip($broadcasterID: ID, $vodID: ID) {\n  canCreateClip(broadcasterID: $broadcasterID, vodID: $vodID) {\n    isAllowed\n    errorCode\n    requiredFollowingLengthMinutes\n  }\n}\n"
    },
    "UnbanRequestModal": {
        "hash": "0c8697a5618f00e2dfad8a23379e1fde996ff01bd65a8d51313c31faba51c55a",
        "query": "query UnbanRequestModal($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      banStatus {\n        isPermanent\n        reason\n      }\n    }\n  }\n}\n"
    },
    "UnbanRequestsListCtx": {
        "hash": "bc0e2a31df97fdb0371695e684b3e89dcecd944315d32a2a40dd4fedc3a1aa04",
        "query": "query UnbanRequestsListCtx($channelLogin: String!, $limit: Int, $cursor: Cursor, $order: UnbanRequestsSortOrder, $status: UnbanRequestStatus, $userID: ID) {\n  channel(name: $channelLogin) {\n    id\n    unbanRequests(first: $limit, after: $cursor, options: {order: $order, status: $status, userID: $userID}) {\n      edges {\n        cursor\n        node {\n          ...unbanRequestFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n      totalCount(status: $status)\n    }\n    unbanRequestsSettings {\n      isEnabled\n      cooldownMinutes\n    }\n  }\n}\n"
    },
    "CancelUnbanRequest": {
        "hash": "cc8ba41b7dba9908fa885275dd0042841344a37247a56513a26643af9ecda2e9",
        "query": "mutation CancelUnbanRequest($input: CancelUnbanRequestInput!) {\n  cancelUnbanRequest(input: $input) {\n    unbanRequest {\n      id\n      status\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateUnbanRequest": {
        "hash": "4db1da776e29b76f9f1bbe5bb5c3ce63ae8afa2bcb8fd1f46d642ea00cd2e862",
        "query": "mutation CreateUnbanRequest($input: CreateUnbanRequestInput!) {\n  createUnbanRequest(input: $input) {\n    unbanRequest {\n      id\n      status\n      createdAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnbanRequestModLogs": {
        "hash": "4277da3b1645f2c1e61c8108cb67f6aec5f5e7b48b0ff157649701894cbb3d7c",
        "query": "query UnbanRequestModLogs($channelID: ID!, $targetID: ID!, $cursor: Cursor) {\n  badges {\n    ...badge\n  }\n  user(id: $channelID) {\n    id\n    login\n    broadcastBadges {\n      ...badge\n    }\n  }\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    messages(first: 5, after: $cursor, excludeModActions: true) {\n      ... on ViewerCardModLogsMessagesError {\n        code\n      }\n      ... on ViewerCardModLogsMessagesConnection {\n        edges {\n          node {\n            ...unbanRequestChatMessage\n            ...viewerCardModLogsCaughtMessageFragment\n          }\n        }\n      }\n    }\n  }\n}\n\nfragment unbanRequestChatMessage on ViewerCardModLogsChatMessage {\n  id\n  sender {\n    id\n    login\n    chatColor\n    displayName\n    displayBadges(channelID: $channelID) {\n      id\n      setID\n      version\n      __typename\n    }\n    __typename\n  }\n  sentAt\n  content {\n    text\n    fragments {\n      text\n      content {\n        ... on Emote {\n          id\n          setID\n          token\n        }\n        ... on User {\n          id\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n"
    },
    "LastUnbanRequest": {
        "hash": "8a067fb495aded5154882e7484763d49308799ff734f83f3ada1e92b9ec034d5",
        "query": "query LastUnbanRequest($channelID: ID!, $includeCanRequestUnban: Boolean!) {\n  channel(id: $channelID) {\n    id\n    self {\n      canRequestUnban @include(if: $includeCanRequestUnban)\n      lastUnbanRequest {\n        id\n        status\n        createdAt\n        resolverMessage\n      }\n      unbanRequestRestriction @include(if: $includeCanRequestUnban)\n    }\n  }\n}\n"
    },
    "UnbanRequestsSettings": {
        "hash": "baa6e48efa011673bd4033cc261e30a2cd186a5cfc9d821e482b21862d124527",
        "query": "query UnbanRequestsSettings($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    unbanRequestsSettings {\n      isEnabled\n      cooldownMinutes\n    }\n  }\n}\n"
    },
    "UserUnbanRequest": {
        "hash": "28d3f3f3f0220ca9bd5203e94292d46424daa94b1437891f34bb73df322dc929",
        "query": "query UserUnbanRequest($channelID: ID!, $userID: ID, $limit: Int, $status: UnbanRequestStatus) {\n  channel(id: $channelID) {\n    id\n    unbanRequests(first: $limit, options: {userID: $userID, status: $status}) {\n      edges {\n        node {\n          ...unbanRequestFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "VerifyEmail_CurrentUser": {
        "hash": "36979b77e45ba330523a8789cf9f0164e829d6c1b0a55d9833acd2ca652f2147",
        "query": "query VerifyEmail_CurrentUser() {\n  currentUser {\n    id\n    hasPrime\n    displayName\n    email\n    isEmailVerified\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "ActiveWatchParty": {
        "hash": "48b0868d6e790903cd7d487f41b1acc7535292b9324a79a81d74375cbd3bb3a4",
        "query": "query ActiveWatchParty($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    watchParty {\n      session {\n        ...watchPartySession\n      }\n    }\n  }\n}\n"
    },
    "WatchPartyWidgetGate": {
        "hash": "ace9e46a28fdd7431f858f52bae531cc5835eb33d02dfef1f4f09d03037641b6",
        "query": "query WatchPartyWidgetGate($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n    settings {\n      canHostWatchParties\n    }\n    watchPartiesRestrictions\n  }\n}\n"
    },
    "TitleMentions": {
        "hash": "e6b9760ba0712d9449357ee374d014f37d2af03c9993f20ab274d79b9b4a7ce3",
        "query": "query TitleMentions($logins: [String!]!) {\n  users(logins: $logins) {\n    id\n    login\n    displayName\n    description\n    primaryColorHex\n    profileImageURL(width: 70)\n  }\n  currentUser {\n    id\n    login\n    roles {\n      isSiteAdmin\n      isStaff\n      isGlobalMod\n    }\n    blockedUsers {\n      id\n    }\n  }\n}\n"
    },
    "GetUserID": {
        "hash": "1fa9f631f6ba1a68c21cebf176db8533d0c6382a59389decc071d1eb78f6befa",
        "query": "query GetUserID($login: String!, $lookupType: UserLookupType!) {\n  user(login: $login, lookupType: $lookupType) {\n    id\n  }\n}\n"
    },
    "GuestStarSessionsQuery": {
        "hash": "3b3e6be3be4057985389c36776acae4b7b020d52ca5a17761d5036714191b38d",
        "query": "query GuestStarSessionsQuery($options: GuestStarSessionsOptions) {\n  guestStarSessionsForViewers(options: $options) {\n    ...guestStarOngoingSession\n  }\n}\n"
    },
    "RecapsQuery": {
        "hash": "c0307d9ca6d500e7ac3cf8428d35d7ffe041375b40018b67cb98bf6f3c06fa79",
        "query": "query RecapsQuery($channelId: ID, $channelLogin: String, $endsAt: Time!) {\n  user(login: $channelLogin, id: $channelId) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n    displayName\n    profileImageURL(width: 600)\n    self {\n      subscriptionBenefit {\n        ...subBenefit\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        months\n        daysRemaining\n      }\n      recap(interval: MONTH, endsAt: $endsAt) {\n        minutesWatched\n        chatMessagesSent\n        streamsPlayed\n      }\n    }\n  }\n  channel(id: $channelId) {\n    id\n    displayName\n    recap(interval: MONTH, endsAt: $endsAt) {\n      minutesStreamed\n      chatMessagesSent\n      streamsStreamed\n      emoteUsage {\n        emote {\n          id\n          suffix\n          token\n        }\n        totalUsage\n      }\n    }\n  }\n  badges {\n    ...badge\n  }\n}\n"
    },
    "DiscoveryWatchParty": {
        "hash": "d0af938031bdc24c3c2dfba724ddcb1aac8efb782a3fdc0a2031fcb894677349",
        "query": "query DiscoveryWatchParty($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    watchParty {\n      session {\n        id\n        state\n        title\n        viewersCount\n        contentRestriction\n        progress {\n          ...watchPartyProgress\n        }\n      }\n    }\n  }\n}\n"
    },
    "ClipsCards__User": {
        "hash": "1b6a82d3efca8f3df3c90bc0187e94a30b00dfe43085d0aaaf3636912c7e7119",
        "query": "query ClipsCards__User($login: String!, $limit: Int, $cursor: Cursor, $criteria: UserClipsInput) {\n  user(login: $login) {\n    id\n    clips(first: $limit, after: $cursor, criteria: $criteria) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          ...clip\n        }\n      }\n    }\n  }\n}\n"
    },
    "SelfModStatus": {
        "hash": "e4d728a467f25edcd655151392df5eebd2a4edc618903a56c2ec20ec505919d2",
        "query": "query SelfModStatus($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      isModerator\n    }\n  }\n}\n"
    },
    "CommonHooks_SearchCategories": {
        "hash": "99c271543a2fd6443868d79588296eb38990554511576e905367ae87ff7268ad",
        "query": "query CommonHooks_SearchCategories($query: String!, $count: Int, $cursor: Cursor) {\n  searchCategories(query: $query, first: $count, after: $cursor) {\n    edges {\n      cursor\n      node {\n        id\n        name\n        displayName\n        boxArtURL(height: 120, width: 90)\n        tags(tagType: CONTENT) {\n          ...tagFragment\n        }\n        viewersCount\n      }\n    }\n    totalCount\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n"
    },
    "CommonHooks_SearchCategoryTags": {
        "hash": "4f5df3902bdc9557cd95ef676e1d51d4186ced8babeb28b397fb670dafb4bb63",
        "query": "query CommonHooks_SearchCategoryTags($query: String!, $count: Int) {\n  searchCategoryTags(userQuery: $query, limit: $count) {\n    ...searchTagFragment\n  }\n}\n"
    },
    "CommonHooks_SearchLiveTags": {
        "hash": "1d16e6c6673dd0662d2fe9198f6fd913ae15480140b700895c7e6175ad12e3d1",
        "query": "query CommonHooks_SearchLiveTags($query: String!, $count: Int, $categoryID: ID) {\n  searchLiveTags(userQuery: $query, categoryID: $categoryID, limit: $count) {\n    ...searchTagFragment\n  }\n}\n"
    },
    "CommonHooks_SearchStreams": {
        "hash": "2e0a2ce465c557a4f1a6774c3db00d431471509e2aa516af4bfd3d9d7fca77de",
        "query": "query CommonHooks_SearchStreams($query: String!, $count: Int, $cursor: Cursor) {\n  searchStreams(userQuery: $query, first: $count, after: $cursor) {\n    edges {\n      cursor\n      node {\n        id\n        viewersCount\n        previewImageURL(height: 112, width: 200)\n        game {\n          name\n          id\n        }\n        broadcaster {\n          id\n          login\n          displayName\n          profileImageURL(width: 50)\n          broadcastSettings {\n            id\n            title\n          }\n          roles {\n            isPartner\n          }\n        }\n      }\n    }\n    totalCount\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n"
    },
    "CommonHooks_SearchUsers": {
        "hash": "86e9375b2e1a55c5a9e715cba5080fdc5f82425b6f83ca4955d90c2d3ebdb1f7",
        "query": "query CommonHooks_SearchUsers($query: String!, $count: Int, $cursor: Cursor, $hasSubscriptionProductsOnly: Boolean) {\n  searchUsers(userQuery: $query, first: $count, after: $cursor, hasSubscriptionProductsOnly: $hasSubscriptionProductsOnly) {\n    edges {\n      cursor\n      node {\n        id\n        broadcastSettings {\n          id\n          title\n        }\n        displayName\n        followers {\n          totalCount\n        }\n        lastBroadcast {\n          id\n          startedAt\n        }\n        login\n        profileImageURL(width: 150)\n        roles {\n          isPartner\n        }\n        self {\n          hasGuestStarFavorited\n        }\n      }\n    }\n    totalCount\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n"
    },
    "CommonHooks_SearchVideos": {
        "hash": "16d6e330d14d5de8d96ddf4fdee97a47165052e2b45fb2a43b0f441495137d36",
        "query": "query CommonHooks_SearchVideos($search: VideoConnectionSearchParams, $count: Int, $cursor: Cursor, $creatorID: ID) {\n  user(id: $creatorID) {\n    id\n    searchVideos(search: $search, first: $count, after: $cursor) {\n      edges {\n        cursor\n        node {\n          contentTags {\n            ...tagFragment\n          }\n          createdAt\n          owner {\n            id\n            displayName\n            login\n            roles {\n              isPartner\n            }\n          }\n          id\n          game {\n            id\n            name\n            displayName\n          }\n          lengthSeconds\n          previewThumbnailURL(height: 120, width: 214)\n          title\n          viewCount\n        }\n      }\n      totalCount\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n}\n"
    },
    "BlockUser": {
        "hash": "f53176ccc39aaac3741c1cab5dc341b6b86fffd8c84e6ad00acffe884cb2ece4",
        "query": "mutation BlockUser($input: BlockUserInput!) {\n  blockUser(input: $input) {\n    targetUser {\n      id\n    }\n  }\n}\n"
    },
    "ModUser": {
        "hash": "718220591b06f0a0200818a07ed735896d79c0612107d415c8d73caf813f5b68",
        "query": "mutation ModUser($input: ModUserInput!) {\n  modUser(input: $input) {\n    channel {\n      id\n      login\n    }\n    target {\n      id\n      login\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnblockUser": {
        "hash": "884f212554aca115ef0901bbb88410ae3761437abaccfc18a1821a64869fade2",
        "query": "mutation UnblockUser($input: UnblockUserInput!) {\n  unblockUser(input: $input) {\n    targetUser {\n      id\n    }\n  }\n}\n"
    },
    "UnmodUser": {
        "hash": "f2015e8206ef23ec9cb4bd3bdc38c5c937a4d9c5f47e166b1e4cebf3d138332e",
        "query": "mutation UnmodUser($input: UnmodUserInput!) {\n  unmodUser(input: $input) {\n    channel {\n      id\n      login\n    }\n    target {\n      id\n      login\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "FollowButton_FollowEvent_User": {
        "hash": "1ff80b89a6903c65cb7bf64e060ba80aedfd16e262140a070586f7f9fe8128f1",
        "query": "query FollowButton_FollowEvent_User($id: ID!) {\n  user(id: $id) {\n    id\n    isPartner\n    primaryColorHex\n    stream {\n      id\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "Core_Services_Spade_Video": {
        "hash": "727e047a61e633665cb82953f80dab7e482592096ae14af07b603850d094cae7",
        "query": "query Core_Services_Spade_Video($id: ID!) {\n  video(id: $id) {\n    id\n    broadcastType\n  }\n}\n"
    },
    "DeveloperBadgeDescription": {
        "hash": "6f735c1a587a741ba3a2524b8c8ca5dd05c237c5564766e704c889a54d99cd50",
        "query": "query DeveloperBadgeDescription($userID: ID) {\n  user(id: $userID) {\n    id\n    publicOrganizations {\n      id\n      name\n      url\n    }\n  }\n}\n"
    },
    "LeaderboardBadgePeriod": {
        "hash": "adf92663ca492589ed6665cf82077dd344a559f42efc8823af76e3c6128f6d2d",
        "query": "query LeaderboardBadgePeriod($channelLogin: String) {\n  channel(name: $channelLogin) {\n    id\n    leaderboardTimePeriod\n  }\n}\n"
    },
    "SubBadgeCarouselDescription_Follow": {
        "hash": "327058db02b17107c8bd3b7d27ce250851623cb46406982887fdb394887df7f7",
        "query": "mutation SubBadgeCarouselDescription_Follow($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        ...followButtonFragment\n      }\n    }\n  }\n}\n"
    },
    "SubBadgeDescription": {
        "hash": "cbb53a211c29a64f9b6e2a193f1229f830921667bdac012f8ba57b2a58a7f2ea",
        "query": "query SubBadgeDescription($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      follower {\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "ViewerCardCommunityMomentCarousel_MomentBadge": {
        "hash": "d377c17238f8c27db882b6a6907f61e3650bd99c42aec04aa9ceb654a4432c83",
        "query": "query ViewerCardCommunityMomentCarousel_MomentBadge($channelLogin: String!, $userLogin: String!) {\n  channelViewer(channelLogin: $channelLogin, userLogin: $userLogin) {\n    id\n    earnedBadges {\n      id\n      setID\n      imageURL(size: DOUBLE)\n    }\n  }\n}\n"
    },
    "ViewerCardHeader": {
        "hash": "4792099b12edbecb8f91bea9e424158a965d6458b3c8919990782b212bf2c113",
        "query": "query ViewerCardHeader($targetLogin: String, $channelID: ID!, $hasChannelID: Boolean!) {\n  user(login: $targetLogin) {\n    id\n  }\n  user(login: $targetLogin, lookupType: ALL) {\n    id\n    login\n    bannerImageURL\n    displayName\n    profileImageURL(width: 70)\n    createdAt\n    relationship(targetUserID: $channelID) @include(if: $hasChannelID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n      followedAt\n      subscriptionBenefit {\n        id\n        tier\n        purchasedWithPrime\n        gift {\n          isGift\n        }\n      }\n    }\n  }\n}\n"
    },
    "ViewerCardModLogsComments": {
        "hash": "f1927ff0b18cd71147bcae31b796dd7e55e1fb5e91c897cabace87fe18123818",
        "query": "fragment modCommentEdge on ModLogsCommentEdge {\n  cursor\n  node {\n    ...moderatorComment\n  }\n}\n\nquery ViewerCardModLogsComments($channelID: ID!, $targetID: ID!, $cursor: Cursor) {\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    comments(first: 100, after: $cursor) {\n      ... on ModLogsCommentConnection {\n        edges {\n          ...modCommentEdge\n        }\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n      ... on ModLogsCommentsError {\n        code\n      }\n      __typename\n    }\n  }\n}\n"
    },
    "createModComment": {
        "hash": "9145182810abfab67208008ad494d4485724cb0185c975b65f1fbf43a64ead7c",
        "query": "mutation createModComment($input: CreateModeratorCommentInput!) {\n  createModeratorComment(input: $input) {\n    comment {\n      ...moderatorComment\n    }\n  }\n}\n"
    },
    "deleteModeratorComment": {
        "hash": "c23a53eb442b666b369ebaf96fdc6a3f6f062e006f0fc4eab5089c95c31f52c5",
        "query": "mutation deleteModeratorComment($input: DeleteModeratorCommentInput!) {\n  deleteModeratorComment(input: $input) {\n    comment {\n      ...moderatorComment\n    }\n  }\n}\n"
    },
    "ViewerCardModLogsSharedComments": {
        "hash": "b562e6161e157d60062a4e8534b9773ae096dc5dff3db7122d7661a239f4f993",
        "query": "fragment sharedModCommentEdge on SharedModLogsCommentEdge {\n  cursor\n  node {\n    ...moderatorComment\n  }\n}\n\nquery ViewerCardModLogsSharedComments($channelID: ID!, $targetID: ID!, $cursor: Cursor) {\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    sharedComments(first: 100, after: $cursor) {\n      ... on SharedModLogsCommentConnection {\n        edges {\n          ...sharedModCommentEdge\n        }\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n      ... on SharedModLogsCommentsError {\n        code\n      }\n      __typename\n    }\n  }\n}\n"
    },
    "BadgeSetsByChannel": {
        "hash": "22d762dbbab2488912a309317c0e777f19f05f73fd7dd8e379906e0f136909a4",
        "query": "query BadgeSetsByChannel($channelID: ID!) {\n  badges {\n    ...badge\n  }\n  user(id: $channelID) {\n    id\n    login\n    broadcastBadges {\n      ...badge\n    }\n  }\n}\n"
    },
    "ViewerCardModLogsMessagesBySender": {
        "hash": "21f45036188800db7bbb0f3d7b5d5ce7ca3c2f54c64463bcab5a39fc07ff4c0e",
        "query": "query ViewerCardModLogsMessagesBySender($channelID: ID!, $senderID: ID!, $cursor: Cursor) {\n  viewerCardModLogs(channelID: $channelID, targetID: $senderID) {\n    messages(first: 50, after: $cursor) {\n      ... on ViewerCardModLogsMessagesError {\n        code\n      }\n      ... on ViewerCardModLogsMessagesConnection {\n        edges {\n          ...viewerCardModLogsMessagesEdgeFragment\n        }\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n}\n\nfragment viewerCardModLogsMessagesEdgeFragment on ViewerCardModLogsMessagesEdge {\n  __typename\n  node {\n    ...viewerCardModLogsCaughtMessageFragment\n    ...viewerCardModLogsChatMessageFragment\n    ...viewerCardModLogsModActionsMessageFragment\n  }\n  cursor\n}\n\nfragment viewerCardModLogsChatMessageFragment on ViewerCardModLogsChatMessage {\n  id\n  sender {\n    id\n    login\n    chatColor\n    displayName\n    displayBadges(channelID: $channelID) {\n      id\n      setID\n      version\n      __typename\n    }\n    __typename\n  }\n  sentAt\n  content {\n    text\n    fragments {\n      text\n      content {\n        ... on Emote {\n          id\n          setID\n          token\n        }\n        ... on User {\n          id\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n  isDeleted\n  lastUpdatedBy {\n    id\n    displayName\n  }\n  originatorChannel {\n    id\n    displayName\n    profileImageURL(width: 28)\n  }\n}\n\nfragment viewerCardModLogsModActionsMessageFragment on ViewerCardModLogsModActionsMessage {\n  timestamp\n  content {\n    fallbackString\n    ...modActionTokens\n  }\n}\n"
    },
    "ViewerCard": {
        "hash": "d46031bdcc9880edd0a8b57dfebe13ce27493f4da64fad744ba6a81560900a52",
        "query": "query ViewerCard($channelID: ID, $channelLogin: String!, $hasChannelID: Boolean!, $giftRecipientLogin: String!, $isViewerBadgeCollectionEnabled: Boolean!, $withStandardGifting: Boolean!, $badgeSourceChannelID: ID, $badgeSourceChannelLogin: String!) {\n  user(login: $giftRecipientLogin) {\n    id\n  }\n  user(login: $giftRecipientLogin, lookupType: ALL) {\n    id\n    login\n    bannerImageURL\n    displayName\n    displayBadges(channelID: $badgeSourceChannelID) {\n      ...badge\n      description\n    }\n    profileImageURL(width: 70)\n    createdAt\n    relationship(targetUserID: $channelID) @include(if: $hasChannelID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n      followedAt\n      subscriptionBenefit {\n        id\n        tier\n        purchasedWithPrime\n        gift {\n          isGift\n        }\n      }\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n    subscriptionProducts {\n      ...subscriptionProduct\n    }\n    self {\n      banStatus {\n        isPermanent\n      }\n      isModerator\n    }\n  }\n  currentUser {\n    login\n    id\n    roles {\n      isSiteAdmin\n      isStaff\n      isGlobalMod\n    }\n    blockedUsers {\n      id\n    }\n  }\n  channelViewer(userLogin: $giftRecipientLogin, channelLogin: $badgeSourceChannelLogin) {\n    id\n    earnedBadges @include(if: $isViewerBadgeCollectionEnabled) {\n      ...badge\n      description\n    }\n  }\n  channel(id: $channelID) {\n    id\n    moderationSettings {\n      canAccessViewerCardModLogs\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "ViewerCard_CommunityMoments": {
        "hash": "1322cbf488c71f1b3038ca8764a6e7eb4733cb81eaabfce59fae915c371acb22",
        "query": "query ViewerCard_CommunityMoments($userLogin: String!, $channelLogin: String!, $first: Int!, $cursor: Cursor) {\n  channelViewer(userLogin: $userLogin, channelLogin: $channelLogin) {\n    id\n    earnedCommunityMoments(first: $first, after: $cursor) {\n      edges {\n        cursor\n        node {\n          id\n          claimCount\n          createdAt\n          clip {\n            id\n            title\n            thumbnailURL\n            url\n          }\n        }\n      }\n      totalCount\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "GenerateSessionInviteLink": {
        "hash": "23892edad7eaf6d8b80a7395d466a53ebf5334a77d526900249f4b8c62015098",
        "query": "mutation GenerateSessionInviteLink($input: GenerateSessionInviteLinkInput!) {\n  generateSessionInviteLink(input: $input) {\n    url\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SessionInviteLink": {
        "hash": "aeb53a1c075efccb23ba2aa7c20562f506bcbda70e48c995730e25107539f0d2",
        "query": "query SessionInviteLink($sessionID: ID!, $type: InviteLinkType!) {\n  sessionInviteLink(sessionID: $sessionID, type: $type) {\n    url\n  }\n}\n"
    },
    "GetIsBrowserSourceAudioEnabledQuery": {
        "hash": "f4edd1b691ba85f68c824c13da18c7d1f33d7f79b3865c2db724aa3003b5e306",
        "query": "query GetIsBrowserSourceAudioEnabledQuery($channelLogin: String!) {\n  guestStarSettings(userLogin: $channelLogin) {\n    id\n    hostSettings {\n      isBrowserSourceAudioEnabled\n      shouldSendSelfCamAudioViaBrowserSource\n      isSelfCamEnabled\n    }\n  }\n}\n"
    },
    "DropinDisplayBadges": {
        "hash": "9776bfcdfe26aa84ad7e2a99d81221ed1cbfee5f7eec1bde9d2df6d5bbb25a1e",
        "query": "query DropinDisplayBadges($id: ID!) {\n  user(id: $id) {\n    id\n    displayBadges {\n      ...badge\n    }\n  }\n}\n"
    },
    "GuestStarSwapRequestModalUserQuery": {
        "hash": "9b9caf2eb7c4a612b3d914b1d3bf7f186535a0b4f9718e54e7316f59fe356144",
        "query": "query GuestStarSwapRequestModalUserQuery($userID: ID!) {\n  user(id: $userID) {\n    id\n    displayName\n    login\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "AddGuestStarMod": {
        "hash": "250a39693f16c9b36ca7159f2fe6ffc02999e8c67e9204da8fa5521ef950feed",
        "query": "mutation AddGuestStarMod($input: AddGuestStarModeratorInput!) {\n  addGuestStarModerator(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveGuestStarMod": {
        "hash": "bc114a5fe6cb42c1c6d7c3c79464d1304d946778ed6cef69049952517ee5a07c",
        "query": "mutation RemoveGuestStarMod($input: RemoveGuestStarModeratorInput!) {\n  removeGuestStarModerator(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SetModSettings": {
        "hash": "7e0131acb39ad9795dcfb80da1e610a36df084adab6e93539a945d1c24cccfd3",
        "query": "mutation SetModSettings($input: SetGuestStarUserSettingsInput!) {\n  setGuestStarUserSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GuestStarModeratorSettings": {
        "hash": "1a3e162f887eebda188b78e1a957419b5118a1b278f4c637a70b82eb8be7146e",
        "query": "query GuestStarModeratorSettings($hostLogin: String!) {\n  guestStarSettings(userLogin: $hostLogin) {\n    id\n    canModeratorsSendSlotsLive\n  }\n}\n"
    },
    "joinGuestStarSession": {
        "hash": "71bf45c9643cc3370aa44e3b5066fc9e9efa01c37ac95f4677fb8af2c792947e",
        "query": "mutation joinGuestStarSession($input: JoinGuestStarSessionInput!) {\n  joinGuestStarSession(input: $input) {\n    tokens {\n      ...guestStarToken\n    }\n    session {\n      id\n      host {\n        id\n        login\n      }\n      guests {\n        ...sessionParticipant\n      }\n      version\n    }\n    error {\n      code\n    }\n  }\n}\n\nfragment guestStarToken on GuestStarToken {\n  id\n  participantToken\n  role\n}\n"
    },
    "SetGuestStarUserSettings": {
        "hash": "d66ef183099f8b8c825db278433f8109761da1336a5fdb849400993c1ff8e522",
        "query": "mutation SetGuestStarUserSettings($input: SetGuestStarUserSettingsInput!) {\n  setGuestStarUserSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GuestStarUserSettings": {
        "hash": "fa57316d31cad9d15ad600c08bd005cf716eaf34ace462c95cddc3ba4fa0a572",
        "query": "query GuestStarUserSettings($channelLogin: String!) {\n  guestStarSettings(userLogin: $channelLogin) {\n    id\n    slotCount\n    canModeratorsSendSlotsLive\n    hostSettings {\n      browserSourceLayout\n      guestScreensharePermission\n      isAutoPushEnabled\n    }\n  }\n}\n"
    },
    "AddFavorite": {
        "hash": "38b25cf66878e90dd79eab24d0fd1fe280ebc316f4434a2be511b6e197483ade",
        "query": "mutation AddFavorite($input: AddUserToGuestStarFavoritesInput!) {\n  addUserToGuestStarFavorites(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "AssignUserToSlot": {
        "hash": "3ede68fe7652eb9ee66d981952329a9a4520be43dba3de9b2bf093540ed403e4",
        "query": "mutation AssignUserToSlot($input: AssignUserToGuestStarSlotInput!) {\n  assignUserToGuestStarSlot(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "StreamTogetherCanStartSession": {
        "hash": "57ecc145ffc0d8b4d340cb22d2fe75b061c58d2b8d8c03b3332e4d58f94c4174",
        "query": "query StreamTogetherCanStartSession($channelLogin: String!) {\n  guestStarSettings(userLogin: $channelLogin) {\n    id\n    hostSettings {\n      canStartSession\n    }\n  }\n}\n"
    },
    "GuestStarCancelJoinRequest": {
        "hash": "a303b4bd36e6ec17f3e502616216a6259b4a8b49540b133cc6eef710fadc4eb4",
        "query": "mutation GuestStarCancelJoinRequest($input: CancelGuestStarActiveJoinRequestInput!) {\n  cancelGuestStarActiveJoinRequest(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EndGuestStarSession": {
        "hash": "1c69cb8dc63ad1e148a45caa75fe3f05b5cdf59e9a601e861c25be6753e64156",
        "query": "mutation EndGuestStarSession($input: EndGuestStarSessionInput!) {\n  endGuestStarSession(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GuestStarActiveJoinRequest": {
        "hash": "725d37e0ca3a2ca0dc97de8773fc1fddcb1b3baae1e1ed9641db4b205c21d067",
        "query": "query GuestStarActiveJoinRequest() {\n  guestStarActiveJoinRequest {\n    callee {\n      id\n    }\n    host {\n      id\n      login\n    }\n    id\n    status\n  }\n}\n"
    },
    "GetGuestStarBrowserSourceProps": {
        "hash": "c6382c2b199d0d081f3e5e17ad74d915199fecccdb5d5beedd6aadb019017c8c",
        "query": "query GetGuestStarBrowserSourceProps($channelLogin: String!, $sessionOptions: GuestStarSessionOptions!, $viewOnlyToken: String) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n    }\n  }\n  guestStarSession(options: $sessionOptions) {\n    id\n    host {\n      id\n      login\n    }\n    hostSettings {\n      browserSourceLayout\n    }\n  }\n  guestStarSettings(userLogin: $channelLogin, viewOnlyKey: $viewOnlyToken) {\n    id\n    hostSettings {\n      isBrowserSourceAudioEnabled\n      isSelfCamEnabled\n      shouldSendSelfCamAudioViaBrowserSource\n      browserSourceLayout\n    }\n  }\n}\n"
    },
    "GetGuestStarBrowserSourceList": {
        "hash": "25616e42a4515d0422fe8953ebd9ce6998543c18f77fe11f10479be49fabd92c",
        "query": "query GetGuestStarBrowserSourceList($sessionID: ID!, $userID: ID, $limit: Int, $cursor: Cursor) {\n  guestStarBrowserSources(sessionID: $sessionID, userID: $userID, first: $limit, after: $cursor) {\n    edges {\n      cursor\n      node {\n        ...guestStarBrowserSource\n      }\n    }\n  }\n}\n\nfragment guestStarBrowserSource on GuestStarBrowserSource {\n  user {\n    id\n  }\n  status\n  createdAt\n  updatedAt\n  nonce\n}\n"
    },
    "GuestStarFollowers": {
        "hash": "da3b1b8f1bd99505ed124d037e1e193d8cc32c36c262c49c33a496da59c47561",
        "query": "query GuestStarFollowers($login: String, $limit: Int, $cursor: Cursor, $order: SortOrder) {\n  user(login: $login) {\n    id\n    followers(first: $limit, after: $cursor, order: $order) {\n      edges {\n        cursor\n        node {\n          id\n          ...userCardFragment\n        }\n        followedAt\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "GuestStarModChannelsList": {
        "hash": "4e70f0bd0040a0722989afb47db187e2c6e689af1b83c4b80926494ebc26ff42",
        "query": "query GuestStarModChannelsList($login: String!, $cursor: Cursor) {\n  user(login: $login) {\n    id\n    guestStarModeratorChannels(first: 100, after: $cursor) {\n      edges {\n        ...guestStarModChannelEdgeFragment\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment guestStarModChannelEdgeFragment on GuestStarModeratorChannelEdge {\n  cursor\n  node {\n    id\n    login\n  }\n}\n"
    },
    "GuestStarModList": {
        "hash": "b2fbe2aec36df5ba560851f70944c965508e27fdd5811675c74ddfb18b524a19",
        "query": "query GuestStarModList($login: String!, $cursor: Cursor) {\n  user(login: $login) {\n    id\n    guestStarModerators(first: 100, after: $cursor) {\n      edges {\n        ...guestStarModEdgeFragment\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment guestStarModEdgeFragment on GuestStarModeratorEdge {\n  cursor\n  node {\n    id\n  }\n}\n"
    },
    "GetHostQueueInfo": {
        "hash": "baa4e0a4c3f2443f524dacd9c67e97f84e912878d7d1266b6b33b9832345562b",
        "query": "query GetHostQueueInfo($channelID: ID!) {\n  requestToJoinHostQueueInfo(channelID: $channelID) {\n    id\n    size\n    status\n    maximumSize\n    isSubsEnabled\n    isAudioOnlyEnabled\n    isfollowersEnabled\n    minFollowingLength\n    minSubscriptionLength\n  }\n}\n"
    },
    "GuestStarMods": {
        "hash": "1bfed12160b2a5017af51a98cc69d0c633774ad67e956e112b56a860b541ee6a",
        "query": "query GuestStarMods($login: String, $first: Int, $after: Cursor) {\n  user(login: $login) {\n    id\n    mods(first: $first, after: $after) {\n      edges {\n        cursor\n        grantedAt\n        node {\n          id\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "GuestStarRecents": {
        "hash": "3b9c27391e515bec891959d4c13ee46a05f156ded7d40f512dd19062947181da",
        "query": "query GuestStarRecents($channelID: ID, $channelLogin: String, $after: Cursor, $first: Int) {\n  guestStarRecentGuests(channelID: $channelID, channelLogin: $channelLogin, after: $after, first: $first) {\n    pageInfo {\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        lastInvitedAt\n        recentGuest {\n          id\n          self {\n            hasGuestStarFavorited\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "GuestStarRecommendedCollaborators": {
        "hash": "389080a703ad782bbfe55446b994c8e48ce3e6eebe97e144ee42954c0420283e",
        "query": "query GuestStarRecommendedCollaborators($channelID: ID!) {\n  guestStarRecommendedCollaborators(channelID: $channelID) {\n    recommendedCollaborators {\n      user {\n        ...guestStarStreamTogetherUser\n      }\n      socialCue\n    }\n  }\n}\n"
    },
    "GuestStarRecommendedFavorites": {
        "hash": "3af30036e0e7d9baa7ec5710235bd85fe8cb7b87134c20fd47a77150b496d5d4",
        "query": "query GuestStarRecommendedFavorites($channelID: ID!) {\n  guestStarRecommendedFavorites(channelID: $channelID) {\n    recommendedFavorites {\n      user {\n        ...guestStarStreamTogetherUser\n      }\n      socialCue\n    }\n  }\n}\n"
    },
    "GetRequestToJoinQueue": {
        "hash": "9ffb6771364b9140358f3d9e508d8c4b7e9b127ba5df07660c82c8838e2ea783",
        "query": "query GetRequestToJoinQueue($input: RequestToJoinQueueOptions, $cursor: Cursor) {\n  requestToJoinQueue(input: $input) {\n    id\n    host {\n      id\n      availability\n    }\n    status\n    size\n    requestToJoinGuests(first: 20, after: $cursor) {\n      edges {\n        cursor\n        node {\n          id\n          user {\n            ...guestStarRequestUser\n          }\n          isSub\n          isMod\n          isVIP\n          isArtist\n          isFollower\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      totalCount\n    }\n  }\n}\n\nfragment guestStarRequestUser on User {\n  id\n  login\n  profileImageURL(width: 300)\n  displayBadges {\n    ...badge\n  }\n}\n"
    },
    "GetGuestStarSelfTokenQuery": {
        "hash": "6605dfb3e9158fd1987193de9592e9b4a0db0fd2edb21edabb70efb6c06e22d2",
        "query": "query GetGuestStarSelfTokenQuery($channelLogin: String!, $isAuthenticatedRequest: Boolean!) {\n  guestStarSettings(userLogin: $channelLogin) @include(if: $isAuthenticatedRequest) {\n    id\n    viewOnlyToken\n  }\n}\n"
    },
    "GuestStarStreamInfo": {
        "hash": "3aba2160dde8a05cad681376860c16ff3cca27306e887e8be1b6158f3bc94872",
        "query": "query GuestStarStreamInfo($login: String!) {\n  user(login: $login) {\n    id\n    lastBroadcast {\n      id\n      title\n      game {\n        id\n        displayName\n      }\n    }\n  }\n}\n"
    },
    "GuestStarSubscribers": {
        "hash": "a5179ce1e9a52d2326cfc47b3d84ee670133c1b56da1771687c7b36cdd392b9b",
        "query": "query GuestStarSubscribers($channelID: ID, $limit: Int, $cursor: String, $order: Int) {\n  channel(id: $channelID) {\n    id\n    allSubscriptions(limit: $limit, cursor: $cursor, order: $order) {\n      edges {\n        cursor\n        node {\n          userID\n          startsAt\n          tier\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "GuestStarTeam": {
        "hash": "f03fbeeac781aea1e5bdd2cff28f1180de17eba9ed35831a746e0cb18571a02b",
        "query": "query GuestStarTeam($login: String, $first: Int, $after: Cursor) {\n  user(login: $login) {\n    id\n    teamMemberships {\n      team {\n        id\n        members(first: $first, after: $after) {\n          edges {\n            cursor\n            node {\n              id\n            }\n          }\n          pageInfo {\n            hasNextPage\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "GuestStarUser": {
        "hash": "dfe4f8b1662be6fa4e5f253cf14ab43115e7eed331aa65be29dcd5cea1d2f8bc",
        "query": "query GuestStarUser($userID: ID) {\n  user(id: $userID) {\n    id\n    displayName\n    login\n    self {\n      hasGuestStarFavorited\n    }\n    displayBadges {\n      ...badge\n    }\n    ...userCardFragment\n  }\n}\n"
    },
    "GetGuestStarUserPreferences": {
        "hash": "2f738b3420bd922d8e1d60e49941ff54502689355dd0401141cca5af9af68d87",
        "query": "query GetGuestStarUserPreferences($guestIDs: [ID!], $userID: ID, $viewOnlyToken: String) {\n  guestStarUserPreferences(guestIDs: $guestIDs, userID: $userID, viewOnlyToken: $viewOnlyToken) {\n    ...guestStarPreferences\n  }\n}\n\nfragment guestStarPreferences on GuestStarUserPreferences {\n  host {\n    id\n  }\n  guest {\n    id\n    self {\n      hasGuestStarFavorited\n    }\n    stream {\n      id\n    }\n  }\n  volume\n  cohostPermission\n  isMuted\n  screenshareVolume\n  isScreenshareMuted\n}\n"
    },
    "GuestStarVips": {
        "hash": "5daef7e0bf593d9faba1a76290dcbebe2ba7ede7de22897485e6cab45c59d14e",
        "query": "query GuestStarVips($login: String, $first: Int, $after: Cursor) {\n  user(login: $login) {\n    id\n    vips(first: $first, after: $after) {\n      edges {\n        cursor\n        grantedAt\n        node {\n          id\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "InviteUserToGuestStarSession": {
        "hash": "1c15f78bb11ba8208fc3bb319703ab90f20e50f8dae9dfa8f2c65c7d24d82ba3",
        "query": "mutation InviteUserToGuestStarSession($input: InviteUserToGuestStarSessionInput!) {\n  inviteUserToGuestStarSession(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GetGuestStarAllSessionInvitesQuery": {
        "hash": "05c8ef063736742a357c232b70b1d005ca9278d84e9cc2972777ce98fd538d10",
        "query": "query GetGuestStarAllSessionInvitesQuery($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    invites(first: 100) {\n      edges {\n        node {\n          guest {\n            id\n            login\n            displayName\n          }\n          invitedBy {\n            id\n            login\n            displayName\n          }\n          readyState\n        }\n      }\n    }\n  }\n}\n"
    },
    "GuestStarChannelPageCollaborationQuery": {
        "hash": "2e31195b3eb7b4c9f2ceadd8edd13c06fa0b637abbb2d7f8eeb4c42291c6225c",
        "query": "query GuestStarChannelPageCollaborationQuery($options: GuestStarChannelCollaborationOptions, $openCallingIsEnabled: Boolean!) {\n  guestStarCollaborationStatuses(options: $options) @include(if: $openCallingIsEnabled) {\n    shouldRefetch\n    shouldSubscribeToUpdates\n    channelCollabs {\n      ...guestStarJoinRequestChannelCollab\n    }\n  }\n}\n\nfragment guestStarJoinRequestChannelCollab on GuestStarChannelCollaboration {\n  id\n  session {\n    ...guestStarOngoingSession\n  }\n  canJoinStatus\n  isFavorite\n}\n"
    },
    "PromoteViewerFromRTJQueue": {
        "hash": "ffb167514686d41cfd97eafaa108c0521c937411f4a223227bb55968b004c5c6",
        "query": "mutation PromoteViewerFromRTJQueue($input: PromoteViewerFromRTJQueueInput!) {\n  promoteViewerFromRTJQueue(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "removeAllGuestsFromSession": {
        "hash": "015405f9d4ac8ef55f8187305e685526903664b87c060e407c8e0ff4b14884d2",
        "query": "mutation removeAllGuestsFromSession($input: RemoveAllUsersFromGuestStarSlotsInput!) {\n  removeAllUsersFromGuestStarSlots(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveFavorite": {
        "hash": "3f560610cc68364cb9f2ae704159bca780f79db8eeb2fc7c5a6b92b347cb286a",
        "query": "mutation RemoveFavorite($input: RemoveUserFromGuestStarFavoritesInput!) {\n  removeUserFromGuestStarFavorites(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveGuestFromSession": {
        "hash": "4ad4a1ee0f952cab0706d0bf4034554a95469a2e5b2a377aa253b975b3493bd3",
        "query": "mutation RemoveGuestFromSession($input: RemoveUserFromGuestStarSlotInput!) {\n  removeUserFromGuestStarSlot(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveInviteFromSession": {
        "hash": "9664c0acc5959c4fec2a67e7ab297c87db3fb698410cf12b0476ed9a34409cc2",
        "query": "mutation RemoveInviteFromSession($input: RemoveGuestStarInviteInput!) {\n  removeGuestStarInvite(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ScheduleFutureGuestStarInvite": {
        "hash": "373816c54a9b008b6e31d576112187fdec9fe24518f2447df1eec3955947ede9",
        "query": "mutation ScheduleFutureGuestStarInvite($input: ScheduleFutureGuestStarInviteInput!) {\n  scheduleFutureGuestStarInvite(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GuestStarSendJoinRequest": {
        "hash": "39b30109e2194489aaa7a7dd31a54b5801df6fe2bde730df0d31deeaec87720c",
        "query": "mutation GuestStarSendJoinRequest($input: SendGuestStarJoinRequestInput!) {\n  sendGuestStarJoinRequest(input: $input) {\n    error {\n      code\n    }\n    joinRequest {\n      callee {\n        id\n      }\n      host {\n        id\n        login\n      }\n      id\n      status\n    }\n    session {\n      id\n      host {\n        id\n      }\n      guests {\n        id\n        user {\n          id\n        }\n      }\n      self {\n        isConnected\n      }\n    }\n  }\n}\n"
    },
    "SetGuestStarSlotSettings": {
        "hash": "3e16b3a1fbf8d621763d584847037127f2d9ca1a539c66b585ef6dc6ff73ec9d",
        "query": "mutation SetGuestStarSlotSettings($input: SetGuestStarSlotSettingsInput!) {\n  setGuestStarSlotSettings(input: $input) {\n    session {\n      id\n      guests {\n        ...sessionParticipant\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SetGuestStarCollabSettings": {
        "hash": "8d4834e555394a60dfb42d4b247d9ae62d0c271b2ec78efc49ee7259848eb874",
        "query": "mutation SetGuestStarCollabSettings($input: SetGuestStarCollabSettingsInput!) {\n  setGuestStarCollabSettings(input: $input) {\n    collabSettings {\n      id\n      doNotDisturbSetting\n      doNotDisturbUntil\n      shouldAllowAffiliates\n      shouldAllowFollows\n      shouldAllowPartners\n      shouldSkipDoNotDisturbForFavorites\n      statusMessage\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateInviteStatus": {
        "hash": "3eb74b9c86c724cf5708d9bfea7543e9d8d9fb3315e72f69be6b842dadc03f5d",
        "query": "mutation UpdateInviteStatus($input: UpdateGuestStarInviteStateInput!) {\n  updateGuestStarInviteState(input: $input) {\n    error {\n      code\n    }\n    invite {\n      guest {\n        id\n        login\n      }\n      readyState\n      audio {\n        isEnabled\n        isAvailable\n      }\n      video {\n        isEnabled\n        isAvailable\n      }\n      willNotifyFollowers\n    }\n  }\n}\n"
    },
    "SetGuestStarUserPreferences": {
        "hash": "87c8e24f1967e238aee07d62b87eeba0d638769a75801e1c47aa5f562b1a6006",
        "query": "mutation SetGuestStarUserPreferences($input: SetGuestStarUserPreferencesInput!) {\n  setGuestStarUserPreferences(input: $input) {\n    error {\n      code\n    }\n    userPreferences {\n      host {\n        id\n      }\n      guest {\n        id\n      }\n      volume\n      cohostPermission\n      isMuted\n      screenshareVolume\n    }\n  }\n}\n"
    },
    "StartGuestStarSession": {
        "hash": "7367c97a024476a319641f03be5ad2577d54ea7b9197a7414e37960ecead62eb",
        "query": "mutation StartGuestStarSession($input: StartGuestStarSessionInput!) {\n  startGuestStarSession(input: $input) {\n    error {\n      code\n    }\n    session {\n      id\n      guests {\n        id\n        isSlotLive\n        user {\n          id\n          displayName\n        }\n        audio {\n          isHostEnabled\n          isGuestEnabled\n          isAvailable\n        }\n        video {\n          isHostEnabled\n          isGuestEnabled\n          isAvailable\n        }\n      }\n      self {\n        guest {\n          token\n        }\n      }\n      invites {\n        edges {\n          cursor\n          node {\n            guest {\n              id\n              login\n            }\n            readyState\n            audio {\n              isEnabled\n              isAvailable\n            }\n            video {\n              isEnabled\n              isAvailable\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "SwapGuestStarSlotAssignment": {
        "hash": "a7ea0cd5b5e724aff6ff7e8dc92b3cbe12758b55adb48c9162611673c82af6a5",
        "query": "mutation SwapGuestStarSlotAssignment($input: SwapGuestStarSlotAssignmentInput!) {\n  swapGuestStarSlotAssignment(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateCollabStatus": {
        "hash": "7e045144c5dc1f7d711cc6d1b872dc3cefbb55ebfc0ace4f8110bc0d1d79abe9",
        "query": "mutation UpdateCollabStatus($input: SetGuestStarUserSettingsInput!) {\n  setGuestStarUserSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "setFavoriteManagementStatus": {
        "hash": "215a46ea55dada561e03707b4771028393a976333a88b00d12258f96dab89f9d",
        "query": "mutation setFavoriteManagementStatus($input: SetFavoriteManagementStatusInput!) {\n  setFavoriteManagementStatus(input: $input) {\n    error {\n      code\n    }\n    status\n  }\n}\n"
    },
    "BansSharingSettings": {
        "hash": "55653e97fe09920dff97a7a6e0bfe2f9b3b2dd9acbbf9e913e1bd26c31128d93",
        "query": "query BansSharingSettings($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    moderationSettings {\n      bansSharingSettings {\n        ... on BansSharingSettings {\n          ...bansSharingSettings\n        }\n        ... on BansSharingSettingsError {\n          code\n        }\n      }\n    }\n  }\n}\n"
    },
    "UserProfileImage": {
        "hash": "1561516413d601be1a852f93deef81fc286c13270f5c8c1419b85b3e95452ef4",
        "query": "query UserProfileImage($login: String!) {\n  user(login: $login) {\n    id\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "UpdateLowTrustUserTreatment": {
        "hash": "95588681cdd3b7aea6d2c7d5f22145e6535c6beb9b735a66a459846f64c8f04d",
        "query": "mutation UpdateLowTrustUserTreatment($input: UpdateLowTrustUserTreatmentInput!) {\n  updateLowTrustUserTreatment(input: $input) {\n    properties {\n      ...lowTrustUserProperties\n    }\n    error\n  }\n}\n"
    },
    "ModLogsAccessQuery": {
        "hash": "d837d0ecf2c49fac36b5b4044632ea558462384cfe57c4903507f6940b29e8f4",
        "query": "query ModLogsAccessQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    moderationSettings {\n      canAccessViewerCardModLogs\n    }\n  }\n}\n"
    },
    "ViewerCardModLogsPermissions": {
        "hash": "ab7b1e2ba87aa086b3a377e8b1af5c96455c3c420d1a2761a9420189157b7b15",
        "query": "query ViewerCardModLogsPermissions($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    self {\n      isModerator\n    }\n  }\n  channel(name: $channelLogin) {\n    id\n    moderationSettings {\n      canAccessViewerCardModLogs\n    }\n  }\n  currentUser {\n    login\n    id\n  }\n}\n"
    },
    "ViewerCardModLogs": {
        "hash": "574edc28755fec9365abfd05453c558aa0cb00228a75151b7064194efdfe6108",
        "query": "query ViewerCardModLogs($channelID: ID!, $channelLogin: String!, $targetID: ID!) {\n  user(id: $targetID) {\n    id\n    login\n  }\n  user(login: $channelLogin) {\n    id\n    login\n  }\n  currentUser {\n    login\n    id\n  }\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    messages(first: 1000, excludeModActions: true) {\n      ... on ViewerCardModLogsMessagesError {\n        code\n      }\n      ... on ViewerCardModLogsMessagesConnection {\n        pageInfo {\n          hasNextPage\n        }\n        count\n      }\n    }\n    targetedActions(first: 99, type: BAN) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: TIMEOUT) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: UNBAN) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: UNTIMEOUT) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: UNBAN_REQUEST_APPROVED) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: UNBAN_REQUEST_DENIED) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: WARN) {\n      ...modLogsTargetedActionsResultFragment\n    }\n    targetedActions(first: 99, type: ACKNOWLEDGE_WARNING) {\n      ...modLogsTargetedActionsResultFragment\n    }\n  }\n}\n\nfragment modLogsTargetedActionsResultFragment on ModLogsTargetedActionsResult {\n  __typename\n  ... on ModLogsTargetedActionsError {\n    code\n  }\n  ... on ModLogsTargetedActionsConnection {\n    count\n    pageInfo {\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        ...modLogsTargetedActionFragment\n      }\n    }\n  }\n}\n\nfragment modLogsTargetedActionFragment on ModLogsTargetedAction {\n  id\n  localizedLabel {\n    fallbackString\n    ...modActionTokens\n  }\n  timestamp\n  type\n}\n"
    },
    "Channel_ChatRules": {
        "hash": "98b9c177337ec9117b96dd488914324e61af3140f8f1be9e26cf2a5226267e79",
        "query": "query Channel_ChatRules($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    chatSettings {\n      rules\n    }\n  }\n}\n"
    },
    "WarnUser": {
        "hash": "77ab178c2df637de244eb168fb66f236b860cef4b11dbf8c1e3c37706fe42d07",
        "query": "mutation WarnUser($input: WarnUserInChatRoomInput!) {\n  warnUserInChatRoom(input: $input) {\n    warnedUser {\n      id\n      login\n      displayName\n    }\n    warningDetails {\n      id\n      warnedBy {\n        id\n        login\n        displayName\n      }\n      reason\n      createdAt\n      chatRulesCited\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "AddRecommendationFeedback": {
        "hash": "616d9b6eff81859974c7aa562edb40e68c52cf41a41a9812dabe6b85816201f1",
        "query": "mutation AddRecommendationFeedback($input: AddRecommendationFeedbackInput!) {\n  addRecommendationFeedback(input: $input) {\n    recommendationFeedback {\n      id\n    }\n  }\n}\n"
    },
    "ReportMenuItem": {
        "hash": "b366d86209b8b9694c5901ff024eb4101474b04c0eb272c478cfcddbef65df8f",
        "query": "query ReportMenuItem($channelID: ID!) {\n  requestInfo {\n    countryCode\n  }\n  user(id: $channelID) {\n    id\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "SubModal": {
        "hash": "5f4598f93824c3d0565be5b37b29b91e71e53518f4135e2a13a36c13acbc15a0",
        "query": "query SubModal($login: String!, $includeExpiredDunning: Boolean) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n    }\n    self {\n      subscriptionBenefit(includeExpiredDunning: $includeExpiredDunning) {\n        id\n      }\n    }\n  }\n}\n"
    },
    "GiftSubscribeButton_Gift_Eligibility": {
        "hash": "e2dbaf7677533ae7ec267f2891af19f6062f7e7ff8f0a2412bfdcb59ea7dcdb6",
        "query": "query GiftSubscribeButton_Gift_Eligibility($recipientLogin: String, $subProductId: String!) {\n  user(login: $recipientLogin) {\n    id\n    self {\n      canGift(product: $subProductId)\n    }\n  }\n}\n"
    },
    "GiftRecipient_UserSubscriptionProducts": {
        "hash": "3add11d0fadb4b0f15c0b84e7b1e07396838ef310cff02f58c475a65dc5b23b0",
        "query": "query GiftRecipient_UserSubscriptionProducts($channelOwnerID: ID!, $giftRecipientID: String!) {\n  user(id: $channelOwnerID) {\n    id\n    subscriptionProducts {\n      ...giftRecipientUserSubscriptionProduct\n    }\n  }\n}\n"
    },
    "OneClickEligibility": {
        "hash": "6af486b0338610e4f35ec2a9f14a741f024a34340ab9d0ea271eadf2d550fe84",
        "query": "query OneClickEligibility($walletType: WalletType!) {\n  requestInfo {\n    countryCode\n  }\n  currentUser {\n    id\n    paymentMethods {\n      ...paymentMethodFragment\n    }\n    walletBalances(walletType: $walletType) {\n      allBalances {\n        amount\n        currency\n        expiresAt\n        exponent\n      }\n    }\n    residence {\n      ...userResidenceFragment\n    }\n  }\n  recurlyConfigs {\n    payWithAmazonConfigs {\n      clientID\n      isProduction\n      sellerID\n    }\n    braintreeClientAuthorization\n    publicKey\n  }\n}\n"
    },
    "SupportPanelSingleGifting_GiftingOptions": {
        "hash": "31cdbfde436e8c6c26f7418e5a383ac84742af08c0c2ad31084c753fb8a2586a",
        "query": "query SupportPanelSingleGifting_GiftingOptions($login: String!, $giftRecipientLogin: String, $withStandardGifting: Boolean, $withCheckoutPrice: Boolean) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      price\n      url\n      emoteSetID\n      displayName\n      name\n      tier\n      type\n      hasAdFree\n      emotes {\n        ...subscriptionProductEmote\n      }\n      emoteModifiers {\n        ...subscriptionProductEmoteModifier\n      }\n      interval {\n        unit\n      }\n      self {\n        canGiftInChannel\n      }\n      offers {\n        ...subProductOfferFragment\n      }\n      gifting {\n        ...subStandardGiftingFragment\n        standard(recipientLogin: $giftRecipientLogin) @include(if: $withStandardGifting) {\n          offer @include(if: $withCheckoutPrice) {\n            ...productOfferCheckoutPrice\n          }\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "RedeemSubTokenMutation": {
        "hash": "14829fb93c1eecf40316281556729ba6e687f46b4752fb6086e9e98d88e40d2b",
        "query": "mutation RedeemSubTokenMutation($input: PurchaseOfferInput!) {\n  purchaseOffer(input: $input) {\n    purchaseOrder {\n      id\n      actionTokenID\n      state\n    }\n    error\n  }\n}\n"
    },
    "SupportPanelSubTokenBalance": {
        "hash": "ca789a81125b21a2732de1d260771e6e1b65106ed2a76a48095c1106b07919ee",
        "query": "query SupportPanelSubTokenBalance() {\n  currentUser {\n    id\n    subscriptionToken {\n      balance\n    }\n  }\n}\n"
    },
    "SupportPanelSubTokenOffers": {
        "hash": "479863e28c38cbe2afe4382624de468deaced51e9d7e29dbc434fcddb6e6f778",
        "query": "query SupportPanelSubTokenOffers($id: ID!, $withSingleGifting: Boolean!, $withCommunityGifting: Boolean!, $withRecurringSubscriptions: Boolean!, $recipientLogin: String) {\n  user(id: $id) {\n    id\n    subscriptionProducts {\n      id\n      gifting {\n        community @include(if: $withCommunityGifting) {\n          offer {\n            ...subTokenOffer\n          }\n        }\n        standard(recipientLogin: $recipientLogin) @include(if: $withSingleGifting) {\n          offer {\n            ...subTokenOffer\n          }\n        }\n      }\n      offers @include(if: $withRecurringSubscriptions) {\n        ...subTokenOffer\n      }\n      tier\n    }\n  }\n}\n\nfragment subTokenOffer on Offer {\n  id\n  eligibility {\n    isEligible\n  }\n  listing {\n    chargeModel {\n      credit {\n        amount\n        creditType\n      }\n    }\n  }\n}\n"
    },
    "ExtensionPanel_BitsBalance": {
        "hash": "999ea458156b660edd61fe129fb7bccde1fdb5095fb544b36171262bd000e3ab",
        "query": "query ExtensionPanel_BitsBalance() {\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "ExtensionPanelAuthoredExtensions": {
        "hash": "8e1471d0ab8dad58c2a1c5acb4347942ab0fb238e121b6267425b5005f2b3598",
        "query": "query ExtensionPanelAuthoredExtensions() {\n  extensionClients {\n    edges {\n      node {\n        id\n      }\n    }\n  }\n}\n"
    },
    "PopoutExtension_UserQuery": {
        "hash": "1bb9a5b961d2556680f429cdd2d077d32421b5f78f1579a11e2bc34175a19b52",
        "query": "query PopoutExtension_UserQuery($login: String!) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $login) {\n    id\n    login\n  }\n}\n"
    },
    "BountyBoardCTAGameName": {
        "hash": "f053abb83be62dbda3b1f5378c848b605c2bbb6da5f885037a8a05290bfbabac",
        "query": "query BountyBoardCTAGameName($id: ID) {\n  game(id: $id) {\n    id\n    displayName\n  }\n}\n"
    },
    "TurboProductInformation": {
        "hash": "44da17ce277bcce6ac6f08c6de46aefbd23ae759ca523030926c49c3254672e9",
        "query": "fragment turboProductOfferFragment on Offer {\n  id\n  eligibility {\n    benefitsStartAt\n    isEligible\n  }\n  listing {\n    chargeModel {\n      internal {\n        previewPrice {\n          id\n          currency\n          exponent\n          total\n          discount {\n            total\n          }\n        }\n      }\n    }\n  }\n  tagBindings {\n    key\n    value\n  }\n  tplr\n}\n\nquery TurboProductInformation($name: String!) {\n  subscriptionProduct(productName: $name) {\n    id\n    offers {\n      ...turboProductOfferFragment\n    }\n    self {\n      benefit {\n        id\n        states {\n          state\n          createdAt\n        }\n        renewsAt\n        pendingSubscription {\n          startsAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardDashboard_BountyList": {
        "hash": "8f65fce76158103e2f05721b39caa0e79de1db5f516bbcca93c6e3e991d6a01a",
        "query": "query SunlightBountyBoardDashboard_BountyList($login: String!, $status: String!, $first: Int!, $cursor: Cursor) {\n  user(login: $login) {\n    id\n    bountiesPage(status: $status, first: $first, after: $cursor) {\n      edges {\n        ...bountyEdge\n      }\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardDashboard_ClaimBounty": {
        "hash": "5a40fa527ab9dff9741d827a109dec9bcbdc1354a13b735b3b7cd058bd0edb83",
        "query": "mutation SunlightBountyBoardDashboard_ClaimBounty($input: ClaimBountyInput!) {\n  claimBounty(input: $input) {\n    claimedBounty {\n      ...bounty\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardDashboard_CancelBounty": {
        "hash": "35a68dd1de2beeea2087de63e6f02a28d50405afc878c12fc68d42a63f78aa25",
        "query": "mutation SunlightBountyBoardDashboard_CancelBounty($input: CancelBountyInput!) {\n  cancelBounty(input: $input) {\n    bounty {\n      ...bounty\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardDashboard_AllocateBountyKey": {
        "hash": "108582eb3485be8e1a8a8a465cbd20487cce3c231a1a997c5e0a9fd30865ac17",
        "query": "mutation SunlightBountyBoardDashboard_AllocateBountyKey($input: AllocateKeysForBountyInput!) {\n  allocateKeysForBounty(input: $input) {\n    bounty {\n      ...bounty\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardDashboard_UserSettings": {
        "hash": "0a0f77cc5e97a0e9d36514a3361dce3d07f5dd80551418802290564d897567e0",
        "query": "query SunlightBountyBoardDashboard_UserSettings($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    bountyBoardSettings {\n      status\n    }\n  }\n}\n"
    },
    "DevGetExtensionManifestsSummary": {
        "hash": "79f57233be081883fb60de0da660e27b7c20df05c3ebee2d55bfe0d442a2060b",
        "query": "query DevGetExtensionManifestsSummary($id: ID!) {\n  extensionManifestsSummary(id: $id) {\n    isDeleted\n  }\n}\n"
    },
    "DeleteModActions": {
        "hash": "ef7015653fe761bd5de1e6f2da71770d598a10b5d89e8f0a3017798923ad961f",
        "query": "mutation DeleteModActions($input: DeleteModerationActionsInput!) {\n  deleteModerationActions(input: $input) {\n    deletedActionIDs\n  }\n}\n"
    },
    "ModActionsList": {
        "hash": "4fc90155ac6610b35967903d43411bc444fb680d34831cf534ddac72bb40b382",
        "query": "query ModActionsList($channelID: ID!, $after: Cursor) {\n  channel(id: $channelID) {\n    id\n    moderationActionLogs(after: $after) {\n      ... on ModerationActionLogsError {\n        code\n      }\n      ... on ModerationActionLogsConnection {\n        edges {\n          ...modActionEdge\n        }\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n}\n"
    },
    "ModActionFilterCategories": {
        "hash": "18a256549811460b4a692d3200cb19be9df46f87d075f4780de858ec6de92585",
        "query": "query ModActionFilterCategories() {\n  moderationActionsFilterCategories {\n    id\n    label\n  }\n}\n"
    },
    "ModActionsUser": {
        "hash": "404667286727d16d3e5fb47474551a5bfb39ef9d60fd3e41fcfc18c2f1af4dee",
        "query": "query ModActionsUser($id: ID!) {\n  user(id: $id) {\n    ...modActionsUserFragment\n  }\n}\n\nfragment modActionsUserFragment on User {\n  id\n  login\n  displayName\n}\n"
    },
    "UpdateChannelClipSettings": {
        "hash": "58a332b654a76cb40a206fd05a9116cccd698c21fab30302f3fdf4b9f2ed29b0",
        "query": "mutation UpdateChannelClipSettings($input: UpdateChannelClipsSettingInput!) {\n  updateChannelClipsSetting(input: $input) {\n    channel {\n      id\n      clipsSettings {\n        isClipsCreationEnabled\n        creationRestrictedTo {\n          isFollower\n          isSubscriber\n        }\n        creationRestrictionOptions {\n          followingLengthMinutes\n        }\n        categoryBlocklist {\n          id\n          name\n          displayName\n          boxArtURL(width: 40, height: 55)\n        }\n        isViewerExportingEnabled\n        hasAcknowledgedViewerExportsLegalDisclosure\n        isClipsFeatureToggleDefaultEnabled\n        featuringRestrictedTo {\n          shouldAllowMods\n        }\n        discoverySetting\n      }\n    }\n  }\n}\n"
    },
    "Settings_ChannelClipsSettings": {
        "hash": "cef3ab16456adcf862be874d9ab46c9e629e4194fd83a215a5832eb48482dc43",
        "query": "query Settings_ChannelClipsSettings($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isParticipatingDJ\n    }\n    channel {\n      id\n      clipsSettings {\n        isClipsCreationEnabled\n        creationRestrictedTo {\n          isFollower\n          isSubscriber\n        }\n        creationRestrictionOptions {\n          followingLengthMinutes\n        }\n        categoryBlocklist {\n          id\n          name\n          displayName\n          boxArtURL(width: 40, height: 55)\n        }\n        isViewerExportingEnabled\n        hasAcknowledgedViewerExportsLegalDisclosure\n        isClipsFeatureToggleDefaultEnabled\n        featuringRestrictedTo {\n          shouldAllowMods\n        }\n        discoverySetting\n      }\n    }\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "HomeOfflineCarousel": {
        "hash": "3efe67e53cbb5b9a0ac3a51c8af06d3350db7156c45faba7cf633975c1c587ec",
        "query": "fragment CarouselVideo on Video {\n  id\n  title\n  description\n  previewThumbnailURL(width: 640, height: 360)\n  publishedAt\n  owner {\n    id\n    login\n    displayName\n  }\n  game {\n    id\n    name\n    displayName\n  }\n}\n\nfragment CarouselUser on User {\n  id\n  login\n  displayName\n  profileImageURL(width: 50)\n  stream {\n    id\n    viewersCount\n    previewImageURL(width: 640, height: 360)\n    game {\n      id\n      name\n      displayName\n    }\n  }\n}\n\nfragment CarouselVideoConnection on VideoConnection {\n  edges {\n    node {\n      ...CarouselVideo\n    }\n  }\n}\n\nquery HomeOfflineCarousel($channelLogin: String!, $includeTrailerUpsell: Boolean!, $trailerUpsellVideoID: ID!) {\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n    description\n    channel {\n      id\n      home {\n        autohostCarouselCard(recommendationsContext: {platform: \"web\"}) {\n          channel {\n            id\n            owner {\n              ...CarouselUser\n            }\n          }\n          trackingID\n        }\n      }\n      socialMedias {\n        ...channelHomeSocialMedia\n      }\n      schedule {\n        id\n        nextSegment {\n          id\n          startAt\n        }\n      }\n      trailer {\n        video {\n          ...CarouselVideo\n          self {\n            viewingHistory {\n              updatedAt\n            }\n          }\n        }\n      }\n    }\n    videos(first: 1, type: ARCHIVE) {\n      ...CarouselVideoConnection\n    }\n    videos(first: 1, type: HIGHLIGHT) {\n      ...CarouselVideoConnection\n    }\n    roles {\n      isPartner\n      isAffiliate\n      isStaff\n    }\n    self {\n      isEditor\n      follower {\n        disableNotifications\n      }\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n  video(id: $trailerUpsellVideoID) @include(if: $includeTrailerUpsell) {\n    ...CarouselVideo\n  }\n}\n"
    },
    "CommunityMomentCallout_Claim": {
        "hash": "e5b1f775833eebc8a93567e32baeca2deaa4b29f429d1f0d4dc2fae91de23f36",
        "query": "mutation CommunityMomentCallout_Claim($input: ClaimCommunityMomentInput!) {\n  claimCommunityMoment(input: $input) {\n    moment {\n      id\n    }\n    error\n  }\n}\n"
    },
    "DropsPrivateCallout_Claim": {
        "hash": "442ae989d2368df22071e80a7c272a1b68e30463480456e8b79fe4475d290eab",
        "query": "mutation DropsPrivateCallout_Claim($dropInstanceID: ID!) {\n  claimDropRewards(input: {dropInstanceID: $dropInstanceID}) {\n    dropInstanceID\n    isUserAccountConnected\n    rewards {\n      id\n      accountLinkURL\n      name\n    }\n  }\n}\n"
    },
    "DropsPrivateCallout": {
        "hash": "933ed1822a698159ed862db4bb7fc1e4d7863b918e7837cdca8274af547fb4ec",
        "query": "query DropsPrivateCallout($dropInstanceID: ID!, $channelID: ID!) {\n  dropEligibility(dropInstanceID: $dropInstanceID) {\n    dropType {\n      id\n      ... on TimeBasedDrop {\n        id\n        name\n        campaign {\n          id\n          imageURL\n          detailsURL\n        }\n        benefitEdges {\n          benefit {\n            id\n            imageAssetURL\n          }\n        }\n      }\n    }\n  }\n  channel(id: $channelID) {\n    id\n    displayName\n  }\n}\n"
    },
    "IsWatchStreakShared": {
        "hash": "26e011da2a486588e6a4b1c15fe800f0a1f4a7b827b448a5ea789efc988a0db8",
        "query": "query IsWatchStreakShared($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    self {\n      watchStreakMilestone {\n        watchStreakMilestone {\n          id\n          shareStatus\n        }\n      }\n    }\n  }\n}\n"
    },
    "LapsedBitsUserCallout": {
        "hash": "0a1efc6bf0b567338ec5decfa527b3fc90935b083ed551b97a54e363152ab352",
        "query": "query LapsedBitsUserCallout() {\n  bitsUserInfo {\n    id\n    enrolledExperiments\n  }\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "UpdateBitsBadgeTierNotification": {
        "hash": "6502a27743b5990aabfdb6fd584b6f12dbb7dc86fb51ad085f516487a51d8d05",
        "query": "mutation UpdateBitsBadgeTierNotification($input: UpdateBitsBadgeTierNotificationInput!) {\n  updateBitsBadgeTierNotification(input: $input) {\n    user {\n      id\n    }\n  }\n}\n"
    },
    "Chat_ShareResub_CalloutData": {
        "hash": "526be1bd43e4e35ae236e0506c17e5b3e1b7945e4673b9f3a7e98e209cdbdd89",
        "query": "query Chat_ShareResub_CalloutData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      alertViewerCustomizations {\n        ...alertViewerCustomizationsFragment\n      }\n    }\n  }\n}\n"
    },
    "Chat_ShareResub_UseResubToken": {
        "hash": "0660c6b51de0d702c43f315217c5277537253eb6f8600f07c5de4a8ce60376eb",
        "query": "mutation Chat_ShareResub_UseResubToken($input: UseChatNotificationTokenInput!) {\n  useChatNotificationToken(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "SetEmoteAnimationsSettingCalloutDismissed": {
        "hash": "5f32c31b4ed7238887307961a2caf6625d4f5d3d8bb5f915f7a5127b86007492",
        "query": "mutation SetEmoteAnimationsSettingCalloutDismissed($input: SetEmoteAnimationsSettingCalloutDismissedInput!) {\n  setEmoteAnimationsSettingCalloutDismissed(input: $input) {\n    isEmoteAnimationsSettingCalloutDismissed\n  }\n}\n"
    },
    "CommunityPointsChatPrivateCalloutUser": {
        "hash": "69ac9a66f999aa031febabd0934457522fe3366cb44984a8b661254eb33fbaf0",
        "query": "query CommunityPointsChatPrivateCalloutUser($login: String!) {\n  user(login: $login) {\n    ...communityPointsUserFragment\n  }\n}\n"
    },
    "StreamEventsActiveCelebrationCalloutQuery": {
        "hash": "29d424f22d94266d4eef2dc169be112cf388098ff352ca08af10686323694055",
        "query": "query StreamEventsActiveCelebrationCalloutQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    activeStreamEventCelebration {\n      id\n    }\n  }\n}\n"
    },
    "Chat_EarnedBadges_ChannelData": {
        "hash": "acf88b9f860d8593ca4de34d52d298272d3bf45baafc4d67492c6dd56c5546ab",
        "query": "query Chat_EarnedBadges_ChannelData($channelID: ID!) {\n  currentChannelViewer(channelID: $channelID) {\n    id\n    earnedBadges {\n      ...badge\n    }\n  }\n}\n"
    },
    "Chat_EarnedBadges_InitialSubStatus": {
        "hash": "5df7ff29dc91621c51cf938973915a875667c49a7299e69bca846059af924874",
        "query": "query Chat_EarnedBadges_InitialSubStatus($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n}\n"
    },
    "GifterBadgeStatus": {
        "hash": "2f76a0f2b1485fd47c298e53d34189969712bb56a2a6e21fc1077a6ce5320b48",
        "query": "query GifterBadgeStatus($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      gifterBadgeStatus {\n        version\n        isExpired\n        accessDurationRemainingSeconds\n        accessEnd\n      }\n    }\n  }\n}\n"
    },
    "IsInPartnerPlusUpSellNudgeExperiment": {
        "hash": "6453547b572ae0cbd58a446270e279468ab7902f7f1f2bfebd20bc90e4f55c21",
        "query": "query IsInPartnerPlusUpSellNudgeExperiment($clusterID: ID!, $userID: ID!) {\n  experimentCluster(input: {clusterID: $clusterID, userID: $userID}) {\n    id\n    isEligible\n  }\n}\n"
    },
    "Chat_ShareBitsBadgeTier_ChannelData": {
        "hash": "346f6a948dfa8d4801306cc4b214557117d0874a50b937260b3b0c571f97487c",
        "query": "query Chat_ShareBitsBadgeTier_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      bitsBadge {\n        id\n        tierNotification {\n          id\n          threshold\n          canShare\n          unlockedEmoticons {\n            id\n            token\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "Chat_ShareBitsBadgeTier_AvailableBadges": {
        "hash": "4b19dc548483cc38bb972d4b8dd6c8073cccfba1de6acb405903ff6f1bfa4f0e",
        "query": "query Chat_ShareBitsBadgeTier_AvailableBadges($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      availableBadges {\n        ...badge\n      }\n      selectedBadge {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "Chat_ShareResub_ChannelData": {
        "hash": "33e997b205c269b297b3c71951e5f1dc862f221e2c9ebb98b691e2088f72bc23",
        "query": "query Chat_ShareResub_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      resubNotification {\n        id\n        cumulativeTenureMonths\n        months\n        streakTenureMonths\n        token\n        isGiftSubscription\n        gifter {\n          id\n          login\n          displayName\n        }\n      }\n    }\n  }\n}\n"
    },
    "CollaborationPromoPrivateCallout": {
        "hash": "577e88dfc17ec771f3b9e9865796ead6e9f2bd9e5acc07c7ef3e1b20cd141909",
        "query": "query CollaborationPromoPrivateCallout($channelID: ID!) {\n  sharedChatSession(channelID: $channelID) {\n    id\n    status\n  }\n}\n"
    },
    "SyncedSettingsEmoteAnimationsSettingCalloutDismissed": {
        "hash": "cbfc3317b0cf8ac45583e068417d7921a99db06292fed49de333b427a2a5cbaf",
        "query": "query SyncedSettingsEmoteAnimationsSettingCalloutDismissed() {\n  currentUser {\n    id\n    chatUISettings {\n      isEmoteAnimationsSettingCalloutDismissed\n    }\n  }\n}\n"
    },
    "ModerationToolsRewardsQueueLink": {
        "hash": "2eda871cb7290ec874433df95948f26a3c86cc6a806d3200cd57f73811d93dc9",
        "query": "query ModerationToolsRewardsQueueLink($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        summarizedRewards {\n          count\n          isCountAtMaximum\n        }\n      }\n    }\n  }\n}\n"
    },
    "RewardList": {
        "hash": "d07218854d7cc72750f2a679c0888fcb8f27d58adfb858eab5be619d4858b8f9",
        "query": "query RewardList($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    self {\n      watchStreakMilestone {\n        ...watchStreakMilestoneFragment\n      }\n    }\n  }\n}\n"
    },
    "ShareMilestone": {
        "hash": "a3e7798b2317f9e008928bf3905aaefc66a9f47c2630c88a80413bf274abce62",
        "query": "mutation ShareMilestone($input: ShareViewerMilestoneInput!) {\n  shareViewerMilestone(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RewardCenter_BitsBalance": {
        "hash": "1aea480150882242057a859acce5d4f73e447fab8f90d25e966cc5e951474621",
        "query": "query RewardCenter_BitsBalance() {\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "WatchStreakExperiment": {
        "hash": "1badf6c638436547fc6ec534a2d52ee678e6279016714a8b37d8004004c34b95",
        "query": "query WatchStreakExperiment($channelID: ID!) {\n  channelViewerMilestoneSettings(channelID: $channelID) {\n    id\n    isWatchStreakOptOut\n    isInWatchStreakProgressExperiment\n  }\n}\n"
    },
    "GetGuestStarSessionChannelPageQuery": {
        "hash": "3ccda0d37d2ce4f68ab2e702428fdaebb6a6de7eae362858042559dbb7eb9311",
        "query": "query GetGuestStarSessionChannelPageQuery($channelLogin: String!, $sessionOptions: GuestStarSessionOptions!) {\n  user(login: $channelLogin) {\n    ...guestStarUser\n  }\n  guestStarSession(options: $sessionOptions) {\n    id\n    self {\n      role\n    }\n    guests {\n      id\n      user {\n        id\n      }\n      status\n    }\n    host {\n      ...guestStarUser\n    }\n  }\n}\n"
    },
    "GetGuestSessionBlocksAndBans": {
        "hash": "3b5b3ec9515ae72bd8a3fa3012acadcc3cc07d60608cb7d618d4354ee8439e90",
        "query": "query GetGuestSessionBlocksAndBans($channelID: ID!, $sessionOptions: GuestStarSessionOptions!) {\n  user(id: $channelID) {\n    id\n    self {\n      canFollow\n      banStatus {\n        expiresAt\n      }\n    }\n  }\n  guestStarSession(options: $sessionOptions) {\n    id\n    guests {\n      id\n      user {\n        id\n        self {\n          canFollow\n          banStatus {\n            expiresAt\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "RequestToJoinViewerRequirementsQuery": {
        "hash": "0d27ccb69f882eb0542a10c72ee24af1cca8729684e79ba3ac9f71d63b6e2762",
        "query": "query RequestToJoinViewerRequirementsQuery($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      follower {\n        followedAt\n      }\n      subscriptionBenefit {\n        id\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        months\n      }\n    }\n  }\n}\n"
    },
    "BannerNotificationQuery": {
        "hash": "ec26e95106ea61fc7ac6d3214a1d8c4e394624e82cfdd3b4a07c828a7c40c7c4",
        "query": "query BannerNotificationQuery($platform: String!) {\n  moneyBannerNotifications(platform: $platform) {\n    ...moneyBannerFragment\n  }\n}\n"
    },
    "RemoveUserFromBannerCampaign": {
        "hash": "5a90656cbc5375e57069bac78d0c320d2a2acfd522c2cd5b1dbd6502f4572b9c",
        "query": "mutation RemoveUserFromBannerCampaign($input: RemoveUserFromMoneyBannerCampaignInput!) {\n  removeUserFromMoneyBannerCampaign(input: $input) {\n    userID\n    campaignID\n  }\n}\n"
    },
    "SupportPanelSubscribeViewFooter": {
        "hash": "bb10b61a60163beb35a6209de44f3cdde4bbcf214e3f8d1a66eff135ff06399a",
        "query": "query SupportPanelSubscribeViewFooter($login: String!, $giftRecipientLogin: String, $withStandardGifting: Boolean) {\n  userResultByLogin(login: $login) {\n    ... on User {\n      id\n      self {\n        subscriptionBenefit {\n          ...subBenefit\n        }\n      }\n      subscriptionProductsResult {\n        ... on SubscriptionProductsConnection {\n          nodes {\n            ...subscriptionProduct\n          }\n        }\n        ... on SubscriptionProductsError {\n          code\n        }\n      }\n    }\n    ... on UserDoesNotExist {\n      key\n    }\n    ... on UserError {\n      key\n    }\n  }\n}\n"
    },
    "RealtimeStreamTagList": {
        "hash": "8407d93aee7a7f2291b53bae3bc4a0ef7c0de2f15e75db2a6f378bb03e87f2a6",
        "query": "query RealtimeStreamTagList($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      freeformTags {\n        ...freeformTagFragment\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsAutomaticRewards": {
        "hash": "1926a20c3e8f5f6ece982df2adb69a81c00806b7072c52d930ecbaed3cdad361",
        "query": "query ChannelPointsAutomaticRewards($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        automaticRewards {\n          ...automaticRewardFragment\n        }\n        earning {\n          ...earningSettingsFragment\n        }\n        smartCostsAcknowledgements {\n          lastAcknowledgedCost\n          rewardType\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateFollowAcccountVerificationSettings": {
        "hash": "ade78ae363debc25cf206b58b42092b309504f7c51cc63f58307dc3e6b82f5eb",
        "query": "mutation UpdateFollowAcccountVerificationSettings($input: UpdateFollowAccountVerificationSettingsInput!) {\n  updateFollowAccountVerificationSettings(input: $input) {\n    error {\n      code\n    }\n    followAccountVerificationSettings {\n      phoneVerificationMode\n      emailVerificationMode\n      partialEmailVerificationConfig {\n        shouldRestrictBasedOnAccountAge\n        minimumAccountAgeInMinutes\n      }\n      partialPhoneVerificationConfig {\n        shouldRestrictBasedOnAccountAge\n        minimumAccountAgeInMinutes\n      }\n    }\n  }\n}\n"
    },
    "followAccountVerificationSettings": {
        "hash": "04d4c697a76205db621429d2950a46728df17d78e43131a9b475a5b4b456c668",
        "query": "query followAccountVerificationSettings($channelID: ID!) {\n  followAccountVerificationSettings(userID: $channelID) {\n    emailVerificationMode\n    phoneVerificationMode\n    partialEmailVerificationConfig {\n      minimumAccountAgeInMinutes\n      shouldRestrictBasedOnAccountAge\n    }\n    partialPhoneVerificationConfig {\n      minimumAccountAgeInMinutes\n      shouldRestrictBasedOnAccountAge\n    }\n  }\n}\n"
    },
    "CommunityTabWhisperUser": {
        "hash": "3058293d92d70b9e8ac2995b24b891d5f3b9f88fc8f7d0cb8747a46b6c20e285",
        "query": "query CommunityTabWhisperUser($login: String) {\n  currentUser {\n    id\n  }\n  user(login: $login) {\n    id\n  }\n}\n"
    },
    "CommunityTab": {
        "hash": "e1108981c75689c0dcc3ca6c274926dcf4fde0ad0e49097f2846a63a5834c52a",
        "query": "query CommunityTab($login: String!) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      name\n      chatters {\n        broadcasters {\n          login\n        }\n        moderators {\n          login\n        }\n        vips {\n          login\n        }\n        staff {\n          login\n        }\n        viewers {\n          login\n        }\n        count\n      }\n    }\n    subscriptionProducts {\n      id\n      self {\n        canGiftInChannel\n      }\n    }\n    isPartner\n    stream {\n      id\n      title\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "ActiveGoals": {
        "hash": "f2f1625d6446f149dc170ebbbf348a1e9e3c90a19798458f634f7243ed07f2de",
        "query": "query ActiveGoals($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    goals(states: [ACTIVE]) {\n      edges {\n        cursor\n        node {\n          ...channelGoalFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "AllGoals": {
        "hash": "61a9987e475b070c72e2bda5d8744fd5668829fcac5f2544a6de6e648bc7d6ed",
        "query": "query AllGoals($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    goals {\n      edges {\n        cursor\n        node {\n          ...channelGoalFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "SegmentPopover": {
        "hash": "77fff78d9311282da75043cea275875105fee4056b07bd137d99aed0f99a2bcb",
        "query": "query SegmentPopover($login: String!) {\n  user(login: $login) {\n    id\n    primaryColorHex\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "ChannelPoll_GetUserStatus": {
        "hash": "151abcd6779d0688f5c25d45f193a8621f07f48ddd26b8b74bbe119267d83fe7",
        "query": "query ChannelPoll_GetUserStatus($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    login\n    displayName\n    self {\n      banStatus {\n        isPermanent\n      }\n    }\n  }\n}\n"
    },
    "StreamerAccentColor": {
        "hash": "c4dda24dc054bf2c50e01c6ca3b24daa890490beeb4d69c24386e4c8b483d148",
        "query": "query StreamerAccentColor($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "SetDropsCommunityHighlightToHidden": {
        "hash": "2b5f287bef0fc1aa90c86b0718752815677cbfa4cb9b5c7072d678f0725039f1",
        "query": "mutation SetDropsCommunityHighlightToHidden($input: SetDropsCommunityHighlightToHiddenInput!) {\n  setDropsCommunityHighlightToHidden(input: $input) {\n    isHidden\n  }\n}\n"
    },
    "DropsHighlightService_ClaimDropRewards": {
        "hash": "0e01940d74bb284491d5f6bca2fb89af8f2a66c982c6c51fbfeb42307b389461",
        "query": "mutation DropsHighlightService_ClaimDropRewards($input: ClaimDropRewardsInput!) {\n  claimDropRewards(input: $input) {\n    status\n    isUserAccountConnected\n  }\n}\n"
    },
    "QuestionAndAnswerAccentColor": {
        "hash": "64bd6f9518a29186de143ba93bbe8da4a7e795bfe4786bca1eae6f3675a4c1c2",
        "query": "query QuestionAndAnswerAccentColor($login: String!) {\n  user(login: $login) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "RequestToJoinAccentColor": {
        "hash": "5efc3ba8ea8e020196e7d0e4d0823df9e3adb79a4a950d28cf9bcada52af7b05",
        "query": "query RequestToJoinAccentColor($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "ShoutoutHighlightContentQuery": {
        "hash": "f8a22c5386fab0a8180e590f3efd87b3263a3f163f42755fac531d483e90e5c1",
        "query": "query ShoutoutHighlightContentQuery($targetLogin: String!) {\n  user(login: $targetLogin) {\n    id\n    channel {\n      id\n      home {\n        shelves {\n          categoryShelf(first: 3) {\n            edges {\n              node {\n                id\n                boxArtURL(width: 85, height: 113)\n                displayName\n              }\n            }\n          }\n        }\n      }\n      schedule {\n        id\n        nextSegment {\n          id\n          categories {\n            id\n            displayName\n          }\n          hasReminder\n          startAt\n          endAt\n          isCancelled\n          title\n        }\n      }\n    }\n  }\n}\n"
    },
    "HappeningNowSettings": {
        "hash": "e1421d1cef2a0dd4bb5ff1800deba9e9ac8464ca5d806a73fdeff3271adb16df",
        "query": "query HappeningNowSettings() {\n  currentUser {\n    id\n    isChatHappeningNowEnabled\n  }\n}\n"
    },
    "SetHappeningNowSettings": {
        "hash": "e91e08a580c07c32260cb638e9c759069bf70851cfa37b5d180587c7ff7d30e9",
        "query": "mutation SetHappeningNowSettings($input: SetChatHappeningNowSettingsInput!) {\n  setChatHappeningNowSettings(input: $input) {\n    isChatHappeningNowEnabled\n  }\n}\n"
    },
    "RaidNotification_Channels": {
        "hash": "664d671001d67ea94c005bc1bc0a53d5b931176f688701e7b7c06ab624b82758",
        "query": "query RaidNotification_Channels($sourceChannelID: ID!, $targetChannelID: ID!) {\n  user(id: $sourceChannelID) {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n  }\n  user(id: $targetChannelID) {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n    self {\n      isModerator\n    }\n  }\n}\n"
    },
    "AddViewerToRTJQueue": {
        "hash": "f679fd0379474a8424f75302b4c1e1ce11cfb1fc73f66872388ac45fb1962fb7",
        "query": "mutation AddViewerToRTJQueue($input: AddViewerToRTJQueueInput!) {\n  addViewerToRTJQueue(input: $input) {\n    heartbeatIntervalMilliseconds\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GetViewerQueueInfo": {
        "hash": "4168f14b2c450ab182795ac94b67bdc9cd347a73ddeb20c9f1925b97ae29935a",
        "query": "query GetViewerQueueInfo($channelID: ID!, $viewerID: ID!) {\n  requestToJoinViewerQueueInfo(channelID: $channelID, viewerID: $viewerID) {\n    id\n    size\n    status\n    maximumSize\n    isSubsEnabled\n    isFollowersEnabled\n    isAudioOnlyEnabled\n    self {\n      isViewerInQueue\n    }\n    minSubscriptionLength\n    minFollowingLength\n  }\n}\n"
    },
    "RemoveViewerFromRTJQueue": {
        "hash": "9705f6ac19ead2707ffd4acd3c0fd69300e468e5d93025b08c89cbaea6780550",
        "query": "mutation RemoveViewerFromRTJQueue($input: RemoveViewerFromRTJQueueInput!) {\n  removeViewerFromRTJQueue(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "HypeTrainCTA": {
        "hash": "d92177829fe0c775a0c19ebf4589766a79d15a0d416a7a67dd14d82dfeb80980",
        "query": "query HypeTrainCTA($id: ID) {\n  user(id: $id) {\n    id\n    self {\n      subscriptionBenefit {\n        ...subBenefit\n      }\n    }\n  }\n}\n"
    },
    "GetHypeTrainExecutionV2": {
        "hash": "094ec29791867fabc2c8bd961891ae2aab18e98c46a6170dab596eb926b7f57a",
        "query": "query GetHypeTrainExecutionV2($userLogin: String!) {\n  user(login: $userLogin) {\n    id\n    displayName\n    channel {\n      id\n      hypeTrain {\n        execution {\n          ...hypeTrainExecutionV2\n        }\n        approaching {\n          ...hypeTrainApproaching\n        }\n      }\n    }\n  }\n}\n"
    },
    "GetHypeTrainExecution": {
        "hash": "dc46d2933d27683e8e2ec219bf0939d0528782878256e1d6b38c4dec8b92b158",
        "query": "query GetHypeTrainExecution($userLogin: String!) {\n  user(login: $userLogin) {\n    id\n    displayName\n    channel {\n      id\n      hypeTrain {\n        execution {\n          ...hypeTrainExecution\n        }\n        approaching {\n          ...hypeTrainApproaching\n        }\n      }\n    }\n  }\n}\n"
    },
    "unpinChatMessage": {
        "hash": "602ca055e6e02726b069e5906d0f23fff3e185b65b0204af1fe2eb56ba7da9de",
        "query": "mutation unpinChatMessage($input: UnpinChatMessageInput!) {\n  unpinChatMessage(input: $input) {\n    unpinnedChatMessage {\n      id\n      pinnedMessage {\n        id\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdatePinnedChatMessage": {
        "hash": "07398002b2c22cea6cd03e0296df77cfae4e845c43fb80251443e1df9a0783e2",
        "query": "mutation UpdatePinnedChatMessage($input: UpdatePinnedChatMessageInput!) {\n  updatePinnedChatMessage(input: $input) {\n    updatedChatMessage {\n      id\n      pinnedMessage {\n        id\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SetReminder": {
        "hash": "e5ce054348c609eabe1eb98e98cfc0ff789172e54c7c2a640979c296688e8fe1",
        "query": "mutation SetReminder($input: SetScheduleReminderInput!) {\n  setScheduleReminder(input: $input) {\n    error {\n      code\n    }\n    isEnabled\n  }\n}\n"
    },
    "PauseCustomRewardRedemptions": {
        "hash": "c5073b8aad3d21df3e16dbc163ffdfb31df9de3bad43f025ee98ed1364267121",
        "query": "mutation PauseCustomRewardRedemptions($input: UpdateCommunityPointsCustomRewardInput!) {\n  updateCommunityPointsCustomReward(input: $input) {\n    reward {\n      ...customRewardFragment\n    }\n  }\n}\n"
    },
    "UpdateRedemptionStatusesProgress": {
        "hash": "5bba1e8129e9ef7c2f9c7375b8237ada27fc8ce85fb26c0950c406bfc6e49bb1",
        "query": "query UpdateRedemptionStatusesProgress($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        updateCustomRewardRedemptionStatusesProgress {\n          ...rewardQueueProgressFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "UserWithBadges": {
        "hash": "3d7fcb58d9fa65ba64a47c9d0ddfeb900253cd14120d2e3ae8f429cac757888f",
        "query": "query UserWithBadges($userID: ID!, $channelLogin: String!) {\n  user(id: $userID) {\n    id\n    displayName\n    login\n    chatColor\n    displayBadges(channelLogin: $channelLogin) {\n      ...badge\n    }\n  }\n}\n"
    },
    "RedemptionQueueFooter": {
        "hash": "77751725c740a7a44216846d21aecfa6507a3ecd0238a136c697b0dcb642d8d4",
        "query": "query RedemptionQueueFooter($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        summarizedRewards {\n          count\n          isCountAtMaximum\n          node {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "RedemptionsByRewardID_Paginated": {
        "hash": "e88a81dc4fe3d5fc51babea0f98303feb7d14fd33e21efe3dd1b3c8aa5eae69f",
        "query": "query RedemptionsByRewardID_Paginated($channelLogin: String!, $id: ID, $cursor: Cursor, $order: CommunityPointsCustomRewardRedemptionQueueSortOrder, $count: Int) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsRedemptionQueue(options: {rewardID: $id, status: UNFULFILLED, order: $order}, first: $count, after: $cursor) {\n        edges {\n          cursor\n          node {\n            id\n            reward {\n              id\n              title\n            }\n            user {\n              id\n            }\n            input\n            timestamp\n          }\n        }\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n}\n"
    },
    "BulkUpdateRedemptions_Channel": {
        "hash": "844d908203059b317ce5cabf15e96e15e0d44204bac3185b962a2d4deb368f02",
        "query": "mutation BulkUpdateRedemptions_Channel($input: UpdateCommunityPointsCustomRewardRedemptionStatusesByChannelInput!) {\n  updateCommunityPointsCustomRewardRedemptionStatusesByChannel(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "BulkUpdateRedemptions": {
        "hash": "1321a37db620412ea9f1b109eff5ea3f41579809d4ceb960d2e3e290dc0bb40a",
        "query": "mutation BulkUpdateRedemptions($input: UpdateCommunityPointsCustomRewardRedemptionStatusesByRedemptionsInput!) {\n  updateCommunityPointsCustomRewardRedemptionStatusesByRedemptions(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "BulkUpdateRedemptions_Reward": {
        "hash": "93a481d3cfdbc0483585f0577ba4fcd03d918ddf8c9b0701a6dbac38c1a9a36a",
        "query": "mutation BulkUpdateRedemptions_Reward($input: UpdateCommunityPointsCustomRewardRedemptionStatusesByRewardInput!) {\n  updateCommunityPointsCustomRewardRedemptionStatusesByReward(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateCoPoCustomRewardStatus": {
        "hash": "fbbd035b64c24016a1e298f2326a90a1340c72dd2ca4b557e6fe616dde44f8df",
        "query": "mutation UpdateCoPoCustomRewardStatus($input: UpdateCommunityPointsCustomRewardRedemptionStatusInput!) {\n  updateCommunityPointsCustomRewardRedemptionStatus(input: $input) {\n    redemption {\n      id\n      input\n      status\n      reward {\n        id\n      }\n    }\n  }\n}\n"
    },
    "CoPoRewardQueue": {
        "hash": "45ef5d0b4f18568296ff5bc025c3ab10bd162daf53f9aa5ddae414d0e9ada708",
        "query": "query CoPoRewardQueue($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isAvailable\n        isEnabled\n        summarizedRewards {\n          count\n          isCountAtMaximum\n          node {\n            ...customRewardFragment\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "PayoutMethodInfoQuery": {
        "hash": "0ab0db69b1f5405534b1f518ee3c8ede259159b6728955e8e993339d8a89ff1e",
        "query": "query PayoutMethodInfoQuery() {\n  currentUser {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    onboardingInvitations {\n      payout {\n        id\n        workflow {\n          id\n          currentStep\n        }\n      }\n    }\n    payout {\n      method\n    }\n  }\n}\n"
    },
    "PayoutHistoryPage": {
        "hash": "58060b5bb22cedd926c6724d2797a2e3270e3b2625fb5f5d1d7c855d90369f38",
        "query": "query PayoutHistoryPage($login: String!) {\n  user(login: $login) {\n    id\n    payout {\n      history {\n        iframeURL\n      }\n      threshold {\n        value\n        isEligible\n        isLatent\n      }\n    }\n  }\n}\n"
    },
    "EstimatedPay": {
        "hash": "9900b90a1a275ec4d52348b60cbbd9383c25070d08436b6da6ae5d3aa61904fb",
        "query": "query EstimatedPay($year: Int!, $month: Int!) {\n  currentUser {\n    id\n    payoutBalance {\n      currentPayoutBalanceAmount\n      month\n      year\n      withholdingTax\n      payoutFee\n    }\n    payableStatus {\n      isPayable\n    }\n  }\n}\n"
    },
    "PaymentIncentiveMetrics": {
        "hash": "d2c4db918e4d0555950fddca29318d6853e67b0c05c55d2abfd10273d0af4b47",
        "query": "query PaymentIncentiveMetrics($login: String!) {\n  user(login: $login) {\n    id\n    paymentIncentiveMetrics {\n      timestamp\n      liveMinutesWatched\n      liveHoursBroadcast\n      vodMinutesWatched\n      advertisingDensity\n    }\n  }\n}\n"
    },
    "PayoutBalanceV2": {
        "hash": "be5fb8e83fa51a459d4c3f5d9a088eabfe31902848ac4d8b86e2a810b6a7cd33",
        "query": "query PayoutBalanceV2() {\n  currentUser {\n    id\n    payoutBalance {\n      currency\n      currentPayoutBalanceAmount\n      month\n      year\n      withholdingTax\n      payoutFee\n    }\n    payableStatus {\n      isPayable\n    }\n  }\n}\n"
    },
    "PayoutBalance": {
        "hash": "767160b48a9d5024912e33742a5b5f43df73213633a5988bcb27b434d6f90a68",
        "query": "query PayoutBalance() {\n  currentUser {\n    id\n    roles {\n      isPartner\n    }\n    payoutBalance {\n      currency\n      currentPayoutBalanceAmount\n      month\n      year\n    }\n    payableStatus {\n      isPayable\n    }\n    withholdingTaxDetail {\n      royaltyTaxRate\n      serviceTaxRate\n    }\n  }\n}\n"
    },
    "PayoutEligibilityV2": {
        "hash": "5a769eecb6c796000f755bfa891aa9721babf79df8c0962020474aaef3a76478",
        "query": "query PayoutEligibilityV2() {\n  currentUser {\n    id\n    roles {\n      isPartner\n    }\n    payableStatus {\n      isPayable\n    }\n  }\n}\n"
    },
    "PayoutEligibility": {
        "hash": "8e488e10bd3ce5eefd0caeb51e48b920de53b073f17856f2632d70c970ce9f51",
        "query": "query PayoutEligibility() {\n  currentUser {\n    id\n    roles {\n      isPartner\n    }\n    payableStatus {\n      isPayable\n    }\n    withholdingTaxDetail {\n      royaltyTaxRate\n      serviceTaxRate\n    }\n  }\n}\n"
    },
    "PayoutThreshold": {
        "hash": "d0acb4fe6d485db5db52c244a0ce657e928fa67059fb14858e9ba9128971c214",
        "query": "query PayoutThreshold() {\n  currentUser {\n    id\n    payoutBalance {\n      currentPayoutBalanceAmount\n      month\n      year\n      withholdingTax\n      payoutFee\n    }\n    payableStatus {\n      isPayable\n    }\n  }\n}\n"
    },
    "PrimeEarningsStatement": {
        "hash": "a419659ef5af0c438c20dae93b0eda9e620c38b169974b5e3ad3855598bf6aa6",
        "query": "query PrimeEarningsStatement($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    primePayoutHistory {\n      currency\n      currentPrimePayout {\n        pastCyclePayoutAmount\n        thisCyclePayoutAmount\n        totalPayoutAmount\n      }\n      deferredPrimePayout {\n        totalPayoutAmount\n      }\n      month\n      year\n    }\n  }\n}\n"
    },
    "TaxForms_CurrentUser": {
        "hash": "5baeea9292245db3a20ca79af8d9d79de2515b62fb6c90dbad79037f568880c8",
        "query": "query TaxForms_CurrentUser($returnURL: String!) {\n  currentUser {\n    id\n    payout {\n      taxIntents {\n        type\n      }\n    }\n    payoutInvite {\n      id\n      workflow {\n        id\n        currentStep\n        taxForm(type: ROYALTY, returnURL: $returnURL) {\n          url\n          options {\n            key\n            value\n          }\n          signature\n        }\n        taxForm(type: SERVICE, returnURL: $returnURL) {\n          url\n          options {\n            key\n            value\n          }\n          signature\n        }\n        taxForm(type: DAC7, returnURL: $returnURL) {\n          url\n          options {\n            key\n            value\n          }\n          signature\n        }\n      }\n    }\n  }\n}\n"
    },
    "PaidPinnedChatMessageContent": {
        "hash": "416d36108f186a7e5ca146917011e2a0fe5635ec24a1d0476f3f5e23a50c351f",
        "query": "query PaidPinnedChatMessageContent($channelID: ID!, $senderID: ID) {\n  user(id: $senderID) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n    displayBadges(channelID: $channelID) {\n      ...badge\n    }\n  }\n  badges {\n    ...badge\n  }\n}\n"
    },
    "AlertViewerCustomizationDefaultPreview": {
        "hash": "fd45895dd81db7964f452dd40f4057db2687918ec0c3362764a5c2c7c62aa733",
        "query": "query AlertViewerCustomizationDefaultPreview($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    displayName\n    login\n    profileImageURL(width: 70)\n  }\n}\n"
    },
    "GetOauthAppByID": {
        "hash": "dddc21943c8da5d92e707415f045c56ca5ea44fbaccec12b4c15cb5926985ca0",
        "query": "query GetOauthAppByID($id: ID!) {\n  oauthAppByID(id: $id) {\n    ...oauthFields\n  }\n}\n"
    },
    "ResetOauthAppSecret": {
        "hash": "d1f8db0429008c3adae6715225e8314bf4bab550c7d2dadf5950c2573c2adf61",
        "query": "mutation ResetOauthAppSecret($input: ResetOauthAppSecretInput!) {\n  resetOauthAppSecret(input: $input) {\n    error {\n      code\n    }\n    oauthApp {\n      secret\n      id\n    }\n  }\n}\n"
    },
    "UpdateOauthApp": {
        "hash": "10024ae651d852bf1f7a46fce534aa2364289856f0eba1c6fa3fe86020c4a5cd",
        "query": "mutation UpdateOauthApp($input: UpdateOauthAppInput!) {\n  updateOauthApp(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DevExtensionSettingsAssignedBillingManager": {
        "hash": "978b7a9fa7283cef31d1c814e29821c0f96c8da17dae6060d6a9bb636f7d7433",
        "query": "query DevExtensionSettingsAssignedBillingManager($id: ID!) {\n  extensionClient(id: $id) {\n    id\n    assignedBillingManager {\n      ...billingManager\n    }\n  }\n}\n"
    },
    "DevExtensionEligibleBillingManager": {
        "hash": "2945d46138eaf66e8ee90635227d8469ab23e75a4a8c687e190bb3cdcd4f51f5",
        "query": "query DevExtensionEligibleBillingManager($orgID: ID!) {\n  organization(id: $orgID) {\n    id\n    members(first: 100, input: {role: BILLING_MANAGER}) {\n      edges {\n        node {\n          ...billingManager\n        }\n      }\n    }\n    members(first: 100, input: {role: ADMINISTRATOR}) {\n      edges {\n        node {\n          ...billingManager\n        }\n      }\n    }\n    members(first: 1, input: {role: OWNER}) {\n      edges {\n        node {\n          ...billingManager\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevExtensionSettingsSetBillingManager": {
        "hash": "6cb04d5b55086064e19b35adf316420ac580cd7cef7e3d8a2a1b1f46c17ce155",
        "query": "mutation DevExtensionSettingsSetBillingManager($input: AssignExtensionBillingManagerInput!) {\n  assignExtensionBillingManager(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DevDeleteExtensionSecrets": {
        "hash": "bd4900b333bb4ee9300536c90bb5f2ee62c3009aa243a3cd6940b30761540ad6",
        "query": "mutation DevDeleteExtensionSecrets($input: DeleteExtensionSecretsInput!) {\n  deleteExtensionSecrets(input: $input) {\n    error\n  }\n}\n"
    },
    "DevDeleteExtension": {
        "hash": "2c2d7a442edff563b3d7194d4766a1af4f1bba5e48368f87676a3fdeccd7eae7",
        "query": "mutation DevDeleteExtension($input: DeleteExtensionInput!) {\n  deleteExtension(input: $input) {\n    error\n  }\n}\n"
    },
    "DevGetExtensionSecrets": {
        "hash": "9e11ec7f90f7f4c908db11dd3a8fa4bfa785a5dfef5f22e427507c4765fee388",
        "query": "query DevGetExtensionSecrets($extensionID: ID!) {\n  extensionSecrets(extensionID: $extensionID) {\n    secrets {\n      activeAt\n      content\n      expiresAt\n    }\n  }\n}\n"
    },
    "DevRotateExtensionSecrets": {
        "hash": "f8333316bc95af43181bcc6f8b8ead5d055b3a3dee5011c076598961bfe81bfc",
        "query": "mutation DevRotateExtensionSecrets($input: RotateExtensionSecretsInput!) {\n  rotateExtensionSecrets(input: $input) {\n    secrets {\n      activeAt\n      content\n      expiresAt\n    }\n    error\n  }\n}\n"
    },
    "Directory_DirectoryBanner": {
        "hash": "e29655c8f3c114cc7dea7350ca11ba1bb2afc6c89686e0a57621df96002a41de",
        "query": "query Directory_DirectoryBanner($slug: String!) {\n  game(slug: $slug) {\n    id\n    slug\n    name\n    displayName\n    coverURL(width: 1200, height: 180)\n    avatarURL(width: 144, height: 192)\n    description\n    viewersCount\n    followersCount\n    igdbURL\n    prestoID\n    streams(first: 1) {\n      edges {\n        node {\n          id\n          previewImageURL(width: 320, height: 180)\n        }\n      }\n    }\n    tags(tagType: CONTENT) {\n      ...tagFragment\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isSiteAdmin\n      isStaff\n    }\n  }\n}\n"
    },
    "AllChannels_InternationalSection": {
        "hash": "0b9e2daf2eeece153d5a60393267f7485157bba63155c444f4d87a37bafdf9f1",
        "query": "query AllChannels_InternationalSection($platformType: PlatformType, $limit: Int, $options: StreamOptions, $sortTypeIsRecency: Boolean!, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  streams(platformType: $platformType, first: $limit, options: $options) {\n    edges {\n      ...browsePagePopularStreamsWithTagsEdge\n    }\n  }\n}\n"
    },
    "CategoryChannels_InternationalSection": {
        "hash": "76424c27322f896b19f491fef28fe53ebb9307fa30d436c69a206925bd53fd6c",
        "query": "query CategoryChannels_InternationalSection($slug: String!, $limit: Int, $options: GameStreamOptions, $sortTypeIsRecency: Boolean!, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  game(slug: $slug) {\n    id\n    displayName\n    streams(first: $limit, options: $options) {\n      edges {\n        ...browsePagePopularStreamsWithTagsEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "DJCalloutEligibility": {
        "hash": "82b0ebffb746897db63ad239c9940b6b16ca5e839745b822cd91f6fd0b05da40",
        "query": "query DJCalloutEligibility() {\n  currentUser {\n    id\n    roles {\n      isParticipatingDJ\n    }\n    djEligibility {\n      isEligible\n    }\n  }\n}\n"
    },
    "FollowGameButton_FollowGame": {
        "hash": "0bd39d2a60e273582321bc735dc441d7b78dd567645ee4901cfafae2ab633179",
        "query": "mutation FollowGameButton_FollowGame($input: FollowGameInput!) {\n  followGame(input: $input) {\n    game {\n      id\n      self {\n        follow {\n          followedAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "FollowGameButton_Game": {
        "hash": "048264771e98953dbba245cebbe83d572a6451cb3c62a5dfe07adfd4231467fd",
        "query": "query FollowGameButton_Game($slug: String!) {\n  game(slug: $slug) {\n    id\n    name\n    self {\n      follow {\n        followedAt\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "FollowGameButton_UnfollowGame": {
        "hash": "7b678785f4f94f6f1ea26e68635a29f32d72268a11b2d60e48291f6173e6f29d",
        "query": "mutation FollowGameButton_UnfollowGame($input: UnfollowGameInput!) {\n  unfollowGame(input: $input) {\n    follow {\n      followedAt\n    }\n  }\n}\n"
    },
    "AnimatedTag_TagData": {
        "hash": "703f4b3bac10707d853e399d277813d92fbc41600e3940185214b19f40120992",
        "query": "query AnimatedTag_TagData($id: ID!) {\n  contentTag(id: $id) {\n    ...tagFragment\n  }\n}\n"
    },
    "SearchFreeformTags": {
        "hash": "1f371bc7dd968502ee5f57dc2de8386317afa9e248d3516ed08ac6d8c2dfd720",
        "query": "query SearchFreeformTags($userQuery: String!, $first: Int) {\n  searchFreeformTags(userQuery: $userQuery, first: $first) {\n    edges {\n      node {\n        tagName\n      }\n    }\n  }\n}\n"
    },
    "PinnedTags": {
        "hash": "158cf571f8ac8fa973ab551c17c6d7d6d95b7cf13c2def39e2409cd38f3fc788",
        "query": "query PinnedTags($slug: String!, $languages: [String!]) {\n  game(slug: $slug) {\n    id\n    suggestedTags(languages: $languages, limit: 5) {\n      ...freeformTagFragment\n    }\n  }\n}\n"
    },
    "SearchCategoryTags": {
        "hash": "4e7eb0361d4917c50bb304e2076e87cef5925f088f6933b0027ab4dffd434894",
        "query": "query SearchCategoryTags($userQuery: String!, $limit: Int!) {\n  searchCategoryTags(userQuery: $userQuery, limit: $limit) {\n    ...broadcastTagScopedFragment\n  }\n}\n"
    },
    "TagHandlerTag": {
        "hash": "df584b8e9c3c588855b561e836f6b27fdc9707b8cf86d3947856728f449f82f6",
        "query": "fragment filterTagFragment on Tag {\n  id\n  isLanguageTag\n  localizedName\n  tagName\n  scope\n}\n\nquery TagHandlerTag($id: ID!) {\n  contentTag(id: $id) {\n    ...filterTagFragment\n  }\n}\n"
    },
    "DirectoryPage_Game": {
        "hash": "291b51da188b060d7fd6dbf6bd3b4a6bef2d14263e7e937891f92ab2ec0916db",
        "query": "query DirectoryPage_Game($slug: String!, $limit: Int, $cursor: Cursor, $options: GameStreamOptions, $sortTypeIsRecency: Boolean!, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  game(slug: $slug) {\n    id\n    name\n    displayName\n    streams(first: $limit, after: $cursor, options: $options) {\n      banners\n      edges {\n        ...directoryPageGameStreamWithTagsEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment directoryPageGameStreamWithTagsEdge on StreamEdge {\n  cursor\n  node {\n    ...directoryPageGameStreamWithTagsNode\n  }\n  trackingID\n}\n\nfragment directoryPageGameStreamWithTagsNode on Stream {\n  id\n  title\n  viewersCount\n  previewImageURL(width: 440, height: 248)\n  createdAt @include(if: $sortTypeIsRecency)\n  broadcaster {\n    id\n    login\n    displayName\n    roles {\n      isPartner\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n    profileImageURL(width: $imageWidth)\n    primaryColorHex\n  }\n  freeformTags {\n    ...freeformTagFragment\n  }\n  type\n  game {\n    id\n    boxArtURL(width: 40, height: 56)\n    name\n    displayName\n    slug\n  }\n  previewThumbnailProperties {\n    blurReason\n  }\n}\n"
    },
    "DirectoryRoot_Directory": {
        "hash": "718d5fb50b1efc27dec034be6ed70ca87dedd4a656abfdf7024622b288b6de04",
        "query": "query DirectoryRoot_Directory($slug: String) {\n  game(slug: $slug) {\n    id\n    name\n    displayName\n    slug\n  }\n}\n"
    },
    "FrontPageNew_User": {
        "hash": "5206ae921c22962d9894b6ab646f420aecee8fdcf5070dfe8f3d0b5592d3aa70",
        "query": "query FrontPageNew_User($limit: Int) {\n  currentUser {\n    id\n    createdAt\n    followedGames(first: $limit) {\n      nodes {\n        id\n      }\n    }\n    roles {\n      isPartner\n      isStaff\n    }\n  }\n}\n"
    },
    "UndoRecommendationFeedback": {
        "hash": "6a411216c9a6c011356b96fd9598f538d8ab2d4c9ef5eb689b6f33716ecc07ee",
        "query": "mutation UndoRecommendationFeedback($input: UndoRecommendationFeedbackInput!) {\n  undoRecommendationFeedback(input: $input) {\n    feedbackID\n  }\n}\n"
    },
    "OfflineStreamerInformation": {
        "hash": "c035f6bb7bfb67c14b2b452ec05fbed47fa4c75c15dc378bb7bff88b77a1370c",
        "query": "query OfflineStreamerInformation($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    videos(first: 1) {\n      edges {\n        node {\n          id\n          publishedAt\n          game {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelTrailerSetup": {
        "hash": "399f5d87e6783fe8bb0241a6bf9fb853b05a9a682f34ea47cfe3ed469f220355",
        "query": "query ChannelTrailerSetup($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      trailer {\n        video {\n          ...trailerVideo\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoComments": {
        "hash": "a0e65c74bf20d9c7a5b6ae3aafa8442de95f3a9cfc1825c0ebb8d44a24d87cb1",
        "query": "query VideoComments($videoID: ID!, $hasVideoID: Boolean!) {\n  badges {\n    ...badge\n  }\n  ...globalCheerInfo\n  currentUser {\n    id\n    roles {\n      isStaff\n      isSiteAdmin\n      isGlobalMod\n    }\n    blockedUsers {\n      id\n    }\n  }\n  video(id: $videoID) @include(if: $hasVideoID) {\n    id\n    broadcastType\n    lengthSeconds\n    owner {\n      id\n      login\n      broadcastBadges {\n        ...badge\n      }\n      ...userCheerInfo\n      self {\n        isModerator\n      }\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "BanVideoCommenter": {
        "hash": "09b7b17dc6af7f86ebdd10e97b8fccad898fe0ca6017dcfc1798081025466b0f",
        "query": "mutation BanVideoCommenter($channelID: ID!, $commenterID: ID!) {\n  banVideoCommenter(input: {channelID: $channelID, commenterID: $commenterID}) {\n    __typename\n  }\n}\n"
    },
    "DeleteVideoComment": {
        "hash": "a4dd601097d54cf26f32ad8b53bcc1901ecc6ec5039b2db0cd2d6e4201ef703c",
        "query": "mutation DeleteVideoComment($commentID: ID!) {\n  deleteVideoComment(commentID: $commentID) {\n    __typename\n  }\n}\n"
    },
    "VideoCommentsByOffsetOrCursor": {
        "hash": "2b835510ac4cb038785adf9878a6fa95b986fcee9a964014d40729b34b1434d6",
        "query": "query VideoCommentsByOffsetOrCursor($videoID: ID!, $contentOffsetSeconds: Int, $cursor: Cursor) {\n  video(id: $videoID) {\n    id\n    creator {\n      id\n      channel {\n        id\n      }\n    }\n    comments(after: $cursor, contentOffsetSeconds: $contentOffsetSeconds) {\n      edges {\n        cursor\n        node {\n          id\n          commenter {\n            id\n            login\n            displayName\n          }\n          contentOffsetSeconds\n          createdAt\n          message {\n            fragments {\n              emote {\n                id\n                emoteID\n                from\n              }\n              text\n            }\n            userBadges {\n              id\n              setID\n              version\n            }\n            userColor\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n}\n"
    },
    "GameSelectorSearchCategories": {
        "hash": "74bc65f26c04be6766726a2682f6b7e6e724fd97c33ef86bc3f0e10e8d4efe84",
        "query": "query GameSelectorSearchCategories($query: String!, $after: Cursor) {\n  searchCategories(query: $query, first: 10, after: $after) {\n    edges {\n      cursor\n      node {\n        displayName\n        id\n        name\n        slug\n      }\n    }\n  }\n}\n"
    },
    "Search_SearchGameResultCard_Game": {
        "hash": "8ce7590139e163ad3d81e7ac87d906bf76e9e4ccffbaea43c93740c5b5add78d",
        "query": "query Search_SearchGameResultCard_Game($name: String!) {\n  game(name: $name) {\n    id\n    boxArtURL(width: 40, height: 55)\n  }\n}\n"
    },
    "DevMutationExtensionDeleteImage": {
        "hash": "1e795b4459a55b541d871d530bc49cab7b25ac5e9fc141b00cf91f263c22bdc9",
        "query": "mutation DevMutationExtensionDeleteImage($input: DeleteExtensionImageInput!) {\n  deleteExtensionImage(input: $input) {\n    error\n    manifest {\n      id\n      version\n      developerManifest {\n        createdAt\n        versionState\n      }\n      discoveryManifest {\n        name\n      }\n      views {\n        component {\n          viewerPath\n        }\n        mobile {\n          viewerPath\n        }\n        videoOverlay {\n          viewerPath\n        }\n        panel {\n          viewerPath\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevMutateExtensionDiscoveryManifest": {
        "hash": "15f1ee00f448c4cc52a8f3339149f2459a65545ea114c125238ab40d506728e2",
        "query": "mutation DevMutateExtensionDiscoveryManifest($input: UpdateExtensionDiscoveryDataInput!) {\n  updateExtensionDiscoveryData(input: $input) {\n    error\n    manifest {\n      id\n      version\n      discoveryManifest {\n        ...extensionDiscoveryManifest\n      }\n    }\n  }\n}\n"
    },
    "DevSaveExtensionVersionManifest": {
        "hash": "b31aac754dca4c398ef07cb6057d894931c242283bc3ab69f9b2ca46f1a08d04",
        "query": "mutation DevSaveExtensionVersionManifest($input: SaveExtensionManifestInput!) {\n  saveExtensionManifest(input: $input) {\n    error\n    manifest {\n      ...extensionManifest\n    }\n  }\n}\n"
    },
    "DevExtensionUploadImages": {
        "hash": "3d92f62287503ab406de2c769fbaea4f86ac0a1b3ed015ead0f6859f11781597",
        "query": "mutation DevExtensionUploadImages($input: CreateExtensionImageUploadInfoInput!) {\n  createExtensionImageUploadInfo(input: $input) {\n    discovery {\n      uploadID\n      url\n    }\n    logo {\n      uploadID\n      url\n    }\n    screenshots {\n      uploadID\n      url\n    }\n    taskbar {\n      uploadID\n      url\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DevExtensionVersionDetailsPage": {
        "hash": "a2093dc2bb648c531d41d7c3ee2325dfd71cc0144329e73c38645c891cc33f28",
        "query": "query DevExtensionVersionDetailsPage($id: ID!, $version: String!) {\n  extensionManifest(id: $id, version: $version) {\n    ...extensionManifest\n  }\n  extensionVersionDiscoveryManifest(id: $id, version: $version) {\n    id\n    discoveryManifest {\n      ...extensionDiscoveryManifest\n    }\n  }\n}\n"
    },
    "BitsOneClickCheckout": {
        "hash": "8674c48186396649676d14089e49d189b02815617f48f9ff5192d2ade3779b74",
        "query": "query BitsOneClickCheckout($params: PurchasableOfferParams!, $quantity: Int) {\n  purchasableOffer(params: $params) {\n    id\n    listing {\n      chargeModel {\n        internal {\n          self {\n            checkoutPrice(quantity: $quantity, paymentProvider: RECURLY) {\n              errorCode\n              checkoutPriceSummary {\n                currency\n                description\n                exponent\n                id\n                isTaxInclusive\n                price\n                pricingIdentifier\n                tax\n                total\n                discount {\n                  price\n                  total\n                  tax\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "DeleteChannelClips": {
        "hash": "fd63f60b48d3cf67d2d83d2a18baf181ec8a572b27c4e3f1c038436eee7afc25",
        "query": "mutation DeleteChannelClips($input: DeleteChannelClipsInput!) {\n  deleteChannelClips(input: $input) {\n    channelID\n  }\n}\n"
    },
    "DeleteUserClips": {
        "hash": "40d940462f5b35ae4ada8ceae04b40948276f9f92176c8f38eac4aad3d233e24",
        "query": "mutation DeleteUserClips($input: DeleteUserClipsInput!) {\n  deleteUserClips(input: $input) {\n    userID\n  }\n}\n"
    },
    "WatchPartyDashboardWidget__StartWatchParty": {
        "hash": "7c0ef830830c6f14dc0f75e684b78bb3a45bc1b4f214498aede6ac18aaf6f648",
        "query": "mutation WatchPartyDashboardWidget__StartWatchParty($input: StartWatchPartyInput!) {\n  startWatchParty(input: $input) {\n    error {\n      ...watchPartyError\n    }\n    watchParty {\n      ...watchPartyDashboardDecoratedSession\n    }\n  }\n}\n"
    },
    "WatchParty_UpdateLWAToken": {
        "hash": "43b042f4e60e39c65718432ead5808385322e2f643426baaeeaf1a1bc7ceb21c",
        "query": "mutation WatchParty_UpdateLWAToken($input: UpdateLWATokenInput!) {\n  updateLWAToken(input: $input) {\n    error {\n      ...watchPartyError\n    }\n    token {\n      accessToken\n      expiresIn\n      refreshToken\n    }\n  }\n}\n"
    },
    "WatchPartyCatalogItems": {
        "hash": "2ddd03095dde26c1a4699f19512fb8aa54c4cc25d0d5f2d21ee965b2603dd14c",
        "query": "query WatchPartyCatalogItems($limit: Int, $after: Cursor, $options: WatchPartyItemSearchOptions, $accessToken: String) {\n  watchPartyItems(first: $limit, after: $after, options: $options, accessToken: $accessToken) {\n    homepageBrowseLink\n    edges {\n      cursor\n      node {\n        ...watchPartyCatalogItem\n      }\n    }\n    error {\n      ...watchPartyError\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n\nfragment watchPartyCatalogItem on WatchPartyItem {\n  id\n  contentRestriction\n  title\n  thumbnailURL\n  yearPublished\n  type\n  contentRating\n  parentID\n  primeVideoLink\n  summary\n  isMature\n  hasChildren\n  details {\n    ...watchPartyItemEpisodeDetails\n    ...watchPartyItemMovieDetails\n    ...watchPartyItemSeasonDetails\n    ...watchPartyItemSeriesDetails\n  }\n}\n"
    },
    "WatchPartyDashboardWidget_GetWatchParty": {
        "hash": "861cc0954c075958b6b85d76d11fabb46970f1406f08d2baf094d2e787539581",
        "query": "query WatchPartyDashboardWidget_GetWatchParty($channelID: ID!, $accessToken: String) {\n  user(id: $channelID) {\n    id\n    watchParty(accessToken: $accessToken, decorated: true) {\n      session {\n        ...watchPartyDashboardDecoratedSession\n      }\n    }\n  }\n}\n"
    },
    "WatchPartyUser_ChannelStatus": {
        "hash": "57186292b5dbd3aaeac3cd2c0e2e8169f5abc9a52eb2cada7fcd879d5b105a6a",
        "query": "query WatchPartyUser_ChannelStatus($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      type\n    }\n    channel {\n      id\n      videoStreamSettings {\n        isLowLatency\n      }\n    }\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "WatchPartyUser_PrimeVideoBenefit": {
        "hash": "f92340847f2e3e4d75ac2289ed34d9cd5a76f6e82c1656f539cfb3014095e2fc",
        "query": "query WatchPartyUser_PrimeVideoBenefit($accessToken: String!) {\n  primeVideoBenefit(accessToken: $accessToken) {\n    error {\n      ...watchPartyError\n    }\n    isValid\n  }\n}\n"
    },
    "CopyrightSchoolInvitation": {
        "hash": "18014b4f434a38b7244db6a932f4a05a8902fae7ac7307f2d5f7a2002d45d3ac",
        "query": "fragment copyrightSchoolInvitation on CopyrightSchoolInvitation {\n  id\n  createdAt\n  expiresAt\n  strikeToRemove\n}\n\nquery CopyrightSchoolInvitation() {\n  copyrightSchoolInvitation {\n    invitation {\n      ...copyrightSchoolInvitation\n    }\n  }\n}\n"
    },
    "TaxMismatchSpecificErrors_CurrentUser": {
        "hash": "b523e516479c3e02fc382edd4c387e5c1caf36950751d13ecf9737b68acea4f5",
        "query": "query TaxMismatchSpecificErrors_CurrentUser() {\n  currentUser {\n    id\n    payoutInvite {\n      id\n      workflow {\n        id\n        registration {\n          city\n          companyName\n          countryCode\n          email\n          firstName\n          lastName\n          middleName\n          postal\n          stateCode\n          streetAddress\n          streetAddress2\n        }\n        taxMismatchErrors\n      }\n    }\n  }\n}\n"
    },
    "TaxPreviewReference_CurrentUser": {
        "hash": "b66b40f05e53c70cb98c6dccc053daa9d2fea36c0cc3b4ebf0e370aed31e99f9",
        "query": "query TaxPreviewReference_CurrentUser() {\n  currentUser {\n    id\n    login\n    payoutInvite {\n      id\n      workflow {\n        id\n        registration {\n          city\n          companyName\n          countryCode\n          email\n          firstName\n          lastName\n          middleName\n          postal\n          stateCode\n          streetAddress\n          streetAddress2\n        }\n      }\n    }\n  }\n}\n"
    },
    "TaxPreviewModal_CurrentUser": {
        "hash": "365a9196f05a75785567fb7eb87b155840035a03db97b489de67bf4ae6f83888",
        "query": "query TaxPreviewModal_CurrentUser($taxType: TaxInterviewType!, $returnURL: String!) {\n  currentUser {\n    id\n    payoutInvite {\n      id\n      workflow {\n        id\n        taxInterview(type: $taxType, returnURL: $returnURL) {\n          url\n          options {\n            key\n            value\n          }\n          signature\n        }\n      }\n    }\n  }\n}\n"
    },
    "PayoutOnboardingTaxInterview_CurrentUser": {
        "hash": "becee08063d3707618f2296b87f04747f7d95ced4d255f4ab1acefce6556505a",
        "query": "query PayoutOnboardingTaxInterview_CurrentUser() {\n  currentUser {\n    id\n    onboardingInvitations {\n      payout {\n        id\n        workflow {\n          id\n          registration {\n            email\n          }\n          timestamp\n        }\n      }\n    }\n  }\n}\n"
    },
    "TaxInterviewPage_CurrentUser": {
        "hash": "a9073176853f4a7a03b7e313f58ea34489a0ffcaf8dced1ec40e2512cb07c69c",
        "query": "query TaxInterviewPage_CurrentUser() {\n  currentUser {\n    id\n    onboardingInvitations {\n      payout {\n        id\n        category\n        workflow {\n          id\n          registration {\n            email\n          }\n          timestamp\n        }\n      }\n    }\n    payout {\n      taxIntents {\n        state\n        type\n        taxMismatchErrors\n        isUserActionRequired\n        formExpiryDate\n      }\n    }\n  }\n}\n"
    },
    "GuestStarBatchCollaborationQuery": {
        "hash": "ae51500f1639ad6cf19ac591904efc07c481e82b04098c053de149804727fc5c",
        "query": "query GuestStarBatchCollaborationQuery($options: GuestStarChannelCollaborationOptions, $canDropInFlagEnabled: Boolean!, $openCallingFlagEnabled: Boolean!) {\n  guestStarChannelCollaboration(options: $options) {\n    ...guestStarChannelCollab\n  }\n  guestStarCollaborationStatuses(options: $options) @include(if: $openCallingFlagEnabled) {\n    shouldRefetch\n    shouldSubscribeToUpdates\n    channelCollabs {\n      ...guestStarChannelCollab\n    }\n  }\n}\n\nfragment guestStarChannelCollab on GuestStarChannelCollaboration {\n  id\n  session {\n    ...guestStarOngoingSession\n  }\n  canDropIn @include(if: $canDropInFlagEnabled)\n  canJoinStatus @include(if: $openCallingFlagEnabled)\n  isFavorite\n}\n"
    },
    "PrimeSubscribe_SpendPrimeSubscriptionCredit": {
        "hash": "2833569e0c9d899158a787b1ff74db2d4455290bc63ab50d58bd9e6c0b8b65b8",
        "query": "mutation PrimeSubscribe_SpendPrimeSubscriptionCredit($input: SpendSubscriptionCreditInput!) {\n  spendSubscriptionCredit(input: $input) {\n    userID\n    subscriptionBenefit {\n      id\n      purchasedWithPrime\n      tier\n      platform\n      endsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "incrementClipViewCount": {
        "hash": "d5e378bff76480d01d0933f7c8a089c642dc11c451a88a4bb13c8c4b0fa4a5ea",
        "query": "mutation incrementClipViewCount($input: UpdateClipViewCountInput!) {\n  updateClipViewCount(input: $input) {\n    clip {\n      id\n    }\n  }\n}\n"
    },
    "VideoPlayer_CollectionManager": {
        "hash": "0371f2c1dd0396f181edc80719b395adb35a125f57280ebca0f92f4558ff30fb",
        "query": "fragment VideoPlayer_CollectionManager_Video on Video {\n  id\n}\n\nfragment VideoPlayer_CollectionManager_Collection on Collection {\n  id\n  items(first: 200) {\n    edges {\n      node {\n        ...VideoPlayer_CollectionManager_Video\n      }\n    }\n  }\n}\n\nquery VideoPlayer_CollectionManager($collectionID: ID!) {\n  collection(id: $collectionID) {\n    ...VideoPlayer_CollectionManager_Collection\n  }\n}\n"
    },
    "ComscoreStreamingQuery": {
        "hash": "57ccb77bad339f9beb69ac5f8bcee3b0665308671074ef137a100069eb750b2c",
        "query": "query ComscoreStreamingQuery($channel: String, $isLive: Boolean!, $isVodOrCollection: Boolean!, $vodID: ID!, $isClip: Boolean!, $clipSlug: ID!) {\n  user(login: $channel) @include(if: $isLive) {\n    id\n    displayName\n    stream {\n      id\n      createdAt\n      game {\n        id\n        name\n      }\n    }\n    broadcastSettings {\n      id\n      title\n    }\n  }\n  video(id: $vodID) @include(if: $isVodOrCollection) {\n    id\n    broadcastType\n    createdAt\n    game {\n      id\n      name\n    }\n    lengthSeconds\n    owner {\n      id\n      displayName\n    }\n    title\n  }\n  clip(slug: $clipSlug) @include(if: $isClip) {\n    id\n    broadcaster {\n      id\n      displayName\n    }\n    createdAt\n    durationSeconds\n    title\n    game {\n      id\n      name\n    }\n  }\n}\n"
    },
    "NielsenContentMetadata": {
        "hash": "61f923cff35934b22cf5aadb20674b05b668acb4225a5d163fa383ab89434fbc",
        "query": "fragment NielsenContentMetadataVideo on Video {\n  id\n  createdAt\n  title\n  game {\n    id\n    displayName\n  }\n  owner {\n    id\n    login\n  }\n}\n\nquery NielsenContentMetadata($collectionID: ID!, $login: String!, $vodID: ID!, $isCollectionContent: Boolean!, $isLiveContent: Boolean!, $isVODContent: Boolean!) {\n  user(login: $login) @include(if: $isLiveContent) {\n    id\n    broadcastSettings {\n      id\n      title\n    }\n    stream {\n      id\n      createdAt\n      game {\n        id\n        displayName\n      }\n    }\n  }\n  video(id: $vodID) @include(if: $isVODContent) {\n    ...NielsenContentMetadataVideo\n  }\n  collection(id: $collectionID) @include(if: $isCollectionContent) {\n    id\n    items(first: 1) {\n      edges {\n        node {\n          ...NielsenContentMetadataVideo\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayer_AgeGateOverlayBroadcaster": {
        "hash": "62ddc12ac0ece14e65e84055c19958bc197fdc1372c8e4050a12b6e0afa42f49",
        "query": "query VideoPlayer_AgeGateOverlayBroadcaster($input: UserByAttribute!) {\n  userByAttribute(input: $input) {\n    id\n    login\n    adProperties {\n      requiredAge\n    }\n  }\n}\n"
    },
    "VideoPlayerClipPostplayRecommendationsOverlay": {
        "hash": "e345ee2cefb215ed5597d560d8bb8d69add6ee6880e2f6eb1dda89fe519a3bfd",
        "query": "fragment recommendedPostplayGame on Game {\n  id\n  displayName\n  name\n}\n\nfragment recommendedPostplayClipBroadcaster on User {\n  id\n  displayName\n  login\n}\n\nfragment recommendedPostplayClip on Clip {\n  id\n  durationSeconds\n  slug\n  title\n  thumbnailURL(width: 480, height: 272)\n  viewCount\n  broadcaster {\n    ...recommendedPostplayClipBroadcaster\n  }\n  game {\n    ...recommendedPostplayGame\n  }\n}\n\nfragment recommendedPostplayBroadcaster on User {\n  ...recommendedPostplayClipBroadcaster\n  stream {\n    id\n    previewImageURL(width: 320, height: 180)\n    game {\n      ...recommendedPostplayGame\n    }\n  }\n}\n\nfragment recommendedPostplayVideo on Video {\n  id\n  game {\n    ...recommendedPostplayGame\n  }\n  lengthSeconds\n  previewThumbnailURL(width: 320, height: 180)\n}\n\nfragment recommendedRelatedClips on ClipRelatedClips {\n  broadcaster {\n    ...recommendedPostplayClip\n  }\n  game {\n    ...recommendedPostplayClip\n  }\n  top {\n    ...recommendedPostplayClip\n  }\n}\n\nquery VideoPlayerClipPostplayRecommendationsOverlay($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    durationSeconds\n    slug\n    videoOffsetSeconds\n    broadcaster {\n      ...recommendedPostplayBroadcaster\n    }\n    game {\n      ...recommendedPostplayGame\n    }\n    relatedClips {\n      ...recommendedRelatedClips\n    }\n    video {\n      ...recommendedPostplayVideo\n    }\n  }\n}\n"
    },
    "ClipShareOverlay": {
        "hash": "c87e7adf894e200aab6cbc303a85850fa4e85134904c63ed0a7bf3bf90e0a65d",
        "query": "query ClipShareOverlay($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    broadcaster {\n      id\n      login\n    }\n    title\n  }\n}\n"
    },
    "CollectionSideBar": {
        "hash": "05633e1ccd6109710eb2afff159e4c1dad1c27d2911483fd3d38665b450b111e",
        "query": "query CollectionSideBar($collectionID: ID!) {\n  collection(id: $collectionID) {\n    id\n    title\n    lengthSeconds\n    owner {\n      id\n      displayName\n      login\n      profileURL\n    }\n    items(first: 200) {\n      totalCount\n      edges {\n        node {\n          __typename\n          ... on Video {\n            id\n            title\n            lengthSeconds\n            previewThumbnailURL(width: 80, height: 45)\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "ContentPolicyPropertiesQuery": {
        "hash": "4987fceee98aeee58d157da66fa495c95e38499e25bcbdde3f094351fbf3361d",
        "query": "query ContentPolicyPropertiesQuery($login: String!, $vodID: ID!, $isLive: Boolean!, $isVOD: Boolean!) {\n  user(login: $login) @include(if: $isLive) {\n    ...ContentPolicyPropertiesStream\n  }\n  video(id: $vodID) @include(if: $isVOD) {\n    ...ContentPolicyPropertiesVideo\n  }\n}\n"
    },
    "ExtensionsInfoBalloon": {
        "hash": "d112c8d76055e41d0c449f131b79f59b28ce920ee84b15c69250dcd25867db9c",
        "query": "query ExtensionsInfoBalloon($extensionID: ID!, $extensionVersion: String) {\n  extension(id: $extensionID, version: $extensionVersion) {\n    id\n    screenshotURLs\n  }\n}\n"
    },
    "ExtensionsNotificationBitsBalance": {
        "hash": "3ea0f98f23decd4a3db92b2bfb26963ec5b28027ca0c6841b1117e04a3a59741",
        "query": "query ExtensionsNotificationBitsBalance() {\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "ExtensionsOverlay": {
        "hash": "267fb97b5dee85f8d4fdca302e162101981956b1e9757530af92fb0c015dc562",
        "query": "query ExtensionsOverlay($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      game {\n        id\n        name\n      }\n    }\n    self {\n      banStatus {\n        isPermanent\n        expiresInMs\n      }\n    }\n  }\n}\n"
    },
    "FollowPanelOverlay": {
        "hash": "f7e2a7bca3bc6f009224bb90e4b84828f72a727a92ad20ba9417e41b902134c1",
        "query": "query FollowPanelOverlay($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    login\n    self {\n      follower {\n        node {\n          id\n        }\n        disableNotifications\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayer_MutedSegmentsAlertOverlay": {
        "hash": "86d46331b9cb4772aaa3b8050ac26ddf869fb8c53b69bfee036e70ff9f7c7831",
        "query": "query VideoPlayer_MutedSegmentsAlertOverlay($vodID: ID, $includePrivate: Boolean) {\n  video(id: $vodID, options: {includePrivate: $includePrivate}) {\n    id\n    muteInfo {\n      mutedSegmentConnection {\n        nodes {\n          duration\n          offset\n        }\n      }\n    }\n  }\n}\n"
    },
    "OfflineBannerOverlay": {
        "hash": "6b66a8b747ffed2a8ece82e5eac402e4cad80721fb6cdd853319d4dac4fef58d",
        "query": "query OfflineBannerOverlay($login: String!) {\n  user(login: $login) {\n    id\n    offlineImageURL\n  }\n}\n"
    },
    "OfflineEmbedVODAndSchedule": {
        "hash": "6ddcea873363d738c627e6ffe83a7efb2d58c795fd88a16830c765cd344750ef",
        "query": "query OfflineEmbedVODAndSchedule($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    bannerImageURL\n    offlineImageURL\n    primaryColorHex\n    channel {\n      id\n      schedule {\n        id\n        segmentList {\n          edges {\n            node {\n              id\n              title\n              startAt\n              endAt\n              hasReminder\n              isCancelled\n              categories {\n                id\n                name\n                boxArtURL(width: 144, height: 192)\n              }\n            }\n          }\n        }\n      }\n    }\n    videos(first: 1) {\n      edges {\n        node {\n          id\n          title\n          previewThumbnailURL(width: 320, height: 180)\n          game {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayerOfflineRecommendationsOverlay": {
        "hash": "9e41b5fbe1ce665200d60d9be9e1f05ee9a2caf604aa75c9b01a799ad1b9ebac",
        "query": "query VideoPlayerOfflineRecommendationsOverlay($login: String!) {\n  user(login: $login) {\n    id\n    videos(first: 30) {\n      edges {\n        node {\n          ...VideoPlayerOfflineRecommendationsOverlayVideo\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayer_ChapterSelectButtonVideo": {
        "hash": "8a4d55b7a4b235805deeecb0e29deaad25ef90590c3b7ef7e4d897043ea9dc8b",
        "query": "query VideoPlayer_ChapterSelectButtonVideo($videoID: ID, $includePrivate: Boolean) {\n  video(id: $videoID, options: {includePrivate: $includePrivate}) {\n    id\n    moments(momentRequestType: VIDEO_CHAPTER_MARKERS, types: [GAME_CHANGE, HEARTHSTONE_VCA, OVERWATCH_VCA, PUBG_VCA]) {\n      edges {\n        ...VideoPlayerVideoMomentEdge\n      }\n    }\n  }\n}\n\nfragment VideoPlayerVideoMomentEdge on VideoMomentEdge {\n  node {\n    moments {\n      edges {\n        ...VideoPlayerVideoMomentConnection\n      }\n    }\n    ...VideoPlayerVideoMoment\n  }\n}\n\nfragment VideoPlayerVideoMomentConnection on VideoMomentEdge {\n  node {\n    ...VideoPlayerVideoMoment\n  }\n}\n\nfragment VideoPlayerVideoMoment on VideoMoment {\n  id\n  durationMilliseconds\n  positionMilliseconds\n  type\n  description\n  subDescription\n  thumbnailURL\n  details {\n    ...VideoPlayerGameChangeDetails\n  }\n  video {\n    id\n    lengthSeconds\n  }\n}\n\nfragment VideoPlayerGameChangeDetails on GameChangeMomentDetails {\n  game {\n    id\n    displayName\n    boxArtURL(width: 40, height: 53)\n  }\n}\n"
    },
    "VideoPlayerClipsButtonBroadcaster": {
        "hash": "249260dca04d5fbf3e503a19c3e61c56047b23d802169d570479f8f1c138fa4f",
        "query": "query VideoPlayerClipsButtonBroadcaster($input: UserByAttribute!) {\n  userByAttribute(input: $input) {\n    id\n    login\n    stream {\n      id\n      isEncrypted\n    }\n  }\n}\n"
    },
    "LiveStreamTime": {
        "hash": "bf7197d8fc0479ac732fa29dc50abe66ef79eb4ccfde779a1d33ed87d149644b",
        "query": "query LiveStreamTime($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "VideoPlayerSettingsWithClipMetadata": {
        "hash": "629ee7eb7ff6899535316d1aca406ccaada4bd0be3c5e673288a3173aac5c611",
        "query": "query VideoPlayerSettingsWithClipMetadata($slug: ID!, $isCommunityMomentsFeatureEnabled: Boolean!) {\n  clip(slug: $slug) {\n    id\n    broadcaster {\n      id\n    }\n    curator {\n      id\n    }\n    communityMoment @include(if: $isCommunityMomentsFeatureEnabled) {\n      id\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isSiteAdmin\n    }\n  }\n}\n"
    },
    "VideoPlayer_ViewCount": {
        "hash": "791e51db872320309ce50472e7fff0ee17515a13a091123dcbdcaadfe575245b",
        "query": "query VideoPlayer_ViewCount($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      viewersCount\n    }\n  }\n}\n"
    },
    "VideoPlayer_VODSeekbarPreviewVideo": {
        "hash": "905188f8fe4aeda654ae94f01e2b314696ea4cf87bec943bed44b913cf8378c2",
        "query": "query VideoPlayer_VODSeekbarPreviewVideo($videoID: ID, $includePrivate: Boolean) {\n  video(id: $videoID, options: {includePrivate: $includePrivate}) {\n    id\n    seekPreviewsURL\n  }\n}\n"
    },
    "VideoPlayer_VODSeekbar": {
        "hash": "19b0e32a5782cb1198d7fcbefefea7834e30a4abe92f1b8d75ce49713a817e2a",
        "query": "fragment VideoMutedSegment on VideoMutedSegment {\n  duration\n  offset\n}\n\nquery VideoPlayer_VODSeekbar($vodID: ID, $includePrivate: Boolean) {\n  video(id: $vodID, options: {includePrivate: $includePrivate}) {\n    id\n    lengthSeconds\n    muteInfo {\n      mutedSegmentConnection {\n        nodes {\n          ...VideoMutedSegment\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayerPremiumContentOverlayChannel": {
        "hash": "7fc502bbe68729265256088c0370ba3b35699ade23e93d708a5f5da1fedca3ea",
        "query": "query VideoPlayerPremiumContentOverlayChannel($channel: String) {\n  user(login: $channel) {\n    id\n    stream {\n      id\n      restriction {\n        id\n        options\n        type\n      }\n    }\n  }\n}\n"
    },
    "PreviewContentOverlayQuery": {
        "hash": "96402d3aa5b48a69f398dcadb5e03516f94d03a43d7d699400ff028ffc42ee85",
        "query": "query PreviewContentOverlayQuery($channel: String) {\n  user(login: $channel) {\n    id\n    stream {\n      id\n      previewImageURL(width: 285, height: 160)\n    }\n    subscriptionProducts {\n      id\n      name\n      tier\n    }\n    self {\n      canPrimeSubscribe\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayerStatusOverlayChannel": {
        "hash": "97fc635ec741fa5823f926e60a38a9c54baebc290dda3f1514807d3df7984719",
        "query": "query VideoPlayerStatusOverlayChannel($channel: String) {\n  user(login: $channel) {\n    id\n    stream {\n      id\n      type\n    }\n  }\n}\n"
    },
    "VideoPlayerSubscriberVODOverlayVideoQuery": {
        "hash": "490cebafa2d525096c8afb528ed1593b91435d5101c75b86725f47fc32501ba1",
        "query": "query VideoPlayerSubscriberVODOverlayVideoQuery($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    owner {\n      id\n      displayName\n      profileImageURL(width: 150)\n      login\n    }\n  }\n}\n"
    },
    "CollectionTopBar": {
        "hash": "3a7aa4f5f283bcc9f2fef845f95ed79d81f04a448afd7f5f85c428ab72b19dcb",
        "query": "query CollectionTopBar($collectionID: ID!) {\n  collection(id: $collectionID) {\n    id\n    title\n    items(first: 200) {\n      totalCount\n      edges {\n        node {\n          __typename\n          ... on Video {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayerStreamInfoOverlayChannel": {
        "hash": "c242ed20eb8215b48f0b0d52feb0e6d43320646d85f0acef620518d093991cce",
        "query": "query VideoPlayerStreamInfoOverlayChannel($channel: String) {\n  user(login: $channel) {\n    id\n    profileURL\n    displayName\n    login\n    profileImageURL(width: 150)\n    roles {\n      isPartner\n    }\n    broadcastSettings {\n      id\n      title\n      game {\n        id\n        displayName\n        name\n        slug\n      }\n    }\n    stream {\n      id\n      viewersCount\n      tags {\n        id\n        localizedName\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayerStreamInfoOverlayClip": {
        "hash": "6c4d1e7c99934f4d61128ac61b008dd4f3ddcc151a3a40f07e285f08aaf7e3ab",
        "query": "query VideoPlayerStreamInfoOverlayClip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    title\n    slug\n    broadcaster {\n      id\n      login\n      displayName\n      profileURL\n      profileImageURL(width: 150)\n      roles {\n        isPartner\n      }\n    }\n    game {\n      id\n      displayName\n      name\n      slug\n    }\n    viewCount\n  }\n}\n"
    },
    "VideoPlayerStreamInfoOverlayVOD": {
        "hash": "01a5cd02032d3bb94ac881c7a8437860b4930d4865a87a847d5bdb23fe181600",
        "query": "query VideoPlayerStreamInfoOverlayVOD($videoID: ID) {\n  video(id: $videoID) {\n    id\n    title\n    owner {\n      id\n      login\n      displayName\n      profileImageURL(width: 150)\n      roles {\n        isPartner\n      }\n    }\n    contentTags {\n      id\n      localizedName\n    }\n  }\n}\n"
    },
    "VideoPreviewOverlay": {
        "hash": "86941b0f7f2546343c8c22303685ab05c71915b058ace4c723755a74c4a176af",
        "query": "query VideoPreviewOverlay($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      previewImageURL(width: 1280, height: 720)\n      restrictionType\n    }\n  }\n}\n"
    },
    "VideoPlayerVODPostplayRecommendations": {
        "hash": "926c9b03e19b8f1a04231d3ca634a8e88c992815033bc3d434d3b317737f916f",
        "query": "fragment VideoPlayerVODPostplayRecommendationsVideo on Video {\n  id\n  createdAt\n  lengthSeconds\n  title\n  previewThumbnailURL(width: 640, height: 360)\n  game {\n    id\n    name\n  }\n  self {\n    viewingHistory {\n      position\n    }\n  }\n}\n\nquery VideoPlayerVODPostplayRecommendations($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    owner {\n      id\n      displayName\n      videos(first: 32, sort: TIME, type: ARCHIVE) {\n        edges {\n          node {\n            ...VideoPlayerVODPostplayRecommendationsVideo\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "VODPreviewOverlay": {
        "hash": "fb632663be579215392db30b4cbdf3977301512c77276f3b3ce1faa2aacd264d",
        "query": "query VODPreviewOverlay($vodID: ID) {\n  video(id: $vodID) {\n    id\n    previewThumbnailURL(width: 1280, height: 720)\n    title\n  }\n}\n"
    },
    "VideoPlayerPixelAnalyticsUrls": {
        "hash": "6ae7564b3edccf208a634aa92dabf71cae8621a79f4948ff475529d9c8c345a8",
        "query": "query VideoPlayerPixelAnalyticsUrls($login: String, $allowAmazon: Boolean, $allowComscore: Boolean, $allowGoogle: Boolean, $allowNielsen: Boolean) {\n  user(login: $login) {\n    id\n    adProperties {\n      trackingPixels(consent: {allowAmazon: $allowAmazon, allowComscore: $allowComscore, allowGoogle: $allowGoogle, allowNielsen: $allowNielsen}) {\n        origin\n        service\n        type\n        url\n        timeOffsetSeconds\n      }\n    }\n  }\n}\n"
    },
    "VideoPlayer_FollowButtonFollowUser": {
        "hash": "fa5e5276eaca75e15de0196b70c000b1a4af32586fddddecc3730ea065a6ef88",
        "query": "mutation VideoPlayer_FollowButtonFollowUser($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        id\n        self {\n          follower {\n            node {\n              id\n            }\n            disableNotifications\n            followedAt\n            notificationSettings {\n              isEnabled\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "queryUserViewedVideo": {
        "hash": "146bf941eb1e7fcf62e150180da8c909c97273235fa76c4a73995ac612ae5650",
        "query": "query queryUserViewedVideo() {\n  currentUser {\n    id\n    viewedVideos(first: 100) {\n      edges {\n        node {\n          id\n        }\n        history {\n          position\n        }\n      }\n    }\n  }\n}\n"
    },
    "updateUserViewedVideo": {
        "hash": "8c2b5f566aaff5512acddf7adb16a9f76f0365375f7fcdb28b6a7b5330a5328c",
        "query": "mutation updateUserViewedVideo($input: UpdateUserViewedVideoInput!) {\n  updateUserViewedVideo(input: $input) {\n    video {\n      id\n    }\n  }\n}\n"
    },
    "VideoPlayerStreamMetadata": {
        "hash": "61b05d62d74ace3ab758c7e1c73417f3055662f5f27e923183ab969c21a5da3e",
        "query": "query VideoPlayerStreamMetadata($channel: String) {\n  user(login: $channel) {\n    id\n    stream {\n      id\n      isEncrypted\n    }\n  }\n}\n"
    },
    "StreamRefetchManager": {
        "hash": "e61b26d336b50d28bd8ed92d9fd32379e494212be9e8ded0b19ca974cd693640",
        "query": "query StreamRefetchManager($channel: String) {\n  user(login: $channel) {\n    id\n    stream {\n      id\n      isEncrypted\n    }\n  }\n}\n"
    },
    "StreamTagsTrackingChannel": {
        "hash": "f39356fbb42cbd617c7866a3351d84fdd1573948e4f9c77ecac90be386f25034",
        "query": "query StreamTagsTrackingChannel($channel: String) {\n  user(login: $channel) {\n    id\n    login\n    stream {\n      id\n      ...streamTagsTrackingTags\n    }\n  }\n}\n"
    },
    "AdRequestHandling": {
        "hash": "4ac38d0abd5b7c7f0b256dad579221c4e26d2b1693cd28a9d578b7e1b44d0a1a",
        "query": "query AdRequestHandling($login: String!, $vodID: ID!, $collectionID: ID!, $isLive: Boolean!, $isVOD: Boolean!, $isCollection: Boolean!) {\n  currentUser {\n    ...AdRequestCurrentUser\n  }\n  user(login: $login) @include(if: $isLive) {\n    ...AdRequestBroadcaster\n  }\n  video(id: $vodID) @include(if: $isVOD) {\n    ...AdRequestVOD\n  }\n  collection(id: $collectionID) @include(if: $isCollection) {\n    id\n    items(first: 1) {\n      edges {\n        node {\n          ...AdRequestVOD\n        }\n      }\n    }\n    owner {\n      ...AdRequestBroadcaster\n    }\n  }\n}\n"
    },
    "VODMidrollManager": {
        "hash": "61722bd5456e2dbae64d7a8184c764ed4c6ca71e1713904f8c1008342e01686f",
        "query": "query VODMidrollManager($vodID: ID!, $collectionID: ID!, $isVOD: Boolean!, $isCollection: Boolean!) {\n  video(id: $vodID) @include(if: $isVOD) {\n    id\n    broadcastType\n    owner {\n      ...VODMidrollManagerBroadcaster\n    }\n  }\n  collection(id: $collectionID) @include(if: $isCollection) {\n    id\n    items(first: 1) {\n      edges {\n        node {\n          ... on Video {\n            id\n            broadcastType\n          }\n        }\n      }\n    }\n    owner {\n      ...VODMidrollManagerBroadcaster\n    }\n  }\n}\n\nfragment VODMidrollManagerBroadcaster on User {\n  id\n  adProperties {\n    ...VODMidrollManagerAdProperties\n  }\n}\n\nfragment VODMidrollManagerAdProperties on AdProperties {\n  hasVodAdsEnabled\n  vodArchiveMidrolls\n  vodArchiveMidrollsBreakLength\n  vodArchiveMidrollsFrequency\n}\n"
    },
    "VideoAdBanner": {
        "hash": "44df65898944a8aea460d162fddea47c92d4cf2dff4dc6a9452b162f03d42330",
        "query": "query VideoAdBanner($input: UserByAttribute!) {\n  userByAttribute(input: $input) {\n    ...VideoAdBannerChannel\n  }\n}\n"
    },
    "VideoAdRequestDecline": {
        "hash": "11b72aa14793bc3a2d23b437a306c6dd48474af831d6307082b4dacd39bb9212",
        "query": "query VideoAdRequestDecline($context: AdRequestContext!) {\n  adContext(context: $context) {\n    id\n    radToken\n    declineState {\n      reason\n      shouldDecline\n    }\n  }\n}\n"
    },
    "AdFormatTracking_RecordAdEvent": {
        "hash": "2b3a41097624f3795281f6ecd5f5f8472b4bbcbe48f2e8473fa42d291697216e",
        "query": "mutation AdFormatTracking_RecordAdEvent($input: RecordAdEventInput!) {\n  recordAdEvent(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ClientSideAdEventHandling_RecordAdEvent": {
        "hash": "b4a53ed706f663d81ac3c43b37b39fdb8f4a44a7a58d18a4ac971aea7d46908d",
        "query": "mutation ClientSideAdEventHandling_RecordAdEvent($input: RecordAdEventInput!) {\n  recordAdEvent(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "VideoPlayer_VideoSourceManager": {
        "hash": "31f1554418b82de36b97f35774d292559822de0ee1905bbf47666bc7ef97db60",
        "query": "query VideoPlayer_VideoSourceManager($input: UserByAttribute!) {\n  userByAttribute(input: $input) {\n    id\n  }\n}\n"
    },
    "VideoPlayer_CollectionContent": {
        "hash": "a1eb623c7b2e220866e4779b5dcb60c769c4b953f74f3a185ccb2caf7afeae26",
        "query": "query VideoPlayer_CollectionContent($id: ID!) {\n  collection(id: $id) {\n    id\n    items(first: 1) {\n      edges {\n        cursor\n        node {\n          ... on Video {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "ContentClassificationContext": {
        "hash": "40d56a25655b1795f10d96339a62e0f3f063154702c972b6631b60c87e49dd6d",
        "query": "fragment broadcasterInfo on User {\n  id\n  displayName\n}\n\nfragment contentClassificationLabelFields on ContentClassificationLabel {\n  id\n  localizedName\n}\n\nfragment gameTrackingFields on Game {\n  id\n  name\n}\n\nquery ContentClassificationContext($login: String, $clipSlug: ID!, $vodID: ID, $isStream: Boolean!, $isVOD: Boolean!, $isClip: Boolean!) {\n  user(login: $login) @include(if: $isStream) {\n    id\n    stream {\n      id\n      game {\n        ...gameTrackingFields\n      }\n      contentClassificationLabels {\n        ...contentClassificationLabelFields\n      }\n      contentClassificationLabelPolicyProperties {\n        ...contentClassificationLabelPoliciesFields\n      }\n    }\n    ...broadcasterInfo\n  }\n  video(id: $vodID) @include(if: $isVOD) {\n    id\n    broadcastType\n    game {\n      ...gameTrackingFields\n    }\n    owner {\n      ...broadcasterInfo\n    }\n    contentClassificationLabels {\n      ...contentClassificationLabelFields\n    }\n    contentClassificationLabelPolicyProperties {\n      ...contentClassificationLabelPoliciesFields\n    }\n  }\n  clip(slug: $clipSlug) @include(if: $isClip) {\n    id\n    slug\n    broadcaster {\n      ...broadcasterInfo\n    }\n    game {\n      ...gameTrackingFields\n    }\n    contentClassificationLabels {\n      ...contentClassificationLabelFields\n    }\n    contentClassificationLabelPolicyProperties {\n      ...contentClassificationLabelPoliciesFields\n    }\n  }\n}\n"
    },
    "ContentClassificationContextStreamPubsub": {
        "hash": "e6363ce12d6aa383bdcdc722c2c02d87d4ce288222cddbe331d32ffe8ed3d8f1",
        "query": "query ContentClassificationContextStreamPubsub($channelID: ID) {\n  user(id: $channelID) {\n    id\n    stream {\n      id\n      contentClassificationLabelPolicyProperties {\n        ...contentClassificationLabelPoliciesFields\n      }\n    }\n  }\n}\n"
    },
    "ExtensionsUIContext_ChannelID": {
        "hash": "d4f0316d7bf96aba6110e24c144a43c2e3433964d1ea2170dd9b4c1b13d02eac",
        "query": "query ExtensionsUIContext_ChannelID($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n  }\n}\n"
    },
    "PlayerTrackingContextQuery": {
        "hash": "0000f61c33985aa75ad25a0d1523767c0f1db389584a9658334ba3e212b4f8e6",
        "query": "query PlayerTrackingContextQuery($channel: String, $isLive: Boolean!, $collectionID: ID!, $hasCollection: Boolean!, $videoID: ID!, $hasVideo: Boolean!, $slug: ID!, $hasClip: Boolean!) {\n  currentUser {\n    id\n    login\n    isStaff\n    hasTurbo\n  }\n  user(login: $channel) @include(if: $isLive) {\n    id\n    ...PlayerTrackingBroadcaster\n    subscriptionProducts {\n      id\n      hasAdFree\n    }\n    stream {\n      id\n      broadcasterSoftware\n      game {\n        ...PlayerTrackingGame\n      }\n      restriction {\n        id\n        options\n        type\n        exemptions {\n          type\n        }\n      }\n    }\n    self {\n      follower {\n        followedAt\n      }\n      subscriptionBenefit {\n        id\n      }\n      isModerator\n    }\n    broadcastSettings {\n      id\n      game {\n        ...PlayerTrackingGame\n      }\n    }\n  }\n  collection(id: $collectionID) @include(if: $hasCollection) {\n    id\n    items(first: 200) {\n      edges {\n        node {\n          ...PlayerTrackingVOD\n        }\n      }\n    }\n    owner {\n      id\n      ...PlayerTrackingBroadcaster\n    }\n  }\n  video(id: $videoID) @include(if: $hasVideo) {\n    id\n    ...PlayerTrackingVOD\n    owner {\n      ...PlayerTrackingBroadcaster\n    }\n  }\n  clip(slug: $slug) @include(if: $hasClip) {\n    id\n    broadcaster {\n      ...PlayerTrackingBroadcaster\n    }\n    game {\n      ...PlayerTrackingGame\n    }\n  }\n}\n\nfragment PlayerTrackingVOD on Video {\n  id\n  broadcastType\n  game {\n    id\n    name\n  }\n}\n\nfragment PlayerTrackingBroadcaster on User {\n  id\n  login\n  isPartner\n}\n\nfragment PlayerTrackingGame on Game {\n  id\n  name\n}\n"
    },
    "VideoAccessToken_Clip": {
        "hash": "25b3b736b2fd720935b970a935317f2e0bef5b3d9bc79d87a1f52877ce1dde21",
        "query": "query VideoAccessToken_Clip($slug: ID!, $platform: String!) {\n  clip(slug: $slug) {\n    id\n    playbackAccessToken(params: {platform: $platform, playerType: \"clips-viewing\"}) {\n      signature\n      value\n    }\n    videoQualities {\n      ...videoAccessToken_ClipQuality\n    }\n  }\n}\n\nfragment videoAccessToken_ClipQuality on ClipVideoQuality {\n  frameRate\n  quality\n  sourceURL\n}\n"
    },
    "VideoAccessToken_Collection": {
        "hash": "cd93f3b8430db0cdb41229df022397bb503fa459b6ed9ad0e8ed6ef273bdf2a8",
        "query": "query VideoAccessToken_Collection($id: ID!) {\n  collection(id: $id) {\n    id\n    items(first: 1) {\n      edges {\n        cursor\n        node {\n          ... on Video {\n            id\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "PlaybackAccessToken": {
        "hash": "6529552fc718fa9870fddcdf53b4e17b93546e4d49ccdb09dfb5cf3588fd9fe4",
        "query": "query PlaybackAccessToken($login: String!, $isLive: Boolean!, $vodID: ID!, $isVod: Boolean!, $playerType: String!, $platform: String!) {\n  streamPlaybackAccessToken(channelName: $login, params: {platform: $platform, playerBackend: \"mediaplayer\", playerType: $playerType}) @include(if: $isLive) {\n    value\n    signature\n    authorization {\n      isForbidden\n      forbiddenReasonCode\n    }\n  }\n  videoPlaybackAccessToken(id: $vodID, params: {platform: $platform, playerBackend: \"mediaplayer\", playerType: $playerType}) @include(if: $isVod) {\n    value\n    signature\n  }\n}\n"
    },
    "VideoPreviewCard__VideoMoments": {
        "hash": "ce3a77c854ad7e10e50eb10572a50124eb50b3f88ae0c6108e5ec81907959913",
        "query": "query VideoPreviewCard__VideoMoments($videoId: ID!) {\n  video(id: $videoId) {\n    id\n    moments(momentRequestType: VIDEO_CHAPTER_MARKERS) {\n      edges {\n        ...videoMomentEdge\n      }\n    }\n  }\n}\n\nfragment videoMomentEdge on VideoMomentEdge {\n  cursor\n  node {\n    ...videoChapter\n  }\n}\n\nfragment videoChapter on VideoMoment {\n  id\n  durationMilliseconds\n  positionMilliseconds\n  type\n  description\n  thumbnailURL\n  ...momentDetails\n  video {\n    id\n    lengthSeconds\n  }\n}\n\nfragment momentDetails on VideoMoment {\n  details {\n    ...gameChangeDetails\n    ...hearthstoneDetails\n    ...overwatchDetails\n    ...pubgDetails\n  }\n}\n\nfragment gameChangeDetails on GameChangeMomentDetails {\n  game {\n    id\n    slug\n    displayName\n    boxArtURL(width: 40, height: 53)\n  }\n}\n\nfragment hearthstoneDetails on HearthstoneMomentDetails {\n  broadcasterHero {\n    id\n    class\n    name\n  }\n  opponentHero {\n    id\n    class\n    name\n  }\n  gameMode {\n    type\n    value\n  }\n}\n\nfragment overwatchDetails on OverwatchMomentDetails {\n  role\n  heroName\n}\n\nfragment pubgDetails on PUBGMomentDetails {\n  maxPlayerCount\n  minPlayerCount\n}\n"
    },
    "ExtensionPanel_Conditions_BitsBalance": {
        "hash": "2d728bd3fe30e732b98bd712329f618926bb13fa78fee0cca6f29cc3235d7640",
        "query": "query ExtensionPanel_Conditions_BitsBalance($extensionID: ID!, $extensionVersion: String, $conditionID: ID!, $conditionOwnerID: ID!) {\n  currentUser {\n    id\n    bitsBalance\n  }\n  extension(id: $extensionID, version: $extensionVersion) {\n    id\n    challengeCondition(input: {conditionID: $conditionID, conditionOwnerID: $conditionOwnerID}) {\n      id\n      name\n    }\n  }\n}\n"
    },
    "OnDemandReferralsByDimension": {
        "hash": "9a0b57ce608948a1b43b57dd4e1142ab7d84711f7bd3dfc1f61acbc8b0b30fbd",
        "query": "query OnDemandReferralsByDimension($startAt: Time!, $endAt: Time!, $granularity: Granularity!, $channel: String!, $contentType: OnDemandContentType!, $dimension: OnDemandDimension!, $first: Int!, $timeZone: String!) {\n  creatorDashboard(startAt: $startAt, endAt: $endAt, period: DAY, channel: $channel) {\n    onDemandReferrals(params: {granularity: $granularity, contentType: $contentType, dimension: $dimension, first: $first, timeZone: $timeZone}) {\n      referrers {\n        ...onDemandReferrals\n      }\n      total\n    }\n  }\n}\n\nfragment onDemandReferrals on OnDemandReferralsItem {\n  referrals {\n    total\n    timestamp\n  }\n  name\n  total\n}\n"
    },
    "ViewerDiscovery_ReferralsTimeseries": {
        "hash": "71b0b9b21fe1e25acdae2cf06b3fa36481742b5f63f668875bcf476484e9b969",
        "query": "query ViewerDiscovery_ReferralsTimeseries($channelID: ID!, $start: Time!, $end: Time!, $timeZone: String!, $granularity: Granularity!, $dimension: ReferralsDimension!, $filter: ReferralsFilter!, $first: Int!) {\n  videoPlayReferralsTimeseries(channelID: $channelID, start: $start, end: $end, granularity: $granularity, dimension: $dimension, filter: $filter, timeZone: $timeZone, first: $first) {\n    ...referralTimeseriesFragment\n  }\n}\n\nfragment referralTimeseriesFragment on VideoPlayReferralsTimeseries {\n  referrers {\n    name\n    items {\n      count\n      timestamp\n    }\n  }\n}\n"
    },
    "acceptTermsOfServiceContract": {
        "hash": "62bc8e559a5444e7926b66e07beacfd53c1155907c4b15ea69ac28805e9cb895",
        "query": "mutation acceptTermsOfServiceContract($input: AcceptSponsorshipTermsOfServiceInput!) {\n  acceptSponsorshipTermsOfService(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SponsorshipTermsContract": {
        "hash": "854f6ab165e81e2526df702869408b1e6da0a28713617fc081bdd6d1ac01205f",
        "query": "query SponsorshipTermsContract($query: SponsorshipTermsQuery) {\n  sponsorshipTerms(query: $query) {\n    ...sponsorshipContract\n  }\n}\n"
    },
    "SponsoredSocialPostsUserConnections": {
        "hash": "c2f45185562d39e73a96bb4a751b4cb3996950bc7c7a4ba4bf760f822e870a62",
        "query": "query SponsoredSocialPostsUserConnections() {\n  currentUser {\n    id\n    accountConnections {\n      twitter {\n        username\n      }\n    }\n  }\n}\n"
    },
    "SponsorshipsCreatorProfile_CommunityStats": {
        "hash": "f69f8da4eed86b8c6b398ac8f9f87f43f7c7009f0a731c51ef17960695338238",
        "query": "query SponsorshipsCreatorProfile_CommunityStats($channelLogin: String!, $start: Time!, $end: Time!, $first: Int!, $granularityMinutesWatched: Granularity!, $granularityAvgViewers: Granularity!, $timeZone: String!) {\n  user(login: $channelLogin) {\n    id\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: COUNTRY, filter: ALL) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: PLATFORM, filter: ALL) {\n      ...videoPlayReferralsFragment\n    }\n    timeseriesStats(startAt: $start, endAt: $end, granularity: $granularityMinutesWatched, timeZone: $timeZone) {\n      granularity\n      minutesWatched {\n        value\n        timestamp\n      }\n    }\n    timeseriesStats(startAt: $start, endAt: $end, granularity: $granularityAvgViewers, timeZone: $timeZone) {\n      averageViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "GetFeaturedClips_CreatorSponsorships": {
        "hash": "0674a2e1d3757945621abc4b297d41cda591ddd299d9b74ccd2b4f3bd5593eb5",
        "query": "query GetFeaturedClips_CreatorSponsorships($login: String!, $limit: Int, $criteria: UserClipsInput) {\n  user(login: $login) {\n    id\n    clips(first: $limit, criteria: $criteria) {\n      edges {\n        cursor\n        node {\n          ...PreviewCardClip\n        }\n      }\n    }\n  }\n}\n"
    },
    "GetSponsorshipsCreatorProfilePreview": {
        "hash": "64d34ba66fad8b7e17bfa8e70fc6892da6c9dece902cca799e3f121519c7bc01",
        "query": "query GetSponsorshipsCreatorProfilePreview($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    profileImageURL(width: 300)\n    displayName\n    followers {\n      totalCount\n    }\n    roles {\n      isPartner\n    }\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n    }\n  }\n  sponsorshipsCreatorProfile {\n    ...sponsorshipsCreatorProfileFields\n  }\n}\n"
    },
    "GetGameByName_CreatorSponsorships": {
        "hash": "18b2bbb74740b5da96a80964d701fdb7edd3620d3faa4e132ccc6da4aacadb90",
        "query": "query GetGameByName_CreatorSponsorships($name: String!) {\n  game(name: $name) {\n    id\n    displayName\n    boxArtURL(width: 120, height: 160)\n  }\n}\n"
    },
    "SponsorshipCampaignInstancePacings": {
        "hash": "fa50ecc8dce9f51cc0905f61f16f9fbec2d4435909492e78e9f226cbd153d860",
        "query": "query SponsorshipCampaignInstancePacings() {\n  sponsorshipCampaignInstancePacings {\n    ...sponsorshipCampaignInstancePacing\n  }\n}\n"
    },
    "SponsorshipCampaignInstances": {
        "hash": "f298d917da10223cb72241986821cd7c6be1c784de6b19eb0c7e0466725cc057",
        "query": "query SponsorshipCampaignInstances($query: SponsorshipInstanceQuery) {\n  sponsorshipInstances(query: $query) {\n    edges {\n      node {\n        ...sponsorshipCampaignInstance\n      }\n    }\n  }\n}\n"
    },
    "ThirdPartySponsorshipOffers": {
        "hash": "e2336bfbfb3be6ad8582cd1bce8082e0d557791b9cf636ae6a2db427f73753b4",
        "query": "query ThirdPartySponsorshipOffers($first: Int, $after: Cursor) {\n  thirdPartySponsorshipOffers(first: $first, after: $after) {\n    edges {\n      node {\n        brandName\n        brandImageURL\n        description\n        thirdPartyBrokerOfferURL\n        averageEarningsPerConvertedUser {\n          minorUnits\n          amount\n          currencyCode\n        }\n        basePay {\n          minorUnits\n          amount\n          currencyCode\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n  }\n}\n"
    },
    "MinimalTopNav_MinimalUser": {
        "hash": "05da9388cf5812fb2d1de51a457e52d84bf80c74d4dddafa257c1d687e4119ba",
        "query": "query MinimalTopNav_MinimalUser() {\n  currentUser {\n    id\n    displayName\n    profileImageURL(width: 70)\n    login\n  }\n}\n"
    },
    "ExternallyConfiguredSponsorshipCampaign": {
        "hash": "f2dc2300b66bc92e65b3cab883a3b30451643e745fe94bc45638281d3c1e96ab",
        "query": "query ExternallyConfiguredSponsorshipCampaign($campaignID: ID!) {\n  externallyConfiguredSponsorshipCampaign(id: $campaignID) {\n    id\n    brandLogoURL\n    brandColor\n    name\n    description\n    configurationState\n    products {\n      id\n      startsAt\n      endsAt\n      details {\n        ... on ChannelSkinProductDetails {\n          aboveChatImageURL\n          ctaURL\n          ctaText\n        }\n        ... on StreamerReadAdProductDetails {\n          scriptName\n          talkingPoints\n          guidelinesDo\n          guidelinesDont\n          ctaURL\n          ctaText\n        }\n        ... on SponsoredSubsProductDetails {\n          ctaURL\n          ctaText\n        }\n      }\n    }\n  }\n}\n"
    },
    "CreateSponsorshipAssetUpload": {
        "hash": "0e9be7e2784d854bab2a0c6d77744e37d0d90eefc8577d48bbb7ccffc10ba3e4",
        "query": "mutation CreateSponsorshipAssetUpload($input: CreateSponsorshipAssetUploadInput!) {\n  createSponsorshipAssetUpload(input: $input) {\n    configs {\n      fileName\n      assetURL\n      assetType\n      uploadURL\n    }\n  }\n}\n"
    },
    "SponsorshipsLearnQuery": {
        "hash": "aa1c021ba8df162efd0e5b05e4df1225ec362c9fce40b3f8ad4b5628c4e7e537",
        "query": "query SponsorshipsLearnQuery() {\n  currentUser {\n    id\n    login\n    roles {\n      isAffiliate\n      isPartner\n    }\n  }\n}\n"
    },
    "SubmitSponsorshipCampaignForReview": {
        "hash": "0236cc8fae6a5370cb880fb118fcd07f48b764d5cc6107dbc89140529eb6e1b3",
        "query": "mutation SubmitSponsorshipCampaignForReview($input: SubmitExternallyConfiguredSponsorshipCampaignForReviewInput!) {\n  submitExternallyConfiguredSponsorshipCampaignForReview(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateSponsorshipCampaign": {
        "hash": "467158cebc0c5bf4739b4d29e293b5b9dbb9ee55671203d4febefb890b5f91e4",
        "query": "mutation UpdateSponsorshipCampaign($input: UpdateSponsorshipCampaignInput!) {\n  updateSponsorshipCampaign(input: $input) {\n    sponsorshipCampaign {\n      id\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "CreateGameApplication": {
        "hash": "a8c6552484d1daafb8425b7c37b95eaf2da3823ffbfcc5f6d65a105637cb4451",
        "query": "mutation CreateGameApplication($input: CreateGameApplicationInput!) {\n  createGameApplication(input: $input) {\n    gameApplication {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DevGamesSearchAutocomplete": {
        "hash": "b2af8bc2b7931b73dd5650e27f7062a9bb9560b69110201df8bb3db81403af84",
        "query": "query DevGamesSearchAutocomplete($query: String!, $first: Int!) {\n  searchCategories(query: $query, first: $first) {\n    edges {\n      node {\n        id\n        giantBombID\n        name\n      }\n    }\n  }\n}\n"
    },
    "DevExtensionVersionPage__Manifests": {
        "hash": "bae8f136e27cf13bb644107e6c888f73b9f2438d8beaeeda7af8c2c47aaa6030",
        "query": "query DevExtensionVersionPage__Manifests($id: ID!, $version: String!) {\n  extensionManifest(id: $id, version: $version) {\n    ...extensionManifest\n  }\n}\n"
    },
    "OnsiteNotifications_DeleteNotification": {
        "hash": "676b421ff788bd3beb11404260be54aba9f0276b579dc23bf3ab07964ed947e0",
        "query": "mutation OnsiteNotifications_DeleteNotification($input: DeleteNotificationInput!) {\n  deleteNotification(input: $input) {\n    notification {\n      id\n    }\n  }\n}\n"
    },
    "OnsiteNotifications_ListNotifications": {
        "hash": "1fb2b64ef4e3b4324adde394a16d8d390bf5618c5a08eade3710cc538047f252",
        "query": "query OnsiteNotifications_ListNotifications($limit: Int, $cursor: Cursor, $language: String, $displayType: OnsiteNotificationDisplayType, $shouldLoadLastBroadcast: Boolean) {\n  currentUser {\n    id\n    lastBroadcast @include(if: $shouldLoadLastBroadcast) {\n      id\n    }\n    notifications(first: $limit, after: $cursor, language: $language, displayType: $displayType) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        ...onsiteNotificationsEdgeFragment\n      }\n    }\n  }\n}\n"
    },
    "OnsiteNotifications_MarkAllCreatorNotificationsAsRead": {
        "hash": "3602bfe6930f811fb0e702863a330c4c74a65445a76a224b008f3c60cdede550",
        "query": "mutation OnsiteNotifications_MarkAllCreatorNotificationsAsRead($input: MarkAllCreatorNotificationsAsReadInput!) {\n  markAllCreatorNotificationsAsRead(input: $input) {\n    hasSucceeded\n  }\n}\n"
    },
    "OnsiteNotifications_MarkAllViewerNotificationsAsRead": {
        "hash": "ba969c989a91287c4ce84ef3d6bfd062b3a152a5bc40cc7c4198d383e1cdb070",
        "query": "mutation OnsiteNotifications_MarkAllViewerNotificationsAsRead($input: MarkAllViewerNotificationsAsReadInput) {\n  markAllViewerNotificationsAsRead(input: $input) {\n    hasSucceeded\n  }\n}\n"
    },
    "OnsiteNotifications_ReadNotifications": {
        "hash": "2ab4772afe4af4b6d55183632d9336fd491764db67ac30bcd48e30d6695bcbb8",
        "query": "mutation OnsiteNotifications_ReadNotifications($input: ReadNotificationsInput!) {\n  readNotifications(input: $input) {\n    notifications {\n      id\n      isRead\n    }\n    count\n  }\n}\n"
    },
    "OnsiteNotifications_Summary": {
        "hash": "aed1304868be48e4a021ac16d46d719a84e3755e06b0b687fa7e8b87f3e37997",
        "query": "query OnsiteNotifications_Summary() {\n  currentUser {\n    id\n    notifications(capabilities: [HOMEPAGE, CHANNEL_PAGE, NOTIFICATION_SETTINGS_PAGE, BROADCASTER_DASHBOARD, BROWSE_GAME, EXTERNAL_LINK, GUEST_STAR, STREAM_STATS, WEB_ONLY, WHISPER_THREAD, FRIEND_REQUEST, STORY_CHANNEL_PAGE, STORY_STANDALONE]) {\n      summary {\n        unseenCount\n        lastSeenAt\n        viewerUnreadSummary {\n          unreadCount\n          lastReadAllAt\n        }\n        creatorUnreadSummary {\n          unreadCount\n        }\n      }\n    }\n  }\n}\n"
    },
    "OnsiteNotifications_View": {
        "hash": "684a12888366d2847877351c4b6642ba5ddd8e916a4656e1621d9925ebf4f676",
        "query": "mutation OnsiteNotifications_View() {\n  viewedNotifications {\n    user {\n      id\n      notifications(capabilities: [HOMEPAGE, CHANNEL_PAGE, NOTIFICATION_SETTINGS_PAGE, BROADCASTER_DASHBOARD, BROWSE_GAME, EXTERNAL_LINK, GUEST_STAR, STREAM_STATS, WEB_ONLY, WHISPER_THREAD, FRIEND_REQUEST, STORY_CHANNEL_PAGE, STORY_STANDALONE]) {\n        summary {\n          unseenCount\n          lastSeenAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "PersistentNotificationGiftChannelCard_UserInfo": {
        "hash": "f70c151be86606346a9c083ac3000873d550b32665490d53aa2279b2389c7df2",
        "query": "query PersistentNotificationGiftChannelCard_UserInfo($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    displayName\n    primaryColorHex\n    roles {\n      isPartner\n    }\n    subscriptionProducts {\n      id\n      emotes {\n        id\n        imageSource\n        token\n        assetType\n      }\n    }\n    stream {\n      id\n      tags {\n        ...tagFragment\n      }\n    }\n    description\n  }\n}\n"
    },
    "MomentDetailCallouts_MomentsBadge": {
        "hash": "1bf85e3a38b9f9aa72c41a005478de45b25611f574ae83dd92bd469a54ea89d0",
        "query": "query MomentDetailCallouts_MomentsBadge($channelID: ID!) {\n  currentChannelViewer(channelID: $channelID) {\n    id\n    earnedBadges {\n      id\n      setID\n      imageURL(size: QUADRUPLE)\n    }\n  }\n}\n"
    },
    "DashboardDMCAHint": {
        "hash": "1cc3752fc6a7f11c8f13f52ced672f4d01858ba3d848c4348b6461146062ec6f",
        "query": "query DashboardDMCAHint($id: ID!) {\n  user(id: $id) {\n    id\n    dmcaViolationCount\n  }\n}\n"
    },
    "ContentMomentsPage": {
        "hash": "115ac83bcd061abe83c716d62b1ac38bc12ff72d43a9476bfd7da97a213ddbc6",
        "query": "query ContentMomentsPage($channelID: ID!, $first: Int, $cursor: Cursor) {\n  channel(id: $channelID) {\n    id\n    communityMoments(first: $first, after: $cursor) {\n      edges {\n        cursor\n        node {\n          id\n          createdAt\n          claimCount\n          clip {\n            id\n            createdAt\n            durationSeconds\n            thumbnailURL(width: 260, height: 147)\n            title\n            slug\n            isPublished\n          }\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n      totalCount\n    }\n  }\n  broadcasterCommunityMomentDetails(channelID: $channelID) {\n    availableMoments\n  }\n}\n"
    },
    "PurchaseOrderSuccessSnackbar": {
        "hash": "a52fe7d3463896987f58b7542c5447405b819118ed2b445467282cffa2ca708c",
        "query": "query PurchaseOrderSuccessSnackbar($channelID: ID) {\n  currentUser {\n    id\n    bitsBalance\n    bitsOffers {\n      id\n      bits\n    }\n  }\n  channel(id: $channelID) {\n    id\n    name\n  }\n}\n"
    },
    "PurchaseOrderContextGetPurchaseOrder": {
        "hash": "da6150d55cafaebc93753da248023c1f25821062553aed8cce2059adfc5288dc",
        "query": "query PurchaseOrderContextGetPurchaseOrder($purchaseOrderID: ID!) {\n  currentUser {\n    id\n    purchaseOrder(id: $purchaseOrderID) {\n      ...purchaseOrder\n    }\n  }\n}\n"
    },
    "PurchaseOrderContext_PurchaseOffer": {
        "hash": "c12f76fa6398b8e9ba3ab8f7b42686a1331ee4530a2014aa2ea7451381deafe1",
        "query": "mutation PurchaseOrderContext_PurchaseOffer($input: PurchaseOfferInput!) {\n  purchaseOffer(input: $input) {\n    purchaseOrder {\n      ...purchaseOrder\n    }\n    error\n  }\n}\n"
    },
    "UpdateQuestCreatorCampaignSettings": {
        "hash": "578a350ec9f9ffff929f7b31b280a7259111071bb41eb49b561c53b01b638d73",
        "query": "mutation UpdateQuestCreatorCampaignSettings($userID: ID!, $rewardCampaignID: ID!, $isHidden: Boolean!) {\n  updateRewardCampaignHidden(input: {userID: $userID, rewardCampaignID: $rewardCampaignID, isHidden: $isHidden}) {\n    rewardCampaignChannelSettings {\n      rewardCampaignsHidden {\n        rewardCampaignID\n        isHidden\n      }\n    }\n  }\n}\n"
    },
    "DevUserListEditor": {
        "hash": "119de7e7302931c8cab46c30ae2b0adfcb93b06fd51d649817f3b9d8586b55fb",
        "query": "fragment devListEditorUser on User {\n  id\n  displayName\n  login\n  profileImageURL(width: 70)\n}\n\nquery DevUserListEditor($ids: [ID!]) {\n  users(ids: $ids) {\n    ...devListEditorUser\n  }\n}\n"
    },
    "DevUserItemForID": {
        "hash": "32d5c2a8b84bbb19300836873d3117764419600bd3b02324dc85e9eb4de4ce1a",
        "query": "query DevUserItemForID($userID: ID!) {\n  currentUser {\n    id\n  }\n  user(id: $userID) {\n    id\n    login\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "BulkAllowlistExtensionUsers": {
        "hash": "3d183f7b0b8bc5c05e715faa8ce6a168931dc01e933dee412f2bf9b18c5e6763",
        "query": "fragment allowlistExtensionUser on User {\n  id\n  login\n  profileImageURL(width: 50)\n  displayName\n}\n\nquery BulkAllowlistExtensionUsers($ids: [ID!], $logins: [String!]) {\n  users(ids: $ids) {\n    ...allowlistExtensionUser\n  }\n  users(logins: $logins) {\n    ...allowlistExtensionUser\n  }\n}\n"
    },
    "UpdateQuestCampaignAllowlist": {
        "hash": "88240532970188025502ead79eb0c903a41efd32fda855497827a0e9f9399621",
        "query": "mutation UpdateQuestCampaignAllowlist($input: UpdateQuestCampaignAllowlistInput!) {\n  updateQuestCampaignAllowlist(input: $input) {\n    questCampaign {\n      ...devQuestCampaignFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "UpdateQuestCampaignTestViewers": {
        "hash": "2fa89188fcd306751edaabb7a8d7dc0a03413a1688e4417ca23c38eedd766871",
        "query": "mutation UpdateQuestCampaignTestViewers($input: UpdateQuestCampaignTestViewersInput!) {\n  updateQuestCampaignTestViewers(input: $input) {\n    questCampaign {\n      ...devQuestCampaignFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "UpdateQuestCampaignSettings": {
        "hash": "8f30f231a54fbe5ac41a2ad08c86ed6c337a62f50e9f3834c622d352899eb5fd",
        "query": "mutation UpdateQuestCampaignSettings($input: UpdateQuestCampaignSettingsInput!) {\n  updateQuestCampaignSettings(input: $input) {\n    questCampaign {\n      ...devQuestCampaignFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "UpdateQuestCampaignStatus": {
        "hash": "1351b67ae418d0a2f4a92cb0b34fcd61a45079abe96b35ba2617622e680576b6",
        "query": "mutation UpdateQuestCampaignStatus($input: UpdateQuestCampaignStatusInput!) {\n  updateQuestCampaignStatus(input: $input) {\n    questCampaign {\n      ...devQuestCampaignFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "SetGameDropAccountLinkClient": {
        "hash": "1a808bcbe7cac86b729cedf5b235eb4001ab56b8ed2fcbb98ebe2d8b7d90d1fc",
        "query": "mutation SetGameDropAccountLinkClient($input: SetGameDropAccountLinkClientInput!) {\n  setGameDropAccountLinkClient(input: $input) {\n    game {\n      id\n      dropAccountLink {\n        clientID\n        updatedAt\n      }\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "devQuestCampaignDetailsPageOrgGameClientIDQuery": {
        "hash": "bee0eaac75c463204be2bc556b884e0931f4eb8b3459783cbab062e3c84ddfdd",
        "query": "query devQuestCampaignDetailsPageOrgGameClientIDQuery($id: ID!) {\n  organization(id: $id) {\n    id\n    games {\n      id\n      dropAccountLink {\n        clientID\n      }\n    }\n  }\n}\n"
    },
    "DeleteQuestRewardGroup": {
        "hash": "1c7c6ef7957d51bee65db1d278d2bc388b92bc2034b453e100ef442b0945760f",
        "query": "mutation DeleteQuestRewardGroup($input: DeleteQuestRewardGroupInput!) {\n  deleteQuestRewardGroup(input: $input) {\n    error {\n      message\n      code\n    }\n  }\n}\n"
    },
    "UpdateQuestRewardGroup": {
        "hash": "a6fbae3284024236c8eb3a0a3a30143b15a6b50516fb25444b3bb5e172f8cd13",
        "query": "mutation UpdateQuestRewardGroup($input: UpdateQuestRewardGroupInput!) {\n  updateQuestRewardGroup(input: $input) {\n    rewardGroupMetadata {\n      ...devQuestRewardGroupMetadataFragment\n    }\n    error {\n      message\n      code\n    }\n  }\n}\n"
    },
    "GetQuestCampaignWithRewardGroups": {
        "hash": "41a2a94de9a67cbf1bc3c341850152811fcb800bc79f30e4ccf0b0d833ed6c53",
        "query": "query GetQuestCampaignWithRewardGroups($campaignID: ID!) {\n  questCampaign(id: $campaignID) {\n    redemptionURL\n    description\n    detailsURL\n    endsAt\n    id\n    name\n    owner {\n      id\n      name\n    }\n    startsAt\n    status\n    testViewers {\n      id\n    }\n    channelAllowlist {\n      id\n    }\n    game {\n      id\n      name\n      boxArtURL\n    }\n    rewardGroups {\n      ...devQuestRewardGroupFragment\n    }\n    imageURL\n  }\n}\n"
    },
    "CreateQuestRewardGroup": {
        "hash": "4229b7e595ad1ae7ea0ad3c169daf51497e386154873398388d6297d4ea78d49",
        "query": "mutation CreateQuestRewardGroup($input: CreateQuestRewardGroupInput!) {\n  createQuestRewardGroup(input: $input) {\n    rewardGroupMetadata {\n      ...devQuestRewardGroupMetadataFragment\n    }\n    error {\n      message\n      code\n    }\n  }\n}\n"
    },
    "GenerateReportURL": {
        "hash": "da9d9a2b55132c33c9cae7c73ca70146a182d1f0d887fcb7d824af098a53bcf4",
        "query": "mutation GenerateReportURL($input: GenerateQuestReportURLInput!) {\n  generateQuestReportURL(input: $input) {\n    url\n    updatedAt\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DropV3OrganizationGames": {
        "hash": "9fe5ce77890be50240550c11a923ba4d3b9c34c9ca21a09b258b73063da645ae",
        "query": "query DropV3OrganizationGames($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    games {\n      id\n      name\n      displayName\n      boxArtURL(height: 40, width: 29)\n      boxArtURL(height: 54, width: 41)\n      dropAccountLink {\n        clientID\n        updatedAt\n      }\n    }\n  }\n}\n"
    },
    "QuestAssetUpload": {
        "hash": "9120912b697a138ec639e4f5c0eb45f432c90bd7f1747dab1e9113b0954e1f6e",
        "query": "mutation QuestAssetUpload($input: CreateQuestAssetUploadInput!) {\n  createQuestAssetUpload(input: $input) {\n    upload {\n      id\n      url\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "GetQuestRewardsByOrg": {
        "hash": "743c3f2ba64edfe6a4524725e6892c6cbd670d8aa0a9b64a1de1fb5e9cdae053",
        "query": "query GetQuestRewardsByOrg($orgID: ID!) {\n  organization(id: $orgID) {\n    id\n    quests {\n      rewards {\n        ...devQuestRewardFragment\n      }\n    }\n  }\n}\n"
    },
    "collabViewCountStreamManager": {
        "hash": "4a58584ce5dd59ca8bfce816c8fa06dab03a0dab651dea3530e5294a258a4135",
        "query": "query collabViewCountStreamManager($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      collaborationViewersCount\n    }\n  }\n}\n"
    },
    "FollowersTileQuery": {
        "hash": "c4fff1bc2d75da071bdb8840c0c5bc887defd226a13fad562d1566e6094ff8a3",
        "query": "query FollowersTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    followers {\n      totalCount\n    }\n  }\n}\n"
    },
    "PrerollFreeTileQuery": {
        "hash": "4f2b9c92caba2ef3b21799032f72742a47c82c04557bffa5c5a98a726443fd7f",
        "query": "query PrerollFreeTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    prerollFreeTimeSeconds\n    adProperties {\n      disablePrerollsAbility {\n        hasDisablePrerollsAbilityAccess\n        hasDisablePrerollsAbilityEnabled\n      }\n    }\n  }\n}\n"
    },
    "SinceLastAdTileQuery": {
        "hash": "15f34fa9be9f119d030d0df33770f8f7fac73534f583a9b562dcdd6030c3c089",
        "query": "query SinceLastAdTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      lastTriggeredAt\n    }\n  }\n}\n"
    },
    "SubsTileQuery": {
        "hash": "165fb81c9e3ccae1e74d68b31669691f57755405a50ce2dceabc9d122e48e2cf",
        "query": "query SubsTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    subscriberScore {\n      countBreakdown {\n        count\n      }\n      current\n      next\n    }\n  }\n}\n"
    },
    "ViewersTileQuery": {
        "hash": "cdca33d97e415f1351cfe20e5a9fd13fd5a676c699dc3da018c627dd062724c2",
        "query": "query ViewersTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      viewersCount\n    }\n  }\n}\n"
    },
    "LegacyViewsTileQuery": {
        "hash": "9f3a6edb6ac60675cffb6ddf39bfd163af3f39e4c5968f9e38dab3d14abf611c",
        "query": "query LegacyViewsTileQuery($login: String!) {\n  user(login: $login) {\n    id\n    profileViewCount\n  }\n}\n"
    },
    "ViewsTileQuery": {
        "hash": "159e028e68653f7ebb8bcea471af18fe5d097046de03a9d0aa6b4e08624b6b8d",
        "query": "query ViewsTileQuery($login: String!, $startAt: Time!, $endAt: Time!) {\n  user(login: $login) {\n    id\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: 1) {\n      items {\n        liveViewsString\n      }\n    }\n  }\n}\n"
    },
    "TileAdPermissionsQuery": {
        "hash": "5dbd42058809ebaa5681d00ab2ddffe1cf9b7b8d3388fbb5f55ba3486556e389",
        "query": "query TileAdPermissionsQuery($login: String!) {\n  user(login: $login) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n  }\n}\n"
    },
    "StreamingToolsClientAuthorization": {
        "hash": "ceecdb81595bb7fa6271061136a8941d3535ddf5651a1265473578d8fa53e604",
        "query": "query StreamingToolsClientAuthorization() {\n  currentUser {\n    id\n    clientAuthorizations {\n      clientID\n      scopes\n    }\n  }\n}\n"
    },
    "StatsWidget": {
        "hash": "8b204da19470f1107053198aaf980e7989920f464e196533e0e63feb7e2f6a66",
        "query": "query StatsWidget($login: String!, $isLive: Boolean!) {\n  user(login: $login) {\n    id\n    stream @include(if: $isLive) {\n      id\n      clipCount\n      viewersCount\n      createdAt\n    }\n    profileViewCount\n    followers {\n      totalCount\n    }\n    subscriberScore {\n      countBreakdown {\n        count\n      }\n      current\n      next\n    }\n  }\n}\n"
    },
    "SportRadarWidgetAccess": {
        "hash": "e094944001cae84f53a91ad22eb07c1d9a06d42b1c57585fa71740aaf339ef96",
        "query": "query SportRadarWidgetAccess() {\n  currentUser {\n    id\n    roles {\n      isStaff\n      isAffiliate\n      isPartner\n    }\n  }\n}\n"
    },
    "IncomingRequests": {
        "hash": "87bed25076a35ee1c473be31afc4f74643f765ef88a08981f9e3183208eb5feb",
        "query": "query IncomingRequests($channelID: ID!, $first: Int!, $after: Cursor, $order: BansSharingRequestsSortOrder) {\n  channel(id: $channelID) {\n    id\n    bansSharingRelationships {\n      incomingRequests(first: $first, after: $after, options: {order: $order}) {\n        totalCount\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n        edges {\n          cursor\n          node {\n            ...bansSharingRequest\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateBansSharingSettings": {
        "hash": "8b55f1b92554c54a47ece7adbca34e235a478df05e3721998ca134420614b5f7",
        "query": "mutation UpdateBansSharingSettings($input: UpdateBansSharingSettingsInput!) {\n  updateBansSharingSettings(input: $input) {\n    error {\n      code\n    }\n    settings {\n      ...bansSharingSettings\n    }\n  }\n}\n"
    },
    "CreateBansSharingRequest": {
        "hash": "2d638c82097f05e88897c7c71d74f72944c650d1bd0cd12a87fbd9016e41f3f8",
        "query": "mutation CreateBansSharingRequest($input: CreateBansSharingRequestInput!, $channelID: ID!) {\n  createBansSharingRequest(input: $input) {\n    bansSharingRequest {\n      ...bansSharingRequest\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveBansSharingRequests": {
        "hash": "64ff7906a2f7734f1eb5299fafca0d63bb51c98dd9036e8dc739beb918dd9d63",
        "query": "mutation RemoveBansSharingRequests($input: RemoveBansSharingRequestsInput!, $channelID: ID!) {\n  removeBansSharingRequests(input: $input) {\n    bansSharingRequests {\n      ...bansSharingRequest\n    }\n  }\n}\n"
    },
    "ApproveBansSharingRequests": {
        "hash": "6758e4210e7e71e6cbc24f6e4dbe42ccded8edc94fb25d3cf9eb5f037721aa35",
        "query": "mutation ApproveBansSharingRequests($input: ApproveBansSharingRequestsInput!, $channelID: ID!) {\n  approveBansSharingRequests(input: $input) {\n    updatedRequests {\n      ...bansSharingRequest\n    }\n  }\n}\n"
    },
    "DenyBansSharingRequests": {
        "hash": "e1ff853a1dd01900dc52b16f4e767c4aa0f8af2c49777b73d4f721f6643eb3c4",
        "query": "mutation DenyBansSharingRequests($input: DenyBansSharingRequestsInput!, $channelID: ID!) {\n  denyBansSharingRequests(input: $input) {\n    updatedRequests {\n      ...bansSharingRequest\n    }\n  }\n}\n"
    },
    "ExtensionQuickAction": {
        "hash": "881f3438ea5704453666b71a06c2808a6d205d840cc5bf985483c72e8a319c02",
        "query": "query ExtensionQuickAction($extensionClientID: ID!, $version: String!) {\n  extension(id: $extensionClientID, version: $version) {\n    id\n    name\n    iconURLs {\n      square100\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignDetail": {
        "hash": "20dbbd30b8dbabdeb7823488f326f2fa108d6772793450e50d71a13dce697608",
        "query": "query DevBountyBoardDashboard_CampaignDetail($campaignID: ID!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    bountyCampaigns(campaignID: $campaignID) {\n      edges {\n        cursor\n        node {\n          ...devBountyCampaignDetail\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignFunnel": {
        "hash": "a28df35f584a0e32b38ae05bb99e90290978a123ad4a32f3d304694adc06923d",
        "query": "query DevBountyBoardDashboard_CampaignFunnel($campaignID: ID!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    bountyCampaigns(campaignID: $campaignID) {\n      edges {\n        cursor\n        node {\n          ...devBountyFunnel\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignReach": {
        "hash": "e79a39e5d3f6d8b2d1afd59b2809730f71ca21f5b85bf5d60d5ec382e8cc6137",
        "query": "query DevBountyBoardDashboard_CampaignReach($countries: [String!]!, $gameNames: [String!]!, $streamLengthSeconds: Int!, $targetVarietyBroadcasters: Boolean!, $targetAllGames: Boolean!, $targetAllCountries: Boolean!, $targetAllBroadcasters: Boolean!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    estimatedBroadcasterViewerReach(countries: $countries, gameNames: $gameNames, streamLengthSeconds: $streamLengthSeconds, targetVarietyBroadcasters: $targetVarietyBroadcasters, targetAllGames: $targetAllGames, targetAllCountries: $targetAllCountries, targetAllBroadcasters: $targetAllBroadcasters) {\n      broadcasterPool {\n        min\n        max\n      }\n      minutesWatched {\n        min\n        max\n      }\n      viewerPool {\n        min\n        max\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignStats": {
        "hash": "7be2ea165ea52278af5361827be290ae3c664f6e83a71af6c8a9004d8290e259",
        "query": "query DevBountyBoardDashboard_CampaignStats($campaignID: ID!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    bountyCampaigns(campaignID: $campaignID) {\n      edges {\n        cursor\n        node {\n          ...devBountyStats\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignSummary": {
        "hash": "7c76b8755a17e1547ff197fc5fc1929238e0c9ce77cd2f9fa6fba2630cc8810a",
        "query": "query DevBountyBoardDashboard_CampaignSummary($campaignID: ID!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    bountyCampaigns(campaignID: $campaignID) {\n      edges {\n        cursor\n        node {\n          ...devBountyCampaignSummary\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_UserCompanyCanAccessAllGames": {
        "hash": "7926a17f5565c25a4c649c158ba38f523e8c7a1fcb43cb935d7df0ee7e763d9a",
        "query": "query DevBountyBoardDashboard_UserCompanyCanAccessAllGames($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    brandPortalSettings {\n      canAccessAllGames\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CompanyGameList": {
        "hash": "174e0e4adc3541870024cebdb03cbaa91d2d2784804aca86551c317bb6525131",
        "query": "query DevBountyBoardDashboard_CompanyGameList($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    games(includeBountyBoardGames: true) {\n      ...devCompanyGame\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CompanyGame": {
        "hash": "bccc1f2cac15b31573be8a1fb5fa1ceaeb549116566ff5494b7ecb132b7d2510",
        "query": "query DevBountyBoardDashboard_CompanyGame($id: ID) {\n  game(id: $id) {\n    ...devCompanyGame\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CompanyInfo": {
        "hash": "40799b1a99fb2f7ec1fba68acec0e9dafa7fb88327eb0e784e5dac538c0a5820",
        "query": "query DevBountyBoardDashboard_CompanyInfo($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    name\n    games {\n      id\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isStaff\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CreateBountyCampaign": {
        "hash": "081d52ce3b4f515a7393aee8da72ed82ecb14902bbe3973f3d33f495cc15f21f",
        "query": "mutation DevBountyBoardDashboard_CreateBountyCampaign($input: CreateBountyCampaignInput!) {\n  createBountyCampaign(input: $input) {\n    campaign {\n      id\n      availablePlatforms\n      endAt\n      startAt\n      title\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CreateCampaignUploadConfig": {
        "hash": "122f7e6602e93d7cde8a60f7d6336d975f204f337756a4cf0b9a0f474d1ae4fc",
        "query": "mutation DevBountyBoardDashboard_CreateCampaignUploadConfig($input: CreateBountyCampaignUploadConfigInput!) {\n  createBountyCampaignUploadConfig(input: $input) {\n    imageID\n    uploadID\n    uploadURL\n  }\n}\n"
    },
    "SearchStreams": {
        "hash": "5024e664b22f6ff1f6817e4b8a0e044c3654cebcc5e2f050742bf6cb780af48d",
        "query": "query SearchStreams($userQuery: String!) {\n  searchStreams(userQuery: $userQuery) {\n    edges {\n      ...SearchStreamEdgeFragment\n    }\n  }\n}\n\nfragment SearchStreamEdgeFragment on SearchStreamEdge {\n  node {\n    id\n    game {\n      id\n      name\n    }\n    broadcaster {\n      id\n      login\n      displayName\n      profileImageURL(width: 50)\n    }\n    viewersCount\n    previewImageURL(width: 320, height: 180)\n  }\n}\n"
    },
    "QuickActions_HostChannelControl_HostRecommendations": {
        "hash": "d8763681e67f9c2c6a9c0cc775c1ccef29bd8d13cea72358682b8ad09573c9d0",
        "query": "query QuickActions_HostChannelControl_HostRecommendations($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    hostRecommendations {\n      ...HostRecommendationsFragment\n    }\n  }\n}\n\nfragment HostRecommendationsFragment on User {\n  id\n  login\n  displayName\n  profileImageURL(width: 50)\n  stream {\n    id\n    viewersCount\n    previewImageURL(width: 320, height: 180)\n    game {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "CancelRaid": {
        "hash": "1636625356148745831b06a1f053ba517e54eaa2207eec1f7593d9f6a019a964",
        "query": "mutation CancelRaid($input: CancelRaidInput!) {\n  cancelRaid(input: $input) {\n    raid {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateRaid": {
        "hash": "8ef7111c504e3aa5cfb0cee09867da41c55a03499b26ff2a14249411dfb95f31",
        "query": "mutation CreateRaid($input: CreateRaidInput!) {\n  createRaid(input: $input) {\n    raid {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GoRaid": {
        "hash": "c12554ea026b779694a7282b1133a277ef4b832edcf62cf3ff7d957844844992",
        "query": "mutation GoRaid($input: GoRaidInput!) {\n  goRaid(input: $input) {\n    raid {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "JoinRaid": {
        "hash": "aaac06e76eb1e51b408e77117c78072d269c1675418120bb8d51f5ac76da51e9",
        "query": "mutation JoinRaid($input: JoinRaidInput!) {\n  joinRaid(input: $input) {\n    raidID\n  }\n}\n"
    },
    "LeaveRaid": {
        "hash": "b9e4bc7510a328d21a3c586d2cd0e25b7dd81e760e3e41d3cb41620fed0e8eaf",
        "query": "mutation LeaveRaid($input: LeaveRaidInput!) {\n  leaveRaid(input: $input) {\n    raidID\n  }\n}\n"
    },
    "addAutohostChannel": {
        "hash": "15912a605e9910d7374d62633f4f21d6a87e36e9c51d9504dab766a55732bfcf",
        "query": "mutation addAutohostChannel($input: AddAutohostChannelsInput!) {\n  addAutohostChannels(input: $input) {\n    user {\n      id\n      autohostChannels {\n        nodes {\n          id\n          login\n          displayName\n          profileImageURL(width: 300)\n        }\n      }\n    }\n  }\n}\n"
    },
    "removeAutohostChannel": {
        "hash": "a73404a1a20c136cb7f90f454709e6dffe25348fc149d49af96f1647901dfd87",
        "query": "mutation removeAutohostChannel($input: RemoveAutohostChannelsInput!) {\n  removeAutohostChannels(input: $input) {\n    user {\n      id\n      autohostChannels {\n        nodes {\n          id\n          login\n          displayName\n          profileImageURL(width: 300)\n        }\n      }\n    }\n  }\n}\n"
    },
    "setAutohostChannels": {
        "hash": "59912e8e0fbc2bfa55846bb72ae99615094da43cacb24b8cdf4ff97d189e02a7",
        "query": "mutation setAutohostChannels($input: SetAutohostChannelsInput!) {\n  setAutohostChannels(input: $input) {\n    user {\n      id\n      autohostChannels {\n        nodes {\n          id\n          login\n          displayName\n          profileImageURL(width: 300)\n        }\n      }\n    }\n  }\n}\n"
    },
    "AutohostListPage_ListItems": {
        "hash": "c02ee36a474f40ba413b3726c55e463f990891751d20e7cd2e4c88b39aaf103c",
        "query": "query AutohostListPage_ListItems($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    autohostChannels {\n      nodes {\n        ...hostUser\n      }\n    }\n  }\n}\n"
    },
    "AutohostList_SearchUsers": {
        "hash": "9253e3afcf7bcb124bf07fd77eb3ca16f5f05f5d7305f0478562abc5d8433a37",
        "query": "query AutohostList_SearchUsers($userQuery: String!) {\n  searchUsers(userQuery: $userQuery) {\n    edges {\n      ...AutohostListSearchUserEdgeFragment\n    }\n  }\n}\n\nfragment AutohostListSearchUserEdgeFragment on SearchUserEdge {\n  node {\n    id\n    login\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "AutohostListPage_SearchUserResults": {
        "hash": "148b147130f3c6317e7ba675be23e3a7da0db5e31551309cc017d018e389f583",
        "query": "query AutohostListPage_SearchUserResults($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    hostRecommendations {\n      ...hostUser\n    }\n    autohostChannels {\n      nodes {\n        ...hostUser\n      }\n    }\n  }\n}\n"
    },
    "AdvancedSettingsSectionSubsAdFree_UpdateSubscriptionProduct": {
        "hash": "3dccc29616189aa03eb2dd748210df0b7d6b435a291995f173be89766490faee",
        "query": "mutation AdvancedSettingsSectionSubsAdFree_UpdateSubscriptionProduct($input: UpdateSubscriptionProductInput!) {\n  updateSubscriptionProduct(input: $input) {\n    product {\n      id\n      hasAdFree\n    }\n  }\n}\n"
    },
    "AdvancedSettingsSectionSubsAdFree_Query": {
        "hash": "6ea07eecef388d8a840176d47da9ab8ec3bdd7024563f0414e5452f92a72c393",
        "query": "query AdvancedSettingsSectionSubsAdFree_Query($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      hasAdFree\n    }\n  }\n}\n"
    },
    "UpdateAdsManagerSettings": {
        "hash": "3dad2913119044e38455f98d9236c3f981fbe56a1921749742042d73d1476b94",
        "query": "mutation UpdateAdsManagerSettings($input: SetChannelAdScheduleInput!) {\n  setChannelAdSchedule(input: $input) {\n    targetChannelID\n    isAdScheduleEnabled\n    intervalSeconds\n    durationSeconds\n    isOptimizedAdScheduleEnabled\n    isAutoSnoozeEnabled\n    isAdReminderEnabled\n    isChatReminderEnabled\n    isModChatReminderEnabled\n    adReminderTimeSeconds\n    startDelaySeconds\n  }\n}\n"
    },
    "AdsManagerSettings": {
        "hash": "e2ecf340181c3cad9f14703bc0c762b39d136e8ab82add9ab32b85825f6c6268",
        "query": "query AdsManagerSettings($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        ...adScheduleSettings\n      }\n    }\n  }\n}\n\nfragment allAdScheduleFields on AdScheduleConfig {\n  desiredSeconds\n  minSeconds\n  maxSeconds\n}\n\nfragment adScheduleSettings on Density {\n  isOptimizedAdScheduleEnabled\n  isAdScheduleEnabled\n  isAutoSnoozeEnabled\n  interval {\n    ...allAdScheduleFields\n  }\n  duration {\n    ...allAdScheduleFields\n  }\n  startDelay {\n    ...allAdScheduleFields\n  }\n  reminder {\n    isEnabled\n    seconds\n    maxSeconds\n    isChatReminderEnabled\n    isModChatReminderEnabled\n  }\n}\n"
    },
    "EmailVerificationBanner_email": {
        "hash": "cfa7e232670796460b3565dd2937c170b7024c5b83f31fd3f47bd504afd2b653",
        "query": "query EmailVerificationBanner_email($opaqueID: ID!, $userID: ID!, $withUser: Boolean!) {\n  verificationRequest(opaqueID: $opaqueID) {\n    address\n    status\n  }\n  user(id: $userID) @include(if: $withUser) {\n    id\n    displayName\n  }\n}\n"
    },
    "RegenerateVerificationCode": {
        "hash": "97d604a1fc742851c56c764b424cf27786b235b556332aab4ef33c864943b7b2",
        "query": "mutation RegenerateVerificationCode($input: RegenerateVerificationCodeInput!) {\n  regenerateVerificationCode(input: $input) {\n    request {\n      status\n    }\n  }\n}\n"
    },
    "VerifyEmail": {
        "hash": "6208d2c3f2fe5e0b0c1f54e7ec71657050f3db453a0c1ed32dc726092f0e2adb",
        "query": "mutation VerifyEmail($input: VerifyContactMethodInput!) {\n  verifyContactMethod(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "LoyaltyBadges_CreateBadgeFlair": {
        "hash": "1c7bbe0920a1705a679e23f362255375664bd0c180b3652779d4af1d8b72cb03",
        "query": "mutation LoyaltyBadges_CreateBadgeFlair($input: CreateBadgeFlairInput!) {\n  createBadgeFlair(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "LoyaltyBadges_SetCreatorBadgeFlair": {
        "hash": "205bb9bd2b26a0f872cf4ce74b4efbfc2288e330af8fa81e749d00c4c2951bdc",
        "query": "mutation LoyaltyBadges_SetCreatorBadgeFlair($input: SetCreatorBadgeFlairInput!) {\n  setCreatorBadgeFlair(input: $input) {\n    channel {\n      id\n      creatorBadgeFlair {\n        setting\n        assets {\n          ...badgeFlairAsset\n        }\n      }\n    }\n  }\n}\n"
    },
    "LoyaltyBadges_CreateLoyaltyBadge": {
        "hash": "6d558d609ea9aefff02f94d1808f3a75ca350fdfe908d6dbe9e78e731540ff8a",
        "query": "mutation LoyaltyBadges_CreateLoyaltyBadge($input: CreateLoyaltyBadgeInput!) {\n  createLoyaltyBadge(input: $input) {\n    badge {\n      ...loyaltyBadge\n    }\n    errorCode\n  }\n}\n"
    },
    "LoyaltyBadges_DeleteLoyaltyBadge": {
        "hash": "770141a451b8d229d94f8d10cc028238d3a3e84be16806b4ad3c95ef44933f67",
        "query": "mutation LoyaltyBadges_DeleteLoyaltyBadge($input: DeleteLoyaltyBadgeInput!) {\n  deleteLoyaltyBadge(input: $input) {\n    badge {\n      ...loyaltyBadge\n    }\n  }\n}\n"
    },
    "LoyaltyBadgesPage_Query": {
        "hash": "5a60c32253830b12145af8b3269779aad1c290660d1927563cfc9f793c17f281",
        "query": "query LoyaltyBadgesPage_Query($login: String!) {\n  user(login: $login) {\n    id\n    loyaltyBadges {\n      ...loyaltyBadge\n    }\n    channel {\n      id\n      creatorBadgeFlair {\n        setting\n        assets {\n          ...badgeFlairAsset\n        }\n      }\n    }\n    roles {\n      isAffiliate\n      isPartner\n    }\n  }\n}\n"
    },
    "LoyaltyBadgesCurrentSection_Query": {
        "hash": "4d6335579962caa337601c239a09428642de543e1b8f5526f2b90bf0b2c19986",
        "query": "query LoyaltyBadgesCurrentSection_Query($channelID: ID, $login: String!) {\n  user(login: $login) {\n    id\n    relationship(targetUserID: $channelID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        daysRemaining\n        months\n      }\n    }\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "LoyaltyBadges_CreateLoyaltyBadgeUploadConfig": {
        "hash": "33536598f909aeb3d7f4c34db370ae58c5c4f1e420aaeeb6829666dfde1e72c3",
        "query": "mutation LoyaltyBadges_CreateLoyaltyBadgeUploadConfig($input: CreateLoyaltyBadgeUploadConfigInput!) {\n  createLoyaltyBadgeUploadConfig(input: $input) {\n    uploadConfig {\n      ...loyaltyBadgeUploadConfig\n    }\n    errorCode\n  }\n}\n"
    },
    "LoyaltyBadgesManageSection_Query": {
        "hash": "77b8a5b6e24d175aed5e9ab6630afd4187799c5f546c0f5626d3a690aaa2ff56",
        "query": "query LoyaltyBadgesManageSection_Query($channelID: ID, $login: String!) {\n  user(login: $login) {\n    id\n    hasBadgesTimedOut\n    relationship(targetUserID: $channelID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        daysRemaining\n        months\n      }\n    }\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "ExtensionLiveConfigureModal": {
        "hash": "9bea54851986cccf0e2e09c520f3af3ba9b974c795873958bf17226a87277080",
        "query": "query ExtensionLiveConfigureModal($userLogin: String!) {\n  user(login: $userLogin) {\n    id\n    installedExtensions {\n      id\n      activationConfig {\n        anchor\n      }\n      extension {\n        id\n        name\n        iconURLs {\n          square100\n        }\n      }\n    }\n  }\n}\n"
    },
    "AddAutoBannerTerm": {
        "hash": "90cc3bf09b0c158aa9491da250b0e0d23bacaec2e6ded64a670a4c70f9afec2f",
        "query": "mutation AddAutoBannerTerm($input: AddAutoBanTermInput!) {\n  addAutoBanTerm(input: $input) {\n    term {\n      ...autoBannerTerm\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "AutoBannerTerms": {
        "hash": "ea1e8a3e966072b435b54a95224d115d96188cdff95fe1eecc861dcc6f9ae5c6",
        "query": "query AutoBannerTerms($channelID: ID!) {\n  channelShieldMode(channelID: $channelID) {\n    id\n    autoBanner {\n      terms {\n        ...autoBannerTerm\n      }\n    }\n  }\n}\n"
    },
    "RemoveAutoBannerTerm": {
        "hash": "60dc7b767a76cc651578b700e30b2fc77bbd80b4de576bccc8529657f77c64cb",
        "query": "mutation RemoveAutoBannerTerm($input: DeleteAutoBanTermInput!) {\n  deleteAutoBanTerm(input: $input) {\n    id\n  }\n}\n"
    },
    "ShieldModeState": {
        "hash": "72df93c53aea3d7b1d78ea2bd4df605efea6f9308542b2a9a779e39881509c83",
        "query": "query ShieldModeState($channelID: ID!) {\n  channelShieldMode(channelID: $channelID) {\n    id\n    isActive\n    isShortcutEnabled\n    lastEnabledAt\n    lastEnabledBy {\n      ...shieldModeUserFragment\n    }\n    lastDisabledAt\n    lastDisabledBy {\n      ...shieldModeUserFragment\n    }\n  }\n}\n"
    },
    "UpdateShieldModeActive": {
        "hash": "50ea7ba90e693fc17e9e2cfcc965cba9ae98ad6155a2656ee6760cb9f90a9533",
        "query": "mutation UpdateShieldModeActive($input: SetChannelShieldModeStatusInput!) {\n  setChannelShieldModeStatus(input: $input) {\n    isActive\n    lastEnabledAt\n    lastEnabledBy {\n      ...shieldModeUserFragment\n    }\n    lastDisabledAt\n    lastDisabledBy {\n      ...shieldModeUserFragment\n    }\n    error\n  }\n}\n"
    },
    "ShieldModeUser": {
        "hash": "8f2050c45c9b4e2a407dbb6580ba3723e262dc7c797a665b065c6aaea1da9e18",
        "query": "query ShieldModeUser($id: ID!) {\n  user(id: $id) {\n    ...shieldModeUserFragment\n  }\n}\n"
    },
    "DSAWizard_Mutation": {
        "hash": "51ee7558165964276385cc69228f5fc15237420fb5e490fb3394a680a46e5a50",
        "query": "mutation DSAWizard_Mutation($input: SubmitAdFeedbackInput!) {\n  submitAdFeedback(input: $input) {\n    error\n  }\n}\n"
    },
    "DSAWizard_Query": {
        "hash": "33e6e963e993a641e246e4e4eb74e5fe743b264d70d2cafeffe9fa3adde95547",
        "query": "query DSAWizard_Query($adInput: AdInput!, $clientInput: ClientInput!, $geoCode: String) {\n  adIdentity(adIdentityInput: {adInput: $adInput, clientInput: $clientInput, geoCode: $geoCode}) {\n    advertiserName\n    payerName\n    isIdentityVerified\n  }\n}\n"
    },
    "Copyright_Clips": {
        "hash": "a1123dc1c915c972b59e03795c9b0edc892613cb574c1d383b23f5233e471f44",
        "query": "query Copyright_Clips($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    broadcaster {\n      id\n    }\n    url\n    durationSeconds\n    thumbnailURL\n    createdAt\n    viewCount\n    title\n  }\n}\n"
    },
    "Copyright_LiveStream": {
        "hash": "512ebbc718bf6ac1c9f163aff17ae01a8a49fe887280f90f9beba5526abb743a",
        "query": "query Copyright_LiveStream($login: String!) {\n  user(login: $login) {\n    id\n    bannerImageURL\n    stream {\n      id\n      createdAt\n      viewersCount\n      title\n      previewImageURL(width: 80, height: 45)\n    }\n  }\n}\n"
    },
    "Copyright_OtherContent": {
        "hash": "5a40df0804f34f4185668e1873658206db2443a8e343820098537583ea63d8a3",
        "query": "query Copyright_OtherContent($login: String!) {\n  user(login: $login) {\n    id\n    bannerImageURL\n    displayName\n    profileImageURL(width: 150)\n  }\n}\n"
    },
    "Copyright_Video": {
        "hash": "d0db959fcd9b87c8d6bc0b94111e35dbd9792582c688636e86982d4265d2f842",
        "query": "query Copyright_Video($vodID: ID) {\n  video(id: $vodID) {\n    id\n    title\n    seekPreviewsURL\n    description\n    lengthSeconds\n    owner {\n      displayName\n      id\n      login\n    }\n    previewThumbnailURL(width: 80, height: 45)\n    publishedAt\n    viewCount\n  }\n}\n"
    },
    "SubmitCopyrightClaim": {
        "hash": "678d0da896f2b327ea3df502a3ea2a1b50cc6bcdc196db998b4a3acd908969a3",
        "query": "mutation SubmitCopyrightClaim($input: SubmitCopyrightClaimInput!) {\n  submitCopyrightClaim(input: $input) {\n    claimID\n    error {\n      message\n    }\n  }\n}\n"
    },
    "CurrentClaimantUser": {
        "hash": "de0d9eafd101d428beab8518640231d6a4882076289dcea9ceb8c95564ea2650",
        "query": "query CurrentClaimantUser() {\n  currentUser {\n    id\n    email\n  }\n}\n"
    },
    "ActivityListStreamStartTime": {
        "hash": "c94b382f28122b4bffadcdaad11d097aa033ed9317676b5d818411ba6cbaa96f",
        "query": "query ActivityListStreamStartTime($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    stream {\n      id\n      createdAt\n    }\n    streamSessions(first: 1) {\n      startedAt\n    }\n  }\n}\n"
    },
    "ActivityFeed_FollowUserV2": {
        "hash": "8d5dec402a9fa3c6a15cddb46f59710b583b9503d5146201178b12ad7b2db02a",
        "query": "mutation ActivityFeed_FollowUserV2($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        ...followButtonFragment\n      }\n    }\n  }\n}\n"
    },
    "ActivityFeed_UnfollowUserV2": {
        "hash": "88e2982d5f81d69a18f63c1139ec9c0ee22a4d57a59c3b47a4ac264de4266a4d",
        "query": "mutation ActivityFeed_UnfollowUserV2($input: UnfollowUserInput!) {\n  unfollowUser(input: $input) {\n    follow {\n      disableNotifications\n      user {\n        ...followButtonFragment\n      }\n    }\n  }\n}\n"
    },
    "ActivityFeed_IsFollowingV2": {
        "hash": "9facfeb4454803d795b8458a3bea21dffcfbd548ee4b8ea6e3559e8d2289ae05",
        "query": "query ActivityFeed_IsFollowingV2($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      follower {\n        disableNotifications\n      }\n    }\n  }\n}\n"
    },
    "SetAlertFiltersMutation": {
        "hash": "16406a953a8d464c058bdfcdaadbdd8f5097fd87d88c4df32ab540c916f3ffbb",
        "query": "mutation SetAlertFiltersMutation($input: UpdateActivityFeedAlertSettingsInput!) {\n  updateActivityFeedAlertSettings(input: $input) {\n    settings {\n      isDNDModeEnabled\n      categories {\n        id\n        isIgnored\n      }\n    }\n    error\n  }\n}\n"
    },
    "GetAlertFiltersQuery": {
        "hash": "ca5374cc4188a87ab39bbcb917d0e1598d64f0d2616231ecfa4526902313bdd7",
        "query": "query GetAlertFiltersQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    activityFeed {\n      alertSettings {\n        isDNDModeEnabled\n        categories {\n          id\n          displayName\n          isIgnored\n        }\n      }\n    }\n  }\n}\n"
    },
    "SetAlertStatusMutation": {
        "hash": "a4e5d8eb4cf6f62dd05f71a3f581ed852ebbde54d19d295ab14bcccb928d882d",
        "query": "mutation SetAlertStatusMutation($input: UpdateActivityFeedAlertStatusInput!) {\n  updateActivityFeedAlertStatus(input: $input) {\n    alert {\n      id\n      status\n    }\n    error\n  }\n}\n"
    },
    "ActivityListContextV2Query": {
        "hash": "47ab93030310a35acfe7a8b57aea3907205e34600b2be0e5384c20f7267f1477",
        "query": "fragment activityFeedEmote on Emote {\n  id\n  token\n  setID\n  modifiers {\n    code\n    name\n  }\n  type\n  assetType\n}\n\nfragment activityFeedCheermote on ActivityFeedCheermote {\n  prefix\n  bitsAmount\n  tier\n}\n\nfragment activityFeedUser on User {\n  id\n  displayName\n  login\n}\n\nfragment activityFeedTokens on ActivityFeedText {\n  fragments {\n    token {\n      ... on ActivityFeedTextToken {\n        text\n      }\n      ... on ActivityFeedIntegerToken {\n        number\n      }\n      ... on ActivityFeedPercentToken {\n        percent\n      }\n      ... on User {\n        ...activityFeedUser\n      }\n      ... on Emote {\n        ...activityFeedEmote\n      }\n      ...activityFeedCheermote\n      ... on UserDoesNotExist {\n        key\n      }\n      ... on UserError {\n        key\n      }\n    }\n    hasEmphasis\n  }\n}\n\nfragment crowdControlPurchase on CrowdControlPurchase {\n  value\n  unit\n}\n\nfragment crowdControlAlert on ActivityFeedCrowdControlAlert {\n  type\n  data {\n    ... on CrowdControlEffectData {\n      thirdPartyHandle\n      itemName\n      purchase {\n        ...crowdControlPurchase\n      }\n    }\n    ... on CrowdControlExchangeData {\n      thirdPartyHandle\n      itemName\n      purchase {\n        ...crowdControlPurchase\n      }\n      exchangeValue\n    }\n    ... on CrowdControlPoolData {\n      itemName\n      poolPercentage\n    }\n  }\n}\n\nfragment streamElementsAlert on ActivityFeedStreamElementsAlert {\n  type\n  data {\n    ... on StreamElementsMerchData {\n      thirdPartyHandle\n      message\n      itemName\n    }\n  }\n}\n\nfragment streamLabsAlert on ActivityFeedStreamLabsAlert {\n  type\n  data {\n    ... on StreamLabsTipData {\n      thirdPartyHandle\n      message\n      money {\n        amount\n        currencyCode\n        minorUnits\n      }\n    }\n    ... on StreamLabsMediaData {\n      thirdPartyHandle\n      itemName\n      message\n      money {\n        amount\n        currencyCode\n        minorUnits\n      }\n    }\n    ... on StreamLabsMerchData {\n      thirdPartyHandle\n      itemName\n      message\n    }\n    ... on StreamLabsCharityDonationData {\n      thirdPartyHandle\n      message\n      charityName\n      money {\n        amount\n        currencyCode\n        minorUnits\n      }\n    }\n  }\n}\n\nfragment throneAlert on ActivityFeedThroneAlert {\n  type\n  data {\n    ... on ThroneGiftData {\n      type\n      thirdPartyHandle\n      message\n      itemName\n      link\n    }\n    ... on ThroneContributionPurchasedData {\n      thirdPartyHandle\n      itemName\n      money {\n        amount\n        currencyCode\n        minorUnits\n      }\n      link\n    }\n    ... on ThroneBadgeEarnedData {\n      itemName\n      itemDescription\n      link\n    }\n  }\n}\n\nfragment AlertMessageContent on ActivityFeedAlertMessageContent {\n  fragments {\n    __typename\n    ... on ActivityFeedAlertMessageTextFragment {\n      text\n    }\n    ... on ActivityFeedAlertMessageEmoteFragment {\n      emote {\n        ...activityFeedEmote\n      }\n    }\n    ... on ActivityFeedAlertMessageCheermoteFragment {\n      cheermote {\n        ...activityFeedCheermote\n      }\n    }\n    ... on ActivityFeedAlertMessageEmoteNotFound {\n      emoteID\n    }\n  }\n}\n\nfragment BitsSpendFeatureData on BitsSpendAlertData {\n  ... on BitsSpendCheerData {\n    messageContent {\n      ...AlertMessageContent\n    }\n    isFirstTimeCheer\n  }\n  ... on BitsSpendAutomaticPowerUpData {\n    messageContent {\n      ...AlertMessageContent\n    }\n    reward {\n      powerUpType\n    }\n  }\n}\n\nfragment alertEvent on ActivityFeedAlert {\n  __typename\n  id\n  status\n  createdAt\n  updatedAt\n  testVariant\n  ... on ActivityFeedCheerAlert {\n    cheerer {\n      ...activityFeedUser\n    }\n    amount\n    isAnonymous\n    isFirstTimeCheer\n    messageContent {\n      ...AlertMessageContent\n    }\n  }\n  ... on ActivityFeedBitsSpendAlert {\n    fromUser {\n      ...activityFeedUser\n    }\n    bitsAmount\n    featureType\n    featureData {\n      ...BitsSpendFeatureData\n    }\n  }\n  ... on ActivityFeedCommunityGiftSubscriptionAlert {\n    gifter {\n      ...activityFeedUser\n    }\n    isAnonymous\n    quantity\n    multiMonthDuration\n    tier\n    totalGiftCount\n  }\n  ... on ActivityFeedPaidUpgradeSubscriptionAlert {\n    subscriber {\n      ...activityFeedUser\n    }\n    tier\n    paidUpgradeType\n  }\n  ... on ActivityFeedFollowAlert {\n    follower {\n      ...activityFeedUser\n    }\n  }\n  ... on ActivityFeedHostAlert {\n    host {\n      ...activityFeedUser\n    }\n    viewerCount\n    isAutoHost\n  }\n  ... on ActivityFeedIndividualGiftSubscriptionAlert {\n    gifter {\n      ...activityFeedUser\n    }\n    recipient {\n      ...activityFeedUser\n    }\n    isAnonymous\n    multiMonthDuration\n    tier\n    totalGiftCount\n  }\n  ... on ActivityFeedPrimeResubscriptionAlert {\n    subscriber {\n      ...activityFeedUser\n    }\n    totalDuration\n    messageContent {\n      ...AlertMessageContent\n    }\n    viewerCustomizationSelection {\n      alertSetID\n      viewerCustomizationID\n      image {\n        assetMimeType\n        assetType\n        id\n        url\n        volume\n      }\n      sound {\n        assetMimeType\n        assetType\n        id\n        isMuted\n        name\n        url\n        volume\n      }\n    }\n  }\n  ... on ActivityFeedPrimeSubscriptionAlert {\n    subscriber {\n      ...activityFeedUser\n    }\n  }\n  ... on ActivityFeedRaidAlert {\n    raider {\n      ...activityFeedUser\n    }\n    partySize\n  }\n  ... on ActivityFeedSubscriptionAlert {\n    subscriber {\n      ...activityFeedUser\n    }\n    multiMonthDuration\n    tier\n  }\n  ... on ActivityFeedResubscriptionAlert {\n    subscriber {\n      ...activityFeedUser\n    }\n    multiMonthDuration\n    isMultiMonthResub\n    streakDuration\n    totalDuration\n    messageContent {\n      ...AlertMessageContent\n    }\n    tier\n    viewerCustomizationSelection {\n      alertSetID\n      viewerCustomizationID\n      image {\n        id\n        url\n        volume\n        assetType\n        assetMimeType\n      }\n      sound {\n        id\n        url\n        volume\n        isMuted\n        assetType\n        assetMimeType\n        name\n      }\n    }\n  }\n  ... on ActivityFeedCreatorGoalAlert {\n    goalState\n    goalType\n    description\n    contributions {\n      ... on ChannelGoalIntegerContributions {\n        currentContributions\n        targetContributions\n      }\n      ... on ChannelGoalMoneyContributions {\n        currentContributions {\n          amount\n          currencyCode\n          minorUnits\n        }\n        targetContributions {\n          amount\n          currencyCode\n          minorUnits\n        }\n      }\n    }\n  }\n  ... on ActivityFeedCharityDonationAlert {\n    donor {\n      ...activityFeedUser\n    }\n    charityName\n    money {\n      amount\n      currencyCode\n      minorUnits\n    }\n  }\n  ... on ActivityFeedChannelPointsRedemptionAlert {\n    pointsSpent\n    messageContent {\n      ...AlertMessageContent\n    }\n    redeemer {\n      ...activityFeedUser\n    }\n    reward {\n      id\n      title\n    }\n  }\n  ... on ActivityFeedHypeTrainAlert {\n    level\n    allTimeHighLevel\n    isAllTimeHighLevel\n    hypeTrainState\n  }\n  ... on ActivityFeedCrowdControlAlert {\n    ...crowdControlAlert\n  }\n  ... on ActivityFeedStreamElementsAlert {\n    ...streamElementsAlert\n  }\n  ... on ActivityFeedStreamLabsAlert {\n    ...streamLabsAlert\n  }\n  ... on ActivityFeedThroneAlert {\n    ...throneAlert\n  }\n}\n\nfragment ActivityFeedEventDetailItem on ActivityFeedEventDetailItem {\n  title {\n    ...activityFeedTokens\n  }\n  content {\n    ...activityFeedTokens\n  }\n  value {\n    ... on ActivityFeedEventDetailItemNumber {\n      value\n    }\n    ... on ActivityFeedEventDetailItemPercentage {\n      value\n      total\n    }\n  }\n}\n\nfragment ActivityFeedEventDetailList on ActivityFeedEventDetailList {\n  items {\n    ...ActivityFeedEventDetailItem\n  }\n  pinnedItems {\n    ...ActivityFeedEventDetailItem\n  }\n}\n\nfragment ActivityFeedEventDetails on ActivityFeedEventDetails {\n  ... on ActivityFeedEventDetailList {\n    ...ActivityFeedEventDetailList\n  }\n}\n\nfragment activityFeedEvent on ActivityFeedEvent {\n  id\n  type\n  filterCategoryID\n  timestamp\n  title {\n    ...activityFeedTokens\n  }\n  content {\n    ...activityFeedTokens\n  }\n  contentBody {\n    ...activityFeedTokens\n  }\n  user {\n    id\n    displayName\n    login\n  }\n  userContent {\n    ...activityFeedTokens\n  }\n  alert {\n    ...alertEvent\n  }\n  details {\n    ...ActivityFeedEventDetails\n  }\n  customIconURL\n}\n\nquery ActivityListContextV2Query($channelID: ID!, $limit: Int!, $cursor: Cursor) {\n  channel(id: $channelID) {\n    id\n    activityFeed {\n      events(first: $limit, after: $cursor) {\n        edges {\n          node {\n            ...activityFeedEvent\n          }\n          cursor\n        }\n        pageInfo {\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n    }\n  }\n}\n"
    },
    "EmoteByIdQuery": {
        "hash": "931d3d68eed9a7638449e9bf96b84b795398d8838e319c5a0a86f1586486e595",
        "query": "query EmoteByIdQuery($id: ID!) {\n  emote(id: $id) {\n    id\n    token\n    setID\n    modifiers {\n      code\n      name\n    }\n    type\n    assetType\n  }\n}\n"
    },
    "AdBreakLiveEventService_QueryAdProperties": {
        "hash": "e3644a2d13c3d08c216bedcd7406e72049aa8a0427fd1012ca198e870b7eceda",
        "query": "query AdBreakLiveEventService_QueryAdProperties($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        reminder {\n          isChatReminderEnabled\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateCreatorChatSettingsMutation": {
        "hash": "e5d311115e824887ad6acf79f91f4206a60abda4bafb774128e0de1a8f332c53",
        "query": "mutation UpdateCreatorChatSettingsMutation($input: UpdateCreatorChatSettingsInput!) {\n  updateCreatorChatSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreatorChatSettingsQuery": {
        "hash": "44a8ec4dbb1d7662c03b5260a62901d7b902a7eeaaf731671210703f38aacb92",
        "query": "query CreatorChatSettingsQuery($channelID: ID!) {\n  creatorChatSettings(channelID: $channelID) {\n    chatHighlightOrder\n    activityCategoryOrder\n    eventsInChatSettings {\n      eventType\n      isEnabled\n    }\n    isEventStatsVisible\n    isChatStatsVisible\n    isEventsInChatEnabled\n    isSwitchColumns\n    activityFeedDirection\n    leftColumnPercentWidth\n  }\n}\n"
    },
    "UseDragAndDropLayoutsQuery": {
        "hash": "fa952c1bacc41773e08c33bd272dc990e4c1c73ee586730ea5fa990859e314f6",
        "query": "query UseDragAndDropLayoutsQuery($channelLogin: String!, $type: ChannelDashboardViewType!, $isStreamManagerMosaicLayout: Boolean!, $isTwitchStudioMosaicLayout: Boolean!) {\n  channel(name: $channelLogin) {\n    id\n    dashboardView(type: $type) {\n      layouts {\n        ... on StreamManagerMosaicLayout {\n          data\n          id\n          name\n          version\n        }\n        ... on TwitchStudioMosaicLayout {\n          data\n          id\n          name\n          version\n        }\n      }\n      options {\n        customLayoutsTotal\n        customLayoutsUsed\n      }\n    }\n  }\n}\n"
    },
    "CreateDragAndDropLayout": {
        "hash": "b925134feebe793da2efde40b4da5fedc5c6383a65bf9d7d9c51bcb5c9825ec0",
        "query": "mutation CreateDragAndDropLayout($input: CreateDashboardViewMosaicLayoutInput!, $isStreamManagerMosaicLayout: Boolean!, $isTwitchStudioMosaicLayout: Boolean!) {\n  createDashboardViewMosaicLayout(input: $input) {\n    errorCode\n    layout {\n      id\n      name\n      version\n      lastUpdated\n      ... on StreamManagerMosaicLayout {\n        data\n      }\n      ... on TwitchStudioMosaicLayout {\n        data\n      }\n    }\n  }\n}\n"
    },
    "DeleteDragAndDropLayout": {
        "hash": "5f026cb01251aafc864c628d3f1cb10705cff35aae0f7698fecf51d27243bb2b",
        "query": "mutation DeleteDragAndDropLayout($input: DeleteDashboardViewInput!) {\n  deleteDashboardView(input: $input) {\n    errorCode\n  }\n}\n"
    },
    "UpdateDragAndDropLayout": {
        "hash": "4952f8059c21ca13d708aed04f4c5d257ac572f15aa0e47816bddc57461f920d",
        "query": "mutation UpdateDragAndDropLayout($input: UpdateDashboardViewMosaicLayoutInput!, $isStreamManagerMosaicLayout: Boolean!, $isTwitchStudioMosaicLayout: Boolean!) {\n  updateDashboardViewMosaicLayout(input: $input) {\n    errorCode\n    layout {\n      id\n      name\n      version\n      lastUpdated\n      ... on StreamManagerMosaicLayout {\n        data\n      }\n      ... on TwitchStudioMosaicLayout {\n        data\n      }\n    }\n  }\n}\n"
    },
    "AlertsFeatureLaunchFlags": {
        "hash": "cb488de0be69684dbd21b963e2f27acba633744223aa05b4d4d64600a2e77931",
        "query": "fragment alertFeatureFlags on AlertsFeatureLaunchFlags {\n  isTextToSpeechEnabled\n  isUserIdsConditionEnabled\n}\n\nquery AlertsFeatureLaunchFlags($channelID: ID!) {\n  alertsFeatureLaunchFlags(channelID: $channelID) {\n    ...alertFeatureFlags\n  }\n}\n"
    },
    "AdsManagerAccessQuery": {
        "hash": "97e3c41a4731e384fb33a5ef5229c90208aa2479dddc45671d1de9d6a767bfdb",
        "query": "query AdsManagerAccessQuery($channelOwnerID: ID, $channelLogin: String) {\n  user(id: $channelOwnerID, login: $channelLogin) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n    adProperties {\n      density {\n        isAdScheduleEnabled\n      }\n    }\n  }\n}\n"
    },
    "ChannelPage_SetSessionStatus": {
        "hash": "f5f8d52f617387e68b574897c2062083e09f9eb4d948596f95ccbd86a0a076c9",
        "query": "mutation ChannelPage_SetSessionStatus($input: SetSessionStatusInput!) {\n  setSessionStatus(input: $input) {\n    setAgainInSeconds\n  }\n}\n"
    },
    "Bits_BuyCard_Offers": {
        "hash": "77b6f56df3277887e756cc113787c6e91c6ed4d63808d09b2ce291fd3e53a6ea",
        "query": "query Bits_BuyCard_Offers($withChannel: Boolean!, $isLoggedIn: Boolean!, $channelLogin: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffer\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffer\n    }\n  }\n  user(login: $channelLogin) @include(if: $withChannel) {\n    id\n    displayName\n    cheer {\n      id\n      settings {\n        id\n        cheerMinimumBits\n      }\n    }\n  }\n}\n"
    },
    "GetBitsButton_Bits": {
        "hash": "a390ff0d5ae1e32eb4a22a1f5e3360a140aea08059761397b7e41e40b4e75c8b",
        "query": "query GetBitsButton_Bits($isLoggedIn: Boolean!, $withChannel: Boolean!, $login: String!) {\n  bitsOffers @skip(if: $isLoggedIn) {\n    ...bitsOffer\n  }\n  currentUser @include(if: $isLoggedIn) {\n    id\n    idSHA1\n    bitsBalance\n    bitsOffers {\n      ...bitsOffer\n    }\n    bitsUserSettings {\n      ...bitsUserSettings\n    }\n    bitsUserState\n  }\n  user(login: $login) @include(if: $withChannel) {\n    id\n    cheer {\n      id\n    }\n  }\n}\n"
    },
    "SetBitsUserSettings": {
        "hash": "440182a42cc8b13c154b1e37eaf3ec48a14ea25cb1f2de45f55a31b8eee16389",
        "query": "mutation SetBitsUserSettings($input: SetBitsUserSettingsInput!) {\n  setBitsUserSettings(input: $input) {\n    currentUser {\n      id\n      bitsUserSettings {\n        ...bitsUserSettings\n      }\n    }\n  }\n}\n"
    },
    "DiscoveryPreferenceMutation": {
        "hash": "c59a5d9fbc6101d36f10ed4c15c4c3a8a9c442ba03fde63c1c06f1a452483607",
        "query": "mutation DiscoveryPreferenceMutation($input: SetDiscoveryPreferenceInput!) {\n  setDiscoveryPreference(input: $input) {\n    error {\n      code\n    }\n    preference {\n      ...ContentDiscoveryPreferenceFragment\n    }\n  }\n}\n"
    },
    "DiscoveryPreferenceQuery": {
        "hash": "e5def21b0166c4824a677bb66e6db39ff3442fd7b377c9fa267ba3f8da15c589",
        "query": "query DiscoveryPreferenceQuery() {\n  discoveryPreference {\n    ...ContentDiscoveryPreferenceFragment\n  }\n}\n"
    },
    "DropCurrentSessionContext": {
        "hash": "d039d281b84d896276ef22187fcca622d4dcd7ff8da1e3442fc303a10132c9db",
        "query": "query DropCurrentSessionContext($channelLogin: String, $channelID: ID) {\n  currentUser {\n    id\n    dropCurrentSession(channelLogin: $channelLogin, channelID: $channelID) {\n      ...dropCurrentSessionData\n    }\n  }\n}\n\nfragment dropCurrentSessionData on DropCurrentSession {\n  channel {\n    id\n    name\n    displayName\n  }\n  game {\n    id\n    displayName\n  }\n  currentMinutesWatched\n  requiredMinutesWatched\n  dropID\n}\n"
    },
    "SearchTray_SearchSuggestions": {
        "hash": "8d6e26d0fd837c4732c93be9088b4f774be8ffdb3345439c592e2f83e4c3b756",
        "query": "query SearchTray_SearchSuggestions($queryFragment: String!, $requestID: ID, $withOfflineChannelContent: Boolean, $includeIsDJ: Boolean!) {\n  searchSuggestions(queryFragment: $queryFragment, requestID: $requestID, withOfflineChannelContent: $withOfflineChannelContent) {\n    edges {\n      ...searchSuggestionNode\n    }\n    tracking {\n      modelTrackingID\n      responseID\n    }\n  }\n}\n\nfragment searchSuggestionNode on SearchSuggestionEdge {\n  node {\n    content {\n      __typename\n      ... on SearchSuggestionChannel {\n        id\n        isLive\n        isVerified\n        login\n        profileImageURL(width: 50)\n        user {\n          id\n          roles {\n            isParticipatingDJ @include(if: $includeIsDJ)\n          }\n          stream {\n            id\n            game {\n              id\n            }\n          }\n        }\n      }\n      ... on SearchSuggestionCategory {\n        id\n        boxArtURL(width: 30, height: 40)\n        game {\n          id\n          slug\n        }\n      }\n    }\n    matchingCharacters {\n      start\n      end\n    }\n    id\n    text\n  }\n}\n"
    },
    "TopNav_CurrentUser": {
        "hash": "24d340996d97112925bc7b5b0170a86cf1a393bd93ef5e9d319fe6350428ed67",
        "query": "query TopNav_CurrentUser() {\n  currentUser {\n    id\n    createdAt\n    hasPresto\n    turboStatus {\n      hasActiveTurbo\n      hasUsedFreeTrial\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "Prime_PrimeOfferList_PrimeOffers_Eligibility": {
        "hash": "d5f4abab57e59bcc95ec7c8dfea34100263f52cbfda10231e620f6bb017be8bb",
        "query": "query Prime_PrimeOfferList_PrimeOffers_Eligibility($dateOverride: Time, $countryCode: String) {\n  primeOffersWithEligibility(dateOverride: $dateOverride, countryCode: $countryCode) {\n    id\n    catalogOfferID\n    title\n    gameTitle\n    imageURL\n    claimInstructions\n    description\n    deliveryMethod\n    endTime\n    priority\n    tags\n    content {\n      externalURL\n      publisher\n      categories\n      ctaType\n      ctaText\n      subtitleSubtext\n      shortDescription\n    }\n    offerEligibility {\n      canClaim\n      isClaimed\n      offerState\n    }\n  }\n}\n"
    },
    "Prime_PrimeOffers_PrimeOfferIds_Eligibility": {
        "hash": "10402a40068e4b3faa29c9b04fbbe00e8d5861a51724b1568d7910d73b8b8d25",
        "query": "query Prime_PrimeOffers_PrimeOfferIds_Eligibility($dateOverride: Time, $countryCode: String) {\n  primeOffersWithoutEligibility(dateOverride: $dateOverride, countryCode: $countryCode) {\n    id\n    catalogOfferID\n  }\n}\n"
    },
    "Prime_PrimeOffers_CurrentUser": {
        "hash": "b11a0cc5f94afe65b6e27c0d13a4b20bb87aafa148325053564d152cbab5aee6",
        "query": "query Prime_PrimeOffers_CurrentUser() {\n  currentUser {\n    id\n    hasPrime\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "placeOrder": {
        "hash": "1c7ed5ea954abe6d211f5465a25c626eb2e7386a48c5321065325ac040fb8631",
        "query": "mutation placeOrder($input: PlaceOrderInput!) {\n  placeOrder(input: $input) {\n    orderInformation\n    error {\n      code\n    }\n  }\n}\n"
    },
    "Prime_Current_User": {
        "hash": "541b543848964c30f4f5ec2f3cf041c7832ad567fa7ca9e2b9b9665db9277a05",
        "query": "query Prime_Current_User() {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n"
    },
    "UserMenuCurrentUser": {
        "hash": "bd904264e3e106d0524379dd1cdda1cb2e188db5f1ed04391429a979d4467030",
        "query": "query UserMenuCurrentUser() {\n  currentUser {\n    id\n    availability\n    profileImageURL(width: 70)\n    settings {\n      isSharingActivity\n      visibility\n    }\n  }\n}\n"
    },
    "UseLiveBroadcast": {
        "hash": "037af39b41f7eaece8812c87b4062ad1425590a0fd6e48570b264f1982a724e7",
        "query": "fragment useLiveGame on Game {\n  id\n  slug\n  name\n  displayName\n}\n\nquery UseLiveBroadcast($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    lastBroadcast {\n      id\n      title\n      game {\n        ...useLiveGame\n      }\n    }\n  }\n}\n"
    },
    "RequireTwoFactorEnabled": {
        "hash": "9712bc7f38a4d711bba4ca7c80813aebe397da641ba8c34fb0eb2f8e842cb65f",
        "query": "query RequireTwoFactorEnabled() {\n  currentUser {\n    id\n    settings {\n      hasTwoFactorEnabled\n    }\n  }\n}\n"
    },
    "CreateOrganizationApplication": {
        "hash": "eb13b5d8f9b4da3bc2c95323f73c2630900e36774232c3c9eab66e4a9b800889",
        "query": "mutation CreateOrganizationApplication($input: CreateOrganizationApplicationInput!) {\n  createOrganizationApplication(input: $input) {\n    applicationID\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GiftFreeSubsQuickAction_RedeemCreatorGift": {
        "hash": "b39e176bb57d6d4d684210ecccb4db11cde46ee4460bf68d5f01a8be11d5bb3e",
        "query": "mutation GiftFreeSubsQuickAction_RedeemCreatorGift($input: RedeemCreatorGiftsInput!) {\n  redeemCreatorGifts(input: $input) {\n    creatorGifting {\n      id\n      subscriptionsBalance\n    }\n  }\n}\n"
    },
    "AdminPollsPage": {
        "hash": "5450b63e8a512232317e7ce93497d62bdf5a640dd86ea3ec76392b051a60b78f",
        "query": "query AdminPollsPage($login: String!) {\n  user(login: $login) {\n    id\n    latestPoll {\n      ...poll\n    }\n  }\n}\n"
    },
    "ChoiceBreakdown": {
        "hash": "43b24082bf62ae6e317983261323a9697ddfd8eb9eae8af8cab34e0548920788",
        "query": "query ChoiceBreakdown($login: String!, $choiceID: ID!, $sort: PollVoterConnectionSort) {\n  user(login: $login) {\n    id\n    latestPoll {\n      id\n      choice(id: $choiceID) {\n        id\n        voters(first: 10, sort: $sort, direction: DESC) {\n          nodes {\n            node {\n              ...pollVoter\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "WatchPartyPlaybackTracking": {
        "hash": "60d9a0df9ed3469dec2602bdbf464f85daf52b89faa99ab4266a516a6a7dd62e",
        "query": "query WatchPartyPlaybackTracking($channelLogin: String!) {\n  currentUser {\n    id\n  }\n  user(login: $channelLogin) {\n    ...watchPartyChannel\n  }\n}\n"
    },
    "WatchPartyPlayerLoader__PlayerDecoration": {
        "hash": "4bef73286f2688817efb8a92ef36ff64792afc6beaa86dea337814cbf4a0e499",
        "query": "query WatchPartyPlayerLoader__PlayerDecoration($channelID: ID!, $accessToken: String!) {\n  user(id: $channelID) {\n    id\n    watchParty(accessToken: $accessToken, decorated: true) {\n      error {\n        ...watchPartyError\n      }\n      session {\n        id\n        decoration {\n          item {\n            id\n          }\n          player {\n            deviceProxyBaseURL\n            sdkInit\n            token\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "WatchPartyPlayer__Eligibility": {
        "hash": "06820cf1a8ae0c06036e1f31ad4b94425b9f00c2e37fbf9b494ed6295fda1364",
        "query": "query WatchPartyPlayer__Eligibility($channelLogin: String!, $accessToken: String!) {\n  user(login: $channelLogin) {\n    id\n    watchParty(accessToken: $accessToken, decorated: true) {\n      error {\n        ...watchPartyError\n      }\n      session {\n        id\n        decoration {\n          item {\n            id\n            ...watchPartyEligibilitySelfEdge\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevExtensionCreatePage_CreateExtensionClient": {
        "hash": "fcfa3c634d0ab3f4bd1e6bb595de01aa232d41d9761f7639aa2998efcc328467",
        "query": "mutation DevExtensionCreatePage_CreateExtensionClient($input: CreateExtensionClientInput!) {\n  createExtensionClient(input: $input) {\n    client {\n      id\n    }\n    error\n  }\n}\n"
    },
    "LeaderboardSettings_UpdateLeaderboardSettings": {
        "hash": "9671685a033ad8f4a702dbf782105c34547dcb07acc1e51d706c3e43268ba469",
        "query": "mutation LeaderboardSettings_UpdateLeaderboardSettings($input: UpdateLeaderboardSettingsInput!) {\n  updateLeaderboardSettings(input: $input) {\n    user {\n      id\n      settings {\n        leaderboard {\n          isCheerEnabled\n          isSubGiftEnabled\n          isClipEnabled\n          defaultLeaderboard\n          timePeriod\n        }\n      }\n    }\n  }\n}\n"
    },
    "LeaderboardSettings_GetLeaderboardSettings": {
        "hash": "774048c6ed9daa6e705dc83f3cbb604853cf05a1beb41ff60fa94a3b846bd423",
        "query": "query LeaderboardSettings_GetLeaderboardSettings($login: String!) {\n  user(login: $login) {\n    id\n    login\n    settings {\n      leaderboard {\n        isCheerEnabled\n        isSubGiftEnabled\n        isClipEnabled\n        defaultLeaderboard\n        timePeriod\n      }\n    }\n  }\n}\n"
    },
    "autoModQueueBroadcastLanguageQuery": {
        "hash": "61a2016ae2853432c4754fe5ae09a0f3c9093ede5889c2462e3322e40f9789c6",
        "query": "query autoModQueueBroadcastLanguageQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    broadcastSettings {\n      id\n      language\n    }\n  }\n}\n"
    },
    "UpdateShieldModeSettings": {
        "hash": "4c794defc76eae1452617bff395ef4a06a3b1080b554b65ad977644735cc31bd",
        "query": "mutation UpdateShieldModeSettings($input: UpdateShieldModeSettingsInput!) {\n  updateShieldModeSettings(input: $input) {\n    shieldModerationSettings {\n      ...shieldModeSettings\n    }\n    errors {\n      code\n    }\n  }\n}\n"
    },
    "ShieldModeSettings": {
        "hash": "4d37ec59ea47329f8ab33a3bdd175252ab68b9aafdf21c5a05facbe79f82133f",
        "query": "query ShieldModeSettings($channelID: ID!) {\n  channelShieldMode(channelID: $channelID) {\n    id\n    settings {\n      ...shieldModeSettings\n    }\n  }\n}\n"
    },
    "UpdateShieldModeShortcutEnabled": {
        "hash": "0efd4ffd4034423353e5d60c459ae12ace89f937d0a0baf7643884dd14f2f08c",
        "query": "mutation UpdateShieldModeShortcutEnabled($input: UpdateShieldModeShortcutEnabledInput!) {\n  updateShieldModeShortcutEnabled(input: $input) {\n    isShieldModeShortcutEnabled\n  }\n}\n"
    },
    "CustomSubBenefitsQuery": {
        "hash": "0c32f43738dfdcbf1879f8f0cb4e7a27bfa716c64bac355f3bb2be87ea12b908",
        "query": "query CustomSubBenefitsQuery($channelLogin: String!, $state: CustomSubBenefitState!) {\n  channel(name: $channelLogin) {\n    id\n    customSubBenefits(state: $state) {\n      id\n      state\n    }\n  }\n}\n"
    },
    "SupportPanelBenefitsSectionBadges": {
        "hash": "0684df7408d28c4967077a6ead8a7fb6157f33a092a0901aa959ac5fb2d363a5",
        "query": "query SupportPanelBenefitsSectionBadges($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      isFounder\n    }\n    channel {\n      id\n      founderBadgeAvailability\n    }\n    broadcastBadges {\n      ...badge\n    }\n  }\n  badges {\n    ...badge\n  }\n}\n"
    },
    "SupportPanelBenefitsSectionEmotes": {
        "hash": "fd9d11862764c175181f1c22519e16c88fe31114e76dd5af17ab203a2834b1d2",
        "query": "query SupportPanelBenefitsSectionEmotes($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      emotes {\n        id\n        token\n      }\n    }\n  }\n}\n"
    },
    "SupportPanelBenefitsSectionUser": {
        "hash": "40b45a27ce857c25138cdd984411f4859c834b1390672279dd4b34bab5ca6e77",
        "query": "query SupportPanelBenefitsSectionUser($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    subscriptionProducts {\n      id\n      hasAdFree\n    }\n  }\n}\n"
    },
    "PrimeSubPurchase": {
        "hash": "7fd5478a1aa8b7204e213f873ae2365de01ef64ba5bec9c6aa02437464e2878f",
        "query": "query PrimeSubPurchase($purchaseOrderID: ID!, $includeOrder: Boolean!) {\n  currentUser {\n    id\n    purchaseOrder(id: $purchaseOrderID) @include(if: $includeOrder) {\n      id\n      actionTokenID\n      failureReason\n      state\n    }\n  }\n}\n"
    },
    "SupportPanelFooterPrimeStatus": {
        "hash": "76fb77ed768baca85fa314bcf25fa866a65a0d4c5a36688ff0226d1b9bc56142",
        "query": "query SupportPanelFooterPrimeStatus($login: String!) {\n  requestInfo {\n    countryCode\n  }\n  currentUser {\n    id\n    hasPrime\n  }\n  user(login: $login) {\n    id\n    self {\n      canPrimeSubscribe\n      primeSubCreditBenefit {\n        renewalDate\n        willRenew\n      }\n    }\n  }\n}\n"
    },
    "SubscriptionRewardPreviews": {
        "hash": "c76e74248008b282e23a0c7be0d8dbfbc937057b69fdb99554af4481713083ce",
        "query": "query SubscriptionRewardPreviews($channelID: ID!, $months: Int!, $tier: Int!) {\n  rewardCampaignSubPreviews(input: {tier: $tier, months: $months, type: PAID, channelID: $channelID}) {\n    ...rewardCampaignPreview\n  }\n}\n"
    },
    "SupportPanelTitleSectionUserInfo": {
        "hash": "d728eebad34f54a33106ed3f7e4e4b5a76046a3fc61696a93b06c738af135029",
        "query": "query SupportPanelTitleSectionUserInfo($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    description\n    lastBroadcast {\n      id\n      game {\n        id\n        displayName\n      }\n    }\n    videos(first: 30, sort: TIME, type: ARCHIVE) {\n      edges {\n        ...userBioVideo\n      }\n    }\n  }\n}\n\nfragment userBioVideo on VideoEdge {\n  node {\n    id\n    game {\n      id\n      displayName\n    }\n    status\n  }\n}\n"
    },
    "SupportPanel_UpgradeBenefits": {
        "hash": "5bb99677755cb25487f6c26077e11735f4f09851a8b8b967174fed970f57ae90",
        "query": "query SupportPanel_UpgradeBenefits($login: String!) {\n  user(login: $login) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n    channel {\n      id\n      creatorBadgeFlair {\n        setting\n      }\n    }\n    self {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n    }\n  }\n  badges {\n    ...badge\n  }\n}\n"
    },
    "WatchPartyDashboardWidget__StopWatchParty": {
        "hash": "85fa37ba53afba9fa76e9e4ac29cbed54a9b44afa2ca446e4f678077cb06cad2",
        "query": "mutation WatchPartyDashboardWidget__StopWatchParty($input: StopWatchPartyInput!) {\n  stopWatchParty(input: $input) {\n    error {\n      ...watchPartyError\n    }\n    watchParty {\n      ...watchPartySession\n    }\n  }\n}\n"
    },
    "DirectoryVideos_Game": {
        "hash": "a496f73db1704beb8f9ca9a9d4487101bed7385ea07c524bf6ae7236cb2f1932",
        "query": "query DirectoryVideos_Game($slug: String, $videoLimit: Int, $followedCursor: Cursor, $videoSort: VideoSort, $languages: [String!], $broadcastTypes: [BroadcastType!], $includePreviewBlur: Boolean) {\n  game(slug: $slug) {\n    id\n    name\n    videos(first: $videoLimit, after: $followedCursor, languages: $languages, types: $broadcastTypes, sort: $videoSort) {\n      banners\n      edges {\n        ...VideoEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "FeaturedContentCarouselStreams": {
        "hash": "66367d3363fcc636331a66225fe18f8b3436bf02ec2452b8f974d2b0e60237ea",
        "query": "query FeaturedContentCarouselStreams($language: String, $first: Int, $acceptedMature: Boolean) {\n  featuredStreams(language: $language, first: $first, acceptedMature: $acceptedMature) {\n    itemTrackingID\n    isScheduled\n    isSponsored\n    priorityLevel\n    description\n    stream {\n      broadcaster {\n        displayName\n        id\n        profileImageURL(width: 150)\n        login\n      }\n      game {\n        id\n        slug\n        name\n        displayName\n      }\n      id\n      type\n      viewersCount\n      previewImageURL(width: 320, height: 180)\n      freeformTags {\n        ...freeformTagFragment\n      }\n    }\n    title\n    version\n  }\n}\n"
    },
    "Shelves": {
        "hash": "5dc0a387637cddef9ed387824c42953f7e18deb0f0f57ccd1b86438426940201",
        "query": "query Shelves($requestID: String!, $platform: String!, $langWeightedCCU: Boolean, $limit: Int, $after: Cursor, $itemsPerRow: Int, $context: RecommendationsContext, $imageWidth: Int, $verbose: Boolean, $includeIsDJ: Boolean!) {\n  shelves(requestID: $requestID, platform: $platform, langWeightedCCU: $langWeightedCCU, first: $limit, after: $after, itemsPerRow: $itemsPerRow, context: $context, verbose: $verbose) {\n    edges {\n      node {\n        ...shelf\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n    }\n    verboseResults\n  }\n}\n"
    },
    "FollowCueChatters": {
        "hash": "4e7580e7dcfcae8fd26a518df507c00dfede92754a969209e0666be570df02a0",
        "query": "query FollowCueChatters($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    chatters {\n      viewers {\n        login\n      }\n    }\n  }\n}\n"
    },
    "FollowCueFollowState": {
        "hash": "1904a2011affac86ac14a50c9380c7efccbe87c455f3ae3816e832c909f5e41c",
        "query": "query FollowCueFollowState($channelID: ID!, $userLogin: String!) {\n  user(login: $userLogin) {\n    id\n    relationship(targetUserID: $channelID) {\n      followedAt\n    }\n  }\n}\n"
    },
    "FollowCueSettings": {
        "hash": "eae48a647315b9e79e7af95367c6c9825bba29036f2d6ddff6f2ca6fe7d1f1af",
        "query": "query FollowCueSettings() {\n  channelFollowCueSettings {\n    ...followCueSettings\n  }\n}\n"
    },
    "UpdateFollowCueSettings": {
        "hash": "5959f5a833081f1d9c54f07d2e193fb5de08ad9364de40385976b6d338476662",
        "query": "mutation UpdateFollowCueSettings($input: UpdateChannelFollowCueSettingsInput!) {\n  updateChannelFollowCueSettings(input: $input) {\n    error {\n      code\n    }\n    settings {\n      ...followCueSettings\n    }\n  }\n}\n"
    },
    "AlertsCheermoteConfigContext_ChannelByID": {
        "hash": "78e9278e7750f9f81d330502e8f8bb4181f5ace1cfa1360465a6b688dbd2f4c8",
        "query": "query AlertsCheermoteConfigContext_ChannelByID($id: ID!) {\n  user(id: $id) {\n    id\n    cheer {\n      id\n      cheerGroups {\n        ...cheermoteGroup\n      }\n      isEnabled\n      isBitsEnabled\n    }\n  }\n}\n"
    },
    "AlertsCheermoteConfigContext_Global": {
        "hash": "990051786ef49c636e8749a8dbf238ef2a868cb7416289ebe839e7be4b72af10",
        "query": "query AlertsCheermoteConfigContext_Global() {\n  ...globalCheerInfo\n}\n"
    },
    "ViewablePollsPage": {
        "hash": "0a892ed6bc2642cd39bcfe29f2f60c7068c4ee4e6dd10d03d271debded43f644",
        "query": "query ViewablePollsPage($login: String!) {\n  user(login: $login) {\n    id\n    viewablePoll {\n      ...poll\n    }\n  }\n}\n"
    },
    "ChannelPointsAvailable": {
        "hash": "123fb26de8870a9883d51da643d00a7a85716d2669ce3d12c52daf95d2626a9d",
        "query": "query ChannelPointsAvailable($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isAvailable\n      }\n    }\n  }\n}\n"
    },
    "CommunityPointsCustomization": {
        "hash": "882e2940acde36a221d2658019bc4204778d82fa2c357bfc12fd1754a76dfcb7",
        "query": "query CommunityPointsCustomization($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    ...pointCustomizationFragment\n  }\n}\n"
    },
    "ChannelPointsEnabled": {
        "hash": "d25f8e5fb20f7a4c0e6652fdbc9b6128920c2cbc05b67482b51a3c5c08ea09c5",
        "query": "query ChannelPointsEnabled($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "EnableChannelPointsSettingsMutation": {
        "hash": "7b226c0372065e384a8c72a80eef44117dd1e83e83ff3e487b60a3ed899b654a",
        "query": "mutation EnableChannelPointsSettingsMutation($input: UpdateCommunityPointsChannelSettingsInput!) {\n  updateCommunityPointsChannelSettings(input: $input) {\n    error {\n      code\n    }\n    channel {\n      id\n      communityPointsSettings {\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "ChannelViewerMilestoneSettingsMutation": {
        "hash": "c26bc4cc831ca6a217ae53b3256572d5d0d62bd1533c3af1fdd71bbf1b45d1ca",
        "query": "mutation ChannelViewerMilestoneSettingsMutation($input: UpdateChannelViewerMilestoneSettingsInput!) {\n  updateChannelViewerMilestoneSettings(input: $input) {\n    error {\n      code\n    }\n    settings {\n      id\n      isWatchStreakOptOut\n    }\n  }\n}\n"
    },
    "ChannelViewerMilestoneSettings": {
        "hash": "8a49fda538a2f147771344e490de4e20172b2593398f01c0145d0bdf22f31b5c",
        "query": "query ChannelViewerMilestoneSettings($login: String, $channelID: ID!) {\n  channelViewerMilestoneSettings(channelID: $channelID) {\n    id\n    isWatchStreakOptOut\n    isInWatchStreakProgressExperiment\n  }\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_CreateTeamImageUploadRequest": {
        "hash": "0a20570d806b4ab9a1c64d87b31edf02ce43b7bde996b558a9338bcfb82f6c0a",
        "query": "mutation TeamsDashboard_CreateTeamImageUploadRequest($input: CreateTeamImageUploadRequestInput!) {\n  createTeamImageUploadRequest(input: $input) {\n    response {\n      imageID\n      url\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "TeamsDashboard_DeleteTeamInvitation": {
        "hash": "d429e6fec237a9a30fd4191a90c885b8317a1b7b2740f25e13e739343d884aaf",
        "query": "mutation TeamsDashboard_DeleteTeamInvitation($input: DeleteTeamInvitationInput!) {\n  deleteTeamInvitation(input: $input) {\n    team {\n      id\n      invitedUsers {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            login\n            displayName\n            profileImageURL(width: 70)\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_InviteUserToTeam": {
        "hash": "c652bc6250cc1f0e50411861d7c4b7ea16ac5fc98ea31b8e313568317a5e5a13",
        "query": "mutation TeamsDashboard_InviteUserToTeam($input: InviteUserToTeamInput!) {\n  inviteUserToTeam(input: $input) {\n    error {\n      code\n    }\n    team {\n      id\n      invitedUsers {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            login\n            displayName\n            profileImageURL(width: 70)\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_RemoveTeamMember": {
        "hash": "af91a7cad66fcbda34fc28833c1e7d3d70fdcaa5b83144dab49dbf7ea2a554a9",
        "query": "mutation TeamsDashboard_RemoveTeamMember($input: RemoveUserFromTeamInput!) {\n  removeUserFromTeam(input: $input) {\n    team {\n      id\n      members {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            login\n            displayName\n            profileImageURL(width: 70)\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_TeamInvitations": {
        "hash": "e5a17ec6df76c48b8be81ca574e885a83a9fa5d69d2576bdd3b37619c040b604",
        "query": "query TeamsDashboard_TeamInvitations($teamName: String!, $cursor: Cursor, $limit: Int) {\n  team(name: $teamName) {\n    id\n    invitedUsers(first: $limit, after: $cursor) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          login\n          displayName\n          profileImageURL(width: 70)\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_TeamMembers": {
        "hash": "0c756cba041c61552460ba034e38a1f690e39f5fd848b3d0b9b3f4fdf1c387a9",
        "query": "query TeamsDashboard_TeamMembers($teamName: String!, $cursor: Cursor, $limit: Int) {\n  team(name: $teamName) {\n    id\n    members(first: $limit, after: $cursor) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          login\n          displayName\n          profileImageURL(width: 70)\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_MembersWithRevenue": {
        "hash": "1eccfd4dd08f1aac12fba5f4172d41d5db1bf09d138c3abb661fb76592a3b6c0",
        "query": "query TeamsDashboard_MembersWithRevenue($teamName: String!, $cursor: Cursor, $limit: Int) {\n  team(name: $teamName) {\n    id\n    membersByMetricsFilter(first: $limit, metricsRevealedFilter: REVENUE, after: $cursor) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          login\n          displayName\n          profileImageURL(width: 70)\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_TeamRevenues": {
        "hash": "80b26003c7f347ecb7ed1edd894ce3765bb58a47951e4ad063744f0db406f3d7",
        "query": "query TeamsDashboard_TeamRevenues($teamName: String!, $channelIDs: [ID!]!, $startDate: Time!, $endDate: Time!) {\n  team(name: $teamName) {\n    id\n    revenues(channelIDs: $channelIDs, startDate: $startDate, endDate: $endDate, granularity: DAY) {\n      revenue {\n        channelID\n        revenues {\n          twitchSubscriptions {\n            date\n            amount\n          }\n          giftSubscriptions {\n            date\n            amount\n          }\n          ads {\n            date\n            amount\n          }\n          bits {\n            date\n            amount\n          }\n          primeSubscriptions {\n            date\n            amount\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboardRoot": {
        "hash": "22abfcfa3a221bca6ffd29a93e1246791c7ba13e6a70663ac6c712f45d7bb65b",
        "query": "query TeamsDashboardRoot($teamName: String!) {\n  team(name: $teamName) {\n    id\n    name\n    displayName\n    description\n    logoID\n    logoURL\n    bannerID\n    bannerURL\n    backgroundImageID\n    backgroundImageURL\n  }\n  currentUser {\n    id\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n    }\n    ownedTeams {\n      id\n    }\n    teamMemberships {\n      team {\n        id\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_SettingsTeam": {
        "hash": "091d78938d38aa94bcc826026157194e7372aa271e4b173a6844a0ff7794b241",
        "query": "query TeamsDashboard_SettingsTeam($teamName: String!) {\n  team(name: $teamName) {\n    id\n    name\n    displayName\n    description\n    logoID\n    logoURL\n    bannerID\n    bannerURL\n    backgroundImageID\n    backgroundImageURL\n  }\n}\n"
    },
    "TeamsDashboard_UpdateTeam": {
        "hash": "9ecc56164cb0a39e2ebca9c2e4b8fb8fd5d2bdac7c92f161a35d20b7b8a4dad9",
        "query": "mutation TeamsDashboard_UpdateTeam($input: UpdateTeamInput!) {\n  updateTeam(input: $input) {\n    team {\n      id\n      name\n      displayName\n      description\n      logoID\n      logoURL\n      bannerID\n      bannerURL\n      backgroundImageID\n      backgroundImageURL\n    }\n  }\n}\n"
    },
    "TeamsDashboard_AdBreaksInSeconds": {
        "hash": "d939e1ee60f4bd48661bbdb31b3a0e61d0f8e3aca9a88718dac54d9b55914ef5",
        "query": "query TeamsDashboard_AdBreaksInSeconds($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      adBreaksInSeconds {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_AdTimePerHour": {
        "hash": "5e630be6fad156a18828a74c91713d8c2fc19b4c48e13d569dc8329476190203",
        "query": "query TeamsDashboard_AdTimePerHour($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      adTimePerHour {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_AverageViewers": {
        "hash": "e3fa49e1846026ce10d5a5bf1930f99559447878b99a0ab9f0d32981fbcbb3c8",
        "query": "query TeamsDashboard_AverageViewers($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      averageViewers {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_ChatMessages": {
        "hash": "40bd1fa014e1d32bf601ee4c0e3575a6772930970531eeb841e865cdbad4fda4",
        "query": "query TeamsDashboard_ChatMessages($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      chatMessages {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_CsvExportMetrics": {
        "hash": "ebfb9c761ce55abcd4b247d02a31134ea21293476bbffa5c6e9f6c7013f21065",
        "query": "query TeamsDashboard_CsvExportMetrics($teamName: String!, $teamMemberIDs: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMemberIDs, granularity: $granularity, timeZone: $timezone) {\n      adBreaksInSeconds {\n        items {\n          timestamp\n          value\n        }\n      }\n      adTimePerHour {\n        items {\n          timestamp\n          value\n        }\n      }\n      averageViewers {\n        items {\n          timestamp\n          value\n        }\n      }\n      chatMessages {\n        items {\n          timestamp\n          value\n        }\n      }\n      follows {\n        items {\n          timestamp\n          value\n        }\n      }\n      minutesWatched {\n        items {\n          timestamp\n          value\n        }\n      }\n      timeStreamed {\n        items {\n          timestamp\n          value\n        }\n      }\n      uniqueChatters {\n        items {\n          timestamp\n          value\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_Follows": {
        "hash": "559fd702c029357eed1f1bb109e9b1e68cedfcdbffc7ed106d1b6ba0da133ae2",
        "query": "query TeamsDashboard_Follows($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      follows {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_Members": {
        "hash": "1d7f0f50ab27a2cdd118ad51bbb7fa7987d6d4645a7cf1634b36aa33ce345856",
        "query": "query TeamsDashboard_Members($teamName: String!, $cursor: Cursor) {\n  team(name: $teamName) {\n    id\n    membersByMetricsFilter(first: 100, after: $cursor, metricsRevealedFilter: STATS) {\n      edges {\n        cursor\n        node {\n          displayName\n          id\n          login\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_MinutesWatched": {
        "hash": "4e16a8bf34ef5c89754ba08ee8d03448e58b83eecfa98d57963c5caa34a50a4d",
        "query": "query TeamsDashboard_MinutesWatched($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      minutesWatched {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_TimeStreamed": {
        "hash": "a1a5d2bef249687fb874aeec7e4e38fcc597e01a8b5b617db392cc801332e177",
        "query": "query TeamsDashboard_TimeStreamed($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      timeStreamed {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_UniqueChatters": {
        "hash": "6a1a305802a29e61ac14250281e3ff828a92d3e693f8ed9b254d973b4f1a2e56",
        "query": "query TeamsDashboard_UniqueChatters($teamName: String!, $teamMembers: [ID!], $startAt: Time!, $endAt: Time!, $granularity: Granularity!, $timezone: String!) {\n  team(name: $teamName) {\n    id\n    creatorTimeseriesMetrics(startAt: $startAt, endAt: $endAt, channelIDs: $teamMembers, granularity: $granularity, timeZone: $timezone) {\n      uniqueChatters {\n        items {\n          timestamp\n          value\n        }\n        total\n      }\n    }\n  }\n}\n"
    },
    "TeamsDashboard_VideoPlayReferrals": {
        "hash": "1379ae162c350ccd964bdf640298d5312b6b810711490be1baf677dc71fa43f5",
        "query": "query TeamsDashboard_VideoPlayReferrals($teamName: String!, $teamMembers: [ID!], $start: Time!, $end: Time!, $first: Int!) {\n  team(name: $teamName) {\n    id\n    videoPlayReferrals(start: $start, end: $end, first: $first, channelIDs: $teamMembers, dimension: COUNTRY, filter: ALL) {\n      items {\n        count\n        name\n      }\n      total\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, channelIDs: $teamMembers, dimension: PLATFORM, filter: ALL) {\n      items {\n        count\n        name\n      }\n      total\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, channelIDs: $teamMembers, dimension: INTERNAL, filter: INTERNAL_LIVE_WEB) {\n      items {\n        count\n        name\n      }\n      total\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, channelIDs: $teamMembers, dimension: EXTERNAL, filter: EXTERNAL_LIVE_WEB) {\n      items {\n        count\n        name\n      }\n      total\n    }\n  }\n}\n"
    },
    "TeamsDashboard_TeamAndUser": {
        "hash": "8e076bcfe585e4465a091bdede61bca7f0492199c019054ababd91ec955a8405",
        "query": "query TeamsDashboard_TeamAndUser($login: String!, $teamName: String!) {\n  team(name: $teamName) {\n    id\n  }\n  user(login: $login) {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n"
    },
    "PollsWidget_LatestPoll": {
        "hash": "7298477db024f5ef7612aee36654cb6e8661775a9aedbafb19c3192df65a3956",
        "query": "query PollsWidget_LatestPoll($login: String!) {\n  user(login: $login) {\n    id\n    latestPoll {\n      ...poll\n    }\n  }\n}\n"
    },
    "CharityPurchasableOfferQuery": {
        "hash": "6ae93226c7a1b14e1104766ea3edf0ef3d2375d207f9d77fb2c4fe489655d6e3",
        "query": "query CharityPurchasableOfferQuery($params: PurchasableOfferParams!) {\n  purchasableOffer(params: $params) {\n    ...charityPurchasableOfferFragment\n  }\n  currentUser {\n    id\n    email\n  }\n  requestInfo {\n    countryCode\n  }\n}\n\nfragment charityPurchasableOfferFragment on Offer {\n  ...charityOffer\n  self {\n    eligiblePaymentMethods {\n      ...eligiblePaymentMethodFragment\n    }\n    checkoutConfiguration {\n      ...braintreeCheckoutConfigurationFragment\n    }\n  }\n}\n\nfragment braintreeCheckoutConfigurationFragment on CheckoutConfiguration {\n  braintree {\n    payPalClientID\n    clientToken\n  }\n}\n"
    },
    "GetPaymentMethodInsertStatus": {
        "hash": "2c5122aad332ea7db00cc93aa56ff66d58d6f3075802dac27c53936758a3e3e6",
        "query": "query GetPaymentMethodInsertStatus($insertStatusId: ID!) {\n  paymentMethodInsertStatus(workflowID: $insertStatusId) {\n    workflowID\n    outcome\n    errorCode\n    threeDSecureActionResultsTokenID\n  }\n}\n"
    },
    "UpdatePaymentMethod_SetPaymentMethod": {
        "hash": "c96c258a5f0dd43cf6c74af80be0b2a96e119c6afe04d8b1243557049a4c50d6",
        "query": "mutation UpdatePaymentMethod_SetPaymentMethod($input: SetPaymentMethodInput!) {\n  setPaymentMethod(input: $input) {\n    workflowID\n    error\n  }\n}\n"
    },
    "UpdatePaymentMethodForm": {
        "hash": "0e0f0ed6009caf8def653e89f3cb8f63b20a081833f41b59df42f98cd3b3710f",
        "query": "query UpdatePaymentMethodForm() {\n  currentUser {\n    id\n    accountHealth {\n      isVerifiedEmail\n      isPhoneNumberVerified\n    }\n    paymentMethodConfigs {\n      recurly {\n        braintreeClientAuthorization\n        payWithAmazonConfigs {\n          clientID\n          isProduction\n          sellerID\n        }\n        publicKey\n      }\n    }\n  }\n}\n"
    },
    "UpdatePaymentMethodModal": {
        "hash": "26e1d4c888292ac1431be90157eb1622688eabdd038f1b49f891bc38e6eb881c",
        "query": "query UpdatePaymentMethodModal() {\n  currentUser {\n    id\n    paymentMethods {\n      provider\n      paymentType\n      billingEmail\n      billingUsername\n      cardType\n      lastFour\n      expirationMonth\n      expirationYear\n      recurringPaymentDetails {\n        willRenew\n      }\n    }\n  }\n}\n"
    },
    "AlertViewerCustomizationsCalloutBanner": {
        "hash": "b8ac77693fcaf882b01b9b888367386194208614bcd6c42f266eec40d93e9dd4",
        "query": "query AlertViewerCustomizationsCalloutBanner($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      alertViewerCustomizations {\n        ...alertViewerCustomizationsFragment\n      }\n      resubNotification {\n        id\n        token\n      }\n    }\n  }\n}\n"
    },
    "GiftRecipientSearchBar_SearchUsers": {
        "hash": "01389a0712f808d0c4fe7db8367587f8b9adf98603679acc8378160f217f5dca",
        "query": "query GiftRecipientSearchBar_SearchUsers($query: String!, $after: Cursor) {\n  searchUsers(userQuery: $query, first: 50, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        login\n        displayName\n        profileImageURL(width: 150)\n      }\n    }\n    pageInfo {\n      hasNextPage\n    }\n    totalCount\n  }\n}\n"
    },
    "CharityViewTabsQuery": {
        "hash": "be41eeb0d0c05493399cc9f6a277ab6f44851a9d0e9b50dd88acb733b81be3e2",
        "query": "query CharityViewTabsQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    subscriptionProducts {\n      id\n    }\n  }\n}\n"
    },
    "CharityPanelOffer_Query": {
        "hash": "d3ff83f0377898ce80983473708853083e68e14ce3a90887cbf3512d47943025",
        "query": "query CharityPanelOffer_Query($channelLogin: String!, $withEligibility: Boolean!) {\n  channel(name: $channelLogin) {\n    id\n    activeCharityCampaign {\n      id\n      offers(withEligibility: $withEligibility) {\n        ...charityOffer\n      }\n    }\n  }\n}\n"
    },
    "CharityPanel_PreviewWidgetQuery": {
        "hash": "84d8b21f131d8717923c4c4d95eb7ed8deef0d8ac3969d9ba587440cb83c18a2",
        "query": "query CharityPanel_PreviewWidgetQuery($login: String!, $charityID: ID!) {\n  user(login: $login) {\n    id\n    displayName\n  }\n  charity(id: $charityID) {\n    ...charity\n    offers {\n      ...charityOffer\n    }\n    ...charityCard\n  }\n}\n"
    },
    "CharityPanel_Query": {
        "hash": "b008af1d7b3c25bfa8a69dee843eeeb7c5b22cfb108200ab39e5e65cdb20c2ec",
        "query": "query CharityPanel_Query($login: String!, $withEligibility: Boolean) {\n  user(login: $login) {\n    id\n    displayName\n    channel {\n      id\n      activeCharityCampaign {\n        id\n        charities {\n          ...charity\n        }\n        goal {\n          id\n          contributionType\n          targetContributions\n          state\n        }\n        donationTotal\n        offers(withEligibility: $withEligibility) {\n          ...charityOffer\n        }\n      }\n    }\n    self {\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n}\n"
    },
    "SupportPanelCommunityGifting_GiftingOptions": {
        "hash": "34860a17eac390562176f4c4a32bed140dee18422366ba5dca9bc0560e8d0c18",
        "query": "query SupportPanelCommunityGifting_GiftingOptions($login: String!, $giftRecipientLogin: String, $withStandardGifting: Boolean, $withCheckoutPrice: Boolean) {\n  userResultByLogin(login: $login) {\n    ... on User {\n      id\n      subscriptionProductsResult {\n        ... on SubscriptionProductsConnection {\n          nodes {\n            ...subscriptionProduct\n            gifting {\n              community {\n                offer {\n                  ...productOfferCheckoutPrices\n                }\n              }\n            }\n          }\n        }\n        ... on SubscriptionProductsError {\n          code\n        }\n      }\n    }\n    ... on UserDoesNotExist {\n      key\n    }\n    ... on UserError {\n      key\n    }\n  }\n}\n"
    },
    "SupportPanelGiftingSectionChannelLookup": {
        "hash": "406560bd025e38beca475222848a2532c8da69b624b4ab4091aa583759bb271b",
        "query": "query SupportPanelGiftingSectionChannelLookup($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n  }\n}\n"
    },
    "GiftSubscriptionRewardPreviews": {
        "hash": "91e6f9d592bf2f6524ae23bf12ce5f2339424d76d236c7b404de3a8d8bd564bf",
        "query": "query GiftSubscriptionRewardPreviews($channelID: ID!, $quantity: Int!, $tier: Int!, $isAnonymous: Boolean!) {\n  rewardCampaignGiftPreviews(input: {tier: $tier, quantity: $quantity, isAnonymous: $isAnonymous, channelID: $channelID}) {\n    ...rewardCampaignPreview\n  }\n}\n"
    },
    "SupportPanelGifting_GifterBadgeProgressV2": {
        "hash": "b17ce044f6da0fd650e396c868878725e312587e4efefd72d37ad87815fc7340",
        "query": "query SupportPanelGifting_GifterBadgeProgressV2($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    self {\n      subscriptionGiftRewardProgress {\n        giftCount\n        milestones {\n          level\n          threshold\n          rewards {\n            type\n            identifier\n          }\n        }\n      }\n      gifterBadgeStatus {\n        version\n        isExpired\n        accessDurationRemainingSeconds\n        accessEnd\n      }\n    }\n  }\n}\n"
    },
    "SupportPanelCommunityGifting_GifterBadgeProgress": {
        "hash": "cfe91c27441dd4393c90227c00e3f82002674fc2ce987cc651bb106e14d9b08c",
        "query": "query SupportPanelCommunityGifting_GifterBadgeProgress($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    self {\n      subscriptionGiftCount\n    }\n  }\n  badges {\n    ...badge\n  }\n  currentUser {\n    id\n    subscriptionSettings {\n      isGiftCountHidden\n    }\n  }\n}\n"
    },
    "OneClickCheckout_CustomGiftingCheckoutPrice": {
        "hash": "2cf2918f3114243360814d0e7c8dfa1c4ba669501a031a47778c02791b2a1995",
        "query": "query OneClickCheckout_CustomGiftingCheckoutPrice($baseParams: PurchasableOfferParams!, $discountedParams: PurchasableOfferParams!, $quantity: Int!) {\n  purchasableOffer(params: $baseParams) {\n    id\n    listing {\n      chargeModel {\n        internal {\n          self {\n            checkoutPrice(quantity: $quantity, paymentProvider: RECURLY) {\n              errorCode\n              checkoutPriceSummary {\n                currency\n                exponent\n                id\n                description\n                pricingIdentifier\n                isTaxInclusive\n                price\n                tax\n                total\n                discount {\n                  price\n                  total\n                  tax\n                }\n              }\n            }\n          }\n          plan {\n            interval {\n              duration\n            }\n          }\n        }\n      }\n    }\n    promotion {\n      id\n      name\n      promoDisplay {\n        discountPercent\n        discountType\n      }\n      priority\n      endAt\n    }\n    quantity {\n      min\n      max\n    }\n  }\n  purchasableOffer(params: $discountedParams) {\n    id\n    listing {\n      chargeModel {\n        internal {\n          self {\n            checkoutPrice(quantity: $quantity, paymentProvider: RECURLY) {\n              errorCode\n              checkoutPriceSummary {\n                currency\n                exponent\n                id\n                description\n                pricingIdentifier\n                isTaxInclusive\n                price\n                tax\n                total\n                discount {\n                  price\n                  total\n                  tax\n                }\n              }\n            }\n          }\n          plan {\n            interval {\n              duration\n            }\n          }\n        }\n      }\n    }\n    promotion {\n      id\n      name\n      promoDisplay {\n        discountPercent\n        discountType\n      }\n      priority\n      endAt\n    }\n    quantity {\n      min\n      max\n    }\n  }\n}\n"
    },
    "SupportPanelSubscriptionDetails": {
        "hash": "25aaadc12a046691143fd91ea2ff2db44cff69527e199553bac04a6380a8d473",
        "query": "query SupportPanelSubscriptionDetails($login: String!, $includeExpiredDunning: Boolean, $giftRecipientLogin: String, $withStandardGifting: Boolean) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $login) {\n    id\n    login\n    self {\n      alertViewerCustomizations {\n        ...alertViewerCustomizationsFragment\n      }\n      subscriptionBenefit(includeExpiredDunning: $includeExpiredDunning) {\n        ...subBenefit\n        dunningPeriodEndsAt\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        daysRemaining\n        end\n      }\n      subscriptionTenure(tenureMethod: STREAK) {\n        months\n      }\n      resubNotification {\n        id\n        token\n      }\n    }\n    subscriptionProducts {\n      ...subscriptionProduct\n    }\n  }\n}\n"
    },
    "SupportPanelSingleGifting_UserInfo": {
        "hash": "05710ed691dac8acbb1e561f0f05e36a90bf638b981d62f57d6443e1f6a40655",
        "query": "query SupportPanelSingleGifting_UserInfo($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n  }\n}\n"
    },
    "SupportPanelSubscribeViewFooterPrime": {
        "hash": "5401841d3678dbee802cbc6c7624cc08d3f8b0d7c50584ae91c8e957738418c5",
        "query": "query SupportPanelSubscribeViewFooterPrime($login: String!, $giftRecipientLogin: String, $withStandardGifting: Boolean, $withCheckoutPrice: Boolean) {\n  userResultByLogin(login: $login) {\n    ... on User {\n      id\n      self {\n        subscriptionBenefit {\n          ...subBenefit\n        }\n      }\n      subscriptionProductsResult {\n        ... on SubscriptionProductsConnection {\n          nodes {\n            ...subscriptionPrimeProduct\n            offers {\n              ...productOfferCheckoutPrice\n            }\n          }\n        }\n        ... on SubscriptionProductsError {\n          code\n        }\n      }\n    }\n    ... on UserDoesNotExist {\n      key\n    }\n    ... on UserError {\n      key\n    }\n  }\n}\n"
    },
    "SupportPanelCommunityGifting_TenureBadgeProgress": {
        "hash": "865a120953f0abedc0e45fc0b2ee48d781ce0eb6368a78e57b09b582eab80d25",
        "query": "query SupportPanelCommunityGifting_TenureBadgeProgress($login: String!) {\n  user(login: $login) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n    channel {\n      id\n      displayName\n      founderBadgeAvailability\n    }\n    self {\n      isFounder\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n      subscriptionBenefit {\n        ...subBenefit\n      }\n      subscriptionTenure(tenureMethod: STREAK) {\n        ...tenure\n      }\n    }\n  }\n  badges {\n    ...badge\n  }\n}\n"
    },
    "SupportPanelTitleSectionAvatar": {
        "hash": "f1f226b7a9285eb986a8f865e8714c40ace9a3bac385c36bb1a26fda9e21348e",
        "query": "query SupportPanelTitleSectionAvatar($login: String!, $avatarSize: Int) {\n  user(login: $login) {\n    id\n    primaryColorHex\n    profileImageURL(width: $avatarSize)\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "SupportPanelTitleSectionIsVerified": {
        "hash": "50c43ff56660a117e535055c1f26369f252ef46d71054c64fab8ae82b8ae7fe4",
        "query": "query SupportPanelTitleSectionIsVerified($login: String!) {\n  user(login: $login) {\n    id\n    roles {\n      isPartner\n    }\n  }\n}\n"
    },
    "SupportPanelCommunituyGifting_UserInfo": {
        "hash": "1b4c518ca7ca579d40fbd09454d9a59caebd5d4d05d75a502952288af8f9d6f3",
        "query": "query SupportPanelCommunituyGifting_UserInfo($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n  }\n}\n"
    },
    "SupportPanelCheckoutService": {
        "hash": "2f9a1b9b5923b2e12994e684503ba24e3e6d30102652c0d8e6a41de751bbc2a7",
        "query": "query SupportPanelCheckoutService($login: String!, $giftRecipientLogin: String, $withStandardGifting: Boolean) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      ...subscriptionProduct\n    }\n  }\n}\n"
    },
    "SupportPanelTrackingService": {
        "hash": "70cf7ccffe14ab316ae72468c0027585508bc309c3b04ecde427277cbaf553aa",
        "query": "query SupportPanelTrackingService($login: String!, $CSBTrackingFlagEnabled: Boolean!) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      founderBadgeAvailability\n      customSubBenefits(state: ACTIVE) @include(if: $CSBTrackingFlagEnabled) {\n        id\n      }\n      goals(states: [ACTIVE]) {\n        edges {\n          node {\n            ...channelGoalFragment\n          }\n        }\n      }\n    }\n    self {\n      canPrimeSubscribe\n      isFounder\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n      subscriptionTenure(tenureMethod: STREAK) {\n        ...tenure\n      }\n      subscriptionBenefit {\n        ...subBenefit\n      }\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "PrimeSubscribe_UserPrimeData": {
        "hash": "3221b9339b465b38c0e912b4c3dfebdd6a96070345b6049ae5f5f0013c288eef",
        "query": "query PrimeSubscribe_UserPrimeData($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      canPrimeSubscribe\n      primeSubCreditBenefit {\n        willRenew\n        renewalDate\n      }\n      subscriptionBenefit {\n        id\n        purchasedWithPrime\n        tier\n        platform\n        renewsAt\n        endsAt\n        paidUpgrade {\n          price\n          startsAt\n        }\n        gift {\n          isGift\n          gifter {\n            id\n            displayName\n          }\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n    hasPrime\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "QuickActionsSubOnlyChatQuery": {
        "hash": "7fd94c9a441c19199bc363ac69671a511adf2f455e4de64bf41d7f2843d80be0",
        "query": "query QuickActionsSubOnlyChatQuery($login: String!) {\n  user(login: $login) {\n    id\n    chatSettings {\n      isSubscribersOnlyModeEnabled\n    }\n  }\n}\n"
    },
    "SetCustomSubBenefit": {
        "hash": "bfefbb7535e339e4a96d4c8a3a035532fef8098773aab931a286d87d8201ed57",
        "query": "mutation SetCustomSubBenefit($input: SetCustomSubBenefitInput!) {\n  setCustomSubBenefit(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SharedPromotionsToggle_SetSharedPromotionsCreatorMonetizationSetting": {
        "hash": "b3dec186a49eef61b9f1292f2eff24428ca15f6d35504a3db82d0ac07a27c036",
        "query": "mutation SharedPromotionsToggle_SetSharedPromotionsCreatorMonetizationSetting($input: SetSharedPromotionsCreatorMonetizationSettingInput!) {\n  setSharedPromotionsCreatorMonetizationSetting(input: $input) {\n    creatorMonetizationSettings {\n      hasSharedPromotions\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SubsSettingsSection_Query": {
        "hash": "3462a6c054e19d48612869b886665f8576f970ae6e2551e2cb9c7c74f527bfa6",
        "query": "query SubsSettingsSection_Query($login: String!) {\n  user(login: $login) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    subscriptionProducts {\n      id\n      hasAdFree\n      hasFastChat\n      hasSubonlyVideoArchive\n      hasSubOnlyChat\n    }\n    payoutPlans {\n      tags\n    }\n    stream {\n      id\n    }\n    settings {\n      creatorMonetizationSettings {\n        hasSharedPromotions\n      }\n    }\n  }\n}\n"
    },
    "SubsSettingsSection_UpdateAdsProperties": {
        "hash": "c82eff3089d5b1bb896fd1edc263747052e7df4dbc71eb34de227c5f648005d3",
        "query": "mutation SubsSettingsSection_UpdateAdsProperties($input: UpdateAdPropertiesInput!) {\n  updateAdProperties(input: $input) {\n    targetUser {\n      id\n    }\n  }\n}\n"
    },
    "SubsSettingsSection_UpdateSubscriptionProduct": {
        "hash": "a87c38d8a9eaa5011a9b323bf6113608ef8064da603056b5a12c28da4c57a018",
        "query": "mutation SubsSettingsSection_UpdateSubscriptionProduct($input: UpdateSubscriptionProductInput!) {\n  updateSubscriptionProduct(input: $input) {\n    product {\n      id\n      hasAdFree\n      hasFastChat\n      hasSubonlyVideoArchive\n      hasSubOnlyChat\n    }\n  }\n}\n"
    },
    "MwebFollowedOfflineChannelsQuery": {
        "hash": "0f3a39003cf3177e27698535aa53ddb1c41b8ccd26b2c993bc849b556d6dddd0",
        "query": "fragment MwebFollowedOfflineChannelsFollowEdge on FollowEdge {\n  cursor\n  node {\n    id\n    login\n    displayName\n    lastBroadcast {\n      id\n      startedAt\n    }\n    profileImageURL(width: 50)\n    stream {\n      id\n    }\n    roles {\n      isPartner\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n  }\n}\n\nquery MwebFollowedOfflineChannelsQuery($first: Int!, $after: Cursor, $includeIsDJ: Boolean!) {\n  user {\n    id\n    follows(first: $first, after: $after) {\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n      edges {\n        ...MwebFollowedOfflineChannelsFollowEdge\n      }\n    }\n  }\n}\n"
    },
    "MwebFollowingPageQuery": {
        "hash": "f4340500623a65f6b40506973b5b1225a1eb1f287187de6fc91765cbf9425b04",
        "query": "query MwebFollowingPageQuery($requestID: ID!, $location: String!, $context: RecommendationsContext!, $includeIsDJ: Boolean!) {\n  user {\n    id\n    ...MwebFollowedLiveChannelsFragment\n    ...MwebFollowedCategoriesFragment\n    ...MwebVodsWatchedFragment\n  }\n  ...MwebRecommendedChannelsQueryFragment\n}\n"
    },
    "MwebFrontPageQuery": {
        "hash": "5a513956ed268083ccd39b03a0d6fc7af799b18184badd63b815e984ce4aeba4",
        "query": "fragment mwebFrontPageShelfTitleToken on TitleTokenNode {\n  ... on Tag {\n    id\n  }\n  ... on User {\n    id\n  }\n  ... on Game {\n    id\n    name\n    displayName\n    slug\n  }\n  ... on TextToken {\n    text\n    hasEmphasis\n    location\n  }\n  ... on BrowsableCollection {\n    id\n    slug\n    name {\n      fallbackLocalizedTitle\n    }\n  }\n}\n\nfragment mwebFrontPageShelfTitle on ShelfTitle {\n  key\n  fallbackLocalizedTitle\n  localizedTitleTokens {\n    node {\n      ...mwebFrontPageShelfTitleToken\n    }\n  }\n}\n\nquery MwebFrontPageQuery($requestID: String!, $platform: String!, $itemsPerRow: Int!, $first: Int!, $after: Cursor, $includeIsDJ: Boolean!) {\n  shelves(requestID: $requestID, platform: $platform, itemsPerRow: $itemsPerRow, first: $first, after: $after) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        title {\n          ...mwebFrontPageShelfTitle\n        }\n        content {\n          edges {\n            trackingID\n            node {\n              ... on Tag {\n                id\n              }\n              ... on Video {\n                id\n              }\n              ... on Game {\n                id\n                ...MwebGameCard\n              }\n              ... on Stream {\n                id\n                ...MwebStreamCard\n              }\n              ... on Clip {\n                id\n                ...MwebClipCard\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "CreateQuestReward": {
        "hash": "cf95eadded1684eca6f3f4816728c25b0ea8fff0076523a2b01aaff7c28ec426",
        "query": "mutation CreateQuestReward($input: CreateQuestRewardInput!) {\n  createQuestReward(input: $input) {\n    error {\n      code\n      message\n    }\n    questReward {\n      ...devQuestRewardFragment\n    }\n  }\n}\n"
    },
    "UpdateQuestReward": {
        "hash": "a11643d198eaa95d39da16435c2f1338e992ce4bb7b3c5316ba88206e183de80",
        "query": "mutation UpdateQuestReward($input: UpdateQuestRewardInput!) {\n  updateQuestReward(input: $input) {\n    error {\n      code\n      message\n    }\n    questReward {\n      ...devQuestRewardFragment\n    }\n  }\n}\n"
    },
    "TOS_Banner_Update_Consent": {
        "hash": "24cdfe1e44e2a13ad88418dce8a386d99c27fc529f35213e168e418bc6503ab7",
        "query": "mutation TOS_Banner_Update_Consent($userID: ID!, $update: [UserProductConsentInput!]!) {\n  updateUserProductConsent(input: {userID: $userID, productConsentUpdate: $update}) {\n    user {\n      id\n      productConsent {\n        ... on ProductConsentError {\n          code\n        }\n        ... on UserConsent {\n          ...userConsent\n        }\n      }\n    }\n    errorCode\n  }\n}\n"
    },
    "ProductConsent": {
        "hash": "e7146558005973fe2108aa166612cf567cbe2109e255e091bfbe5c8810409739",
        "query": "query ProductConsent() {\n  currentUser {\n    id\n    createdAt\n    productConsent {\n      ... on ProductConsentError {\n        code\n      }\n      ... on UserConsent {\n        ...userConsent\n      }\n    }\n  }\n}\n"
    },
    "CreateQuestCampaign": {
        "hash": "c77972ecf44d969c427c22279568bc88a11873617b7c37e76626136390252c7d",
        "query": "mutation CreateQuestCampaign($input: CreateQuestCampaignInput!) {\n  createQuestCampaign(input: $input) {\n    questCampaign {\n      id\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "DeleteQuestCampaign": {
        "hash": "7b2d815e84a0d9089aafe0af87982a3e07a0b40bc3b2725d41395c5fd0dcce26",
        "query": "mutation DeleteQuestCampaign($input: DeleteQuestCampaignInput!) {\n  deleteQuestCampaign(input: $input) {\n    error {\n      message\n      code\n    }\n  }\n}\n"
    },
    "GetQuestCampaignsByOrg": {
        "hash": "5ba44514f8819a4f782167a20378822e407c243a9a8deaabd7812c59eb984a04",
        "query": "query GetQuestCampaignsByOrg($orgID: ID!) {\n  organization(id: $orgID) {\n    id\n    quests {\n      campaigns {\n        ...devQuestCampaignFragment\n      }\n    }\n  }\n}\n"
    },
    "FeaturedClipsShelfCover": {
        "hash": "c7262328fcf63d81382ed827adae4540651d5cc4a62118a39b6cce4033c02239",
        "query": "query FeaturedClipsShelfCover($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    subscriptionProducts {\n      id\n      emotes {\n        id\n        assetType\n        order\n        subscriptionTier\n        token\n      }\n    }\n  }\n}\n"
    },
    "CollectionCarouselQuery": {
        "hash": "8ca3c54aab7341983136207a99f1ce2c2b3c0258061915e847213a3483021166",
        "query": "query CollectionCarouselQuery($collectionID: ID!, $first: Int!, $cursor: Cursor, $includePreviewBlur: Boolean) {\n  collection(id: $collectionID) {\n    items(first: $first, after: $cursor) {\n      ...CollectionConnectionFields\n    }\n    ...CollectionFields\n  }\n}\n"
    },
    "ChannelVideoShelvesQuery": {
        "hash": "9f74fac2328813ddfa1e864cc1413fad9a77b2e184cc4ecadd0d9971272d6929",
        "query": "query ChannelVideoShelvesQuery($channelLogin: String!, $first: Int!, $cursor: Cursor, $options: ShelvesOptions, $includePreviewBlur: Boolean) {\n  currentUser {\n    id\n  }\n  user(login: $channelLogin) {\n    id\n    displayName\n    primaryColorHex\n    videoShelves(first: $first, after: $cursor, options: $options) {\n      edges {\n        ...VideoShelfEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "BadgesPage_Query": {
        "hash": "1661f40bd7ab57ade92ed1f4b7ad086f1db15dd9a808d77390a396571b254502",
        "query": "query BadgesPage_Query($userID: ID!) {\n  user(id: $userID) {\n    id\n    loyaltyBadges {\n      ...loyaltyBadge\n    }\n    channel {\n      id\n      creatorBadgeFlair {\n        setting\n        assets {\n          ...badgeFlairAsset\n        }\n      }\n    }\n    roles {\n      isAffiliate\n      isPartner\n    }\n    login\n    isInEmoteGoodStanding\n    settings {\n      cheer {\n        id\n        badges {\n          tiers {\n            ...bitsBadgeTier\n          }\n          canUploadBadgeTierEmoticons\n        }\n      }\n    }\n    emoticonPrefix {\n      name\n      state\n    }\n    relationship(targetUserID: $userID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        daysRemaining\n        months\n      }\n    }\n  }\n}\n"
    },
    "MwebDirectoryGameRedirect": {
        "hash": "8bfda584497ae4bf70c94103ea508acd556e088cc2c3adba29e6c6d7a48e672e",
        "query": "query MwebDirectoryGameRedirect($name: String!) {\n  game(name: $name) {\n    id\n    slug\n  }\n}\n"
    },
    "PartnerPlusPublicQuery": {
        "hash": "97ce728c3a8e7acbe44c0d1a8367088bca23cff207aa6b1303dea4f69d87a6e4",
        "query": "query PartnerPlusPublicQuery($channelID: ID!) {\n  plusStatus(channelID: $channelID) {\n    partnerPlusProgram {\n      isQualified\n      threshold\n      canShowWidget\n      subPoints {\n        year\n        month\n        count\n        updatedAt\n      }\n      widgetSetting\n    }\n    creatorPartnerPlusWidgetSetting {\n      isEnabled\n    }\n  }\n}\n"
    },
    "CreateSocialMedia": {
        "hash": "7d4cef1092283f4a40786f78cb88cd80ea4c2098e2385705698a51ba3759c8e6",
        "query": "mutation CreateSocialMedia($input: CreateSocialMediaInput!) {\n  createSocialMedia(input: $input) {\n    error\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n    }\n  }\n}\n"
    },
    "RemoveSocialMedia": {
        "hash": "b7778aff5fb0fa9024d1c10c83826003ec331356688a82d358c707de7319046d",
        "query": "mutation RemoveSocialMedia($input: DeleteSocialMediaInput!) {\n  deleteSocialMedia(input: $input) {\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n    }\n  }\n}\n"
    },
    "SocialMedia": {
        "hash": "377ac3a3f55a34210739f7fc18a6cff187197dfd22cab9d85d204c1987a44101",
        "query": "query SocialMedia($channelID: ID) {\n  user(id: $channelID) {\n    id\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n    }\n  }\n}\n"
    },
    "UpdateSocialMedia": {
        "hash": "5e1edb687940dbc143331e9df44f57ed6bc34d8b818a57b5d91a0a415440b588",
        "query": "mutation UpdateSocialMedia($input: UpdateSocialMediaInput!) {\n  updateSocialMedia(input: $input) {\n    error\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n    }\n  }\n}\n"
    },
    "SubscribedContext": {
        "hash": "1cd1ec2f1f5be70caa6f8ee422ebbfe1a92d9b9a6f6191cfd0ead27d300c865c",
        "query": "query SubscribedContext($id: ID, $login: String) {\n  user(id: $id, login: $login) {\n    id\n    self {\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n}\n"
    },
    "ChannelRoot_AboutPanel": {
        "hash": "0df42c4d26990ec1216d0b815c92cc4a4a806e25b352b66ac1dd91d5a1d59b80",
        "query": "query ChannelRoot_AboutPanel($channelLogin: String!, $skipSchedule: Boolean!, $includeIsDJ: Boolean!) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $channelLogin) {\n    id\n    description\n    displayName\n    primaryColorHex\n    profileImageURL(width: 300)\n    followers {\n      totalCount\n    }\n    roles {\n      isPartner\n      isAffiliate\n      isStaff\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n    channel {\n      id\n      socialMedias {\n        ...SocialMedia\n      }\n      schedule @skip(if: $skipSchedule) {\n        id\n        nextSegment {\n          id\n          startAt\n          hasReminder\n        }\n      }\n    }\n    lastBroadcast {\n      id\n      game {\n        id\n        displayName\n      }\n    }\n    primaryTeam {\n      id\n      name\n      displayName\n    }\n    videos(first: 30, sort: TIME, type: ARCHIVE) {\n      edges {\n        ...userBioVideo\n      }\n    }\n  }\n}\n\nfragment userBioVideo on VideoEdge {\n  node {\n    id\n    game {\n      id\n      displayName\n    }\n    status\n  }\n}\n\nfragment SocialMedia on SocialMedia {\n  id\n  name\n  title\n  url\n}\n"
    },
    "Settings_ProfilePage_AccountInfoSettings": {
        "hash": "16f1c220c373dc79ed7cf9d14c2f65bdb10d497ce73a00ba8dd6e1aa7f3eb08a",
        "query": "query Settings_ProfilePage_AccountInfoSettings() {\n  currentUser {\n    ...profileUser\n  }\n}\n"
    },
    "UpdateUserProfile": {
        "hash": "22adc82afc3e721d2ca47c5cbc1280952032d927d89906917c76acf019a35719",
        "query": "mutation UpdateUserProfile($input: UpdateUserInput!) {\n  updateUser(input: $input) {\n    user {\n      ...profileUser\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UserEmoticonPrefix_Query": {
        "hash": "0d98fcb39539456eff47b9c4de084962eed32d28fb621fe67a19254c6d8e0a08",
        "query": "query UserEmoticonPrefix_Query() {\n  currentUser {\n    id\n    login\n    emoticonPrefix {\n      name\n      state\n      isEditable\n    }\n    roles {\n      ...userRole\n    }\n  }\n}\n"
    },
    "UsernameRenameStatus": {
        "hash": "0f26c2848543e119b17fad78ca6b124e4eb2457e35bd94214f29abd2613971e5",
        "query": "query UsernameRenameStatus() {\n  currentUser {\n    id\n    loginRenameStatus {\n      isEligible\n      eligibleAt\n    }\n  }\n}\n"
    },
    "DashboardChannelSettings": {
        "hash": "a2e3619b2a72da23da0e3b0bf65c39de34c59cb74223bc292f35fe2c6992a377",
        "query": "query DashboardChannelSettings($channelLogin: String!) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $channelLogin) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n      isStaff\n    }\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "ArtistAttributionChannels": {
        "hash": "1ac863f7c44902dc413d7472e09abf851845d7da1235ba248519d07f173ad0d1",
        "query": "query ArtistAttributionChannels($limit: Int!, $cursor: Cursor) {\n  emoteAttributionChannels(first: $limit, after: $cursor) {\n    ...attributionChannelConnection\n  }\n}\n"
    },
    "ArtistAttribution_UpdateChannelSetting": {
        "hash": "f5469293a14389741f8203295ac5e715f583e51ddb59d491f87326a680288a45",
        "query": "mutation ArtistAttribution_UpdateChannelSetting($input: UpdateChannelEmoteAttributionSettingsInput!) {\n  updateChannelEmoteAttributionSettings(input: $input) {\n    channel {\n      ...attributionChannelFragment\n    }\n  }\n}\n"
    },
    "ArtistAttribution_UpdateEmote": {
        "hash": "80ead4e6dd8d8085963b4ee1eb477408ef1155485a1c1b24040cb78b96ea0775",
        "query": "mutation ArtistAttribution_UpdateEmote($input: UpdateEmoteAttributionStateInput!) {\n  updateEmoteAttributionState(input: $input) {\n    emoteArtistAttribution {\n      id\n      state\n    }\n  }\n}\n"
    },
    "ArtistAttribution_UpdateGlobalSetting": {
        "hash": "90f25d7ec58729718aa081eee9ac67d6c85f48125c3553c5a36bc496b4eee99e",
        "query": "mutation ArtistAttribution_UpdateGlobalSetting($input: UpdateGlobalEmoteAttributionSettingsInput!) {\n  updateGlobalEmoteAttributionSettings(input: $input) {\n    emoteAttributionChannels {\n      ...attributionChannelConnection\n    }\n  }\n}\n"
    },
    "AcknowledgeUnbanRequestPrompt": {
        "hash": "739cb0369c46dae709b6a3de95b0791c9a99776801cb107d7d8378c09d2bfd54",
        "query": "query AcknowledgeUnbanRequestPrompt($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "AcknowledgeUnbanRequest": {
        "hash": "9e3123dd76877d8194ae87e5f42a9163add13adbe20f3b5d2e6d999a94c373a0",
        "query": "mutation AcknowledgeUnbanRequest($input: AcknowledgeUnbanRequestInput!) {\n  acknowledgeUnbanRequest(input: $input) {\n    unbanRequest {\n      id\n      status\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChannelVideosContent_Game": {
        "hash": "4a2397fb8cc85a25d02b0a5caf73459aa8883a3ffed6881b2a2ac5a541be1fe5",
        "query": "query ChannelVideosContent_Game($categoryID: ID!) {\n  game(id: $categoryID) {\n    id\n    displayName\n    name\n  }\n}\n"
    },
    "WebShareMetadataQuery": {
        "hash": "1891d9128ad30ff3b7b60fc092d6bba8c175eb115b4740454804122cb52197ea",
        "query": "query WebShareMetadataQuery($url: String!) {\n  urlMetadata(url: $url) {\n    share {\n      title\n      url\n    }\n  }\n}\n"
    },
    "ChannelLayout": {
        "hash": "e8b8b2180c901839a225e6e75f6dff31992f2319cda136a6dfe211c6e4d81c2d",
        "query": "query ChannelLayout($channelLogin: String!, $includeIsDJ: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    ...ChannelProfileInfo\n  }\n}\n\nfragment ChannelProfileInfo on User {\n  id\n  ...ChannelFollowers\n  ...ChannelAvatar\n  ...ChannelCover\n  ...ChannelStatus\n  ...ChannelName\n  ...ChannelDescription\n  ...SocialMediaLinks\n  ...MWebSubscribeButtonFragment\n}\n\nfragment ChannelFollowers on User {\n  id\n  followers {\n    totalCount\n  }\n}\n\nfragment ChannelAvatar on User {\n  id\n  login\n  displayName\n  primaryColorHex\n  profileImageURL(width: 150)\n}\n\nfragment ChannelCover on User {\n  id\n  displayName\n  bannerImageURL\n  primaryColorHex\n}\n\nfragment ChannelStatus on User {\n  id\n  lastBroadcast {\n    id\n    startedAt\n    game {\n      id\n      displayName\n    }\n  }\n  stream {\n    id\n    createdAt\n    game {\n      id\n      displayName\n    }\n    type\n    viewersCount\n  }\n}\n\nfragment ChannelName on User {\n  id\n  displayName\n  login\n  roles {\n    isPartner\n    isParticipatingDJ @include(if: $includeIsDJ)\n  }\n}\n\nfragment ChannelDescription on User {\n  id\n  login\n  displayName\n  description\n  lastBroadcast {\n    id\n    game {\n      id\n      displayName\n    }\n  }\n  videos(first: 30) {\n    edges {\n      node {\n        id\n        game {\n          id\n          displayName\n        }\n      }\n    }\n  }\n}\n\nfragment SocialMediaLinks on User {\n  id\n  channel {\n    id\n    socialMedias {\n      id\n      name\n      title\n      url\n    }\n  }\n}\n"
    },
    "exportClipToInstagram": {
        "hash": "02b01ee429cee0edeaf8018e17efe9b62e6165eb6470a566132e143e26414b58",
        "query": "mutation exportClipToInstagram($input: ExportClipInstagramInput!) {\n  exportClipInstagram(input: $input) {\n    error\n  }\n}\n"
    },
    "GetInstagramConnection": {
        "hash": "9b8effc1049d142b388b8ed77d3c467efa3db24b2837dfee1e621025cbb803db",
        "query": "query GetInstagramConnection($id: ID!) {\n  user(id: $id) {\n    id\n    accountConnections {\n      instagram {\n        username\n      }\n    }\n  }\n}\n"
    },
    "GetInstagramExportStatus": {
        "hash": "3ec76d4fa6e9bf780f4825807b94877d6c59af15e447a79135835de6eebce91b",
        "query": "query GetInstagramExportStatus($clipSlug: ID!, $clipAssetID: ID!) {\n  clipExportStatus(clipSlug: $clipSlug, clipAssetID: $clipAssetID) {\n    id\n    instagramExport {\n      state\n      url\n    }\n  }\n}\n"
    },
    "GetInstagramHandle": {
        "hash": "f0db1e554d98b846df8fc7ec8192be4707927696a11aa446e9bd8b1df0666c17",
        "query": "query GetInstagramHandle($userID: ID!) {\n  userPublicThirdPartyAccounts(userID: $userID) {\n    instagramHandle\n  }\n}\n"
    },
    "GetTikTokExportStatus": {
        "hash": "6724a5c898af9b5c2be487361d76ee8a13e24bdbb5558f823d94b3ef12bec2ac",
        "query": "query GetTikTokExportStatus($clipSlug: ID!, $clipAssetID: ID!) {\n  clipExportStatus(clipSlug: $clipSlug, clipAssetID: $clipAssetID) {\n    id\n    tikTokExport {\n      state\n      url\n    }\n  }\n}\n"
    },
    "GetTikTokVideoDefaults": {
        "hash": "0ec111854faffc134b4652a06c6cd492bb2ebdfbb8abc971964ab6c7989c7558",
        "query": "query GetTikTokVideoDefaults($userID: ID!) {\n  tikTokVideoDefaults(userID: $userID) {\n    creatorUsername\n    creatorNickname\n    privacyOptions\n    isCommentsEnabled\n    isDuetEnabled\n    isStitchEnabled\n    error\n  }\n}\n"
    },
    "exportClipToYouTube": {
        "hash": "429a8806bba41ed293f05fd136cb297aa27a50495bbe4a69b0951eb9c29830b1",
        "query": "mutation exportClipToYouTube($input: ExportClipYouTubeInput!) {\n  exportClipYouTube(input: $input) {\n    error\n  }\n}\n"
    },
    "GetYouTubeConnection": {
        "hash": "817a7f8edede347596d31bc4b8fc5ff05d763d0c0afb19b514cc974d4d523213",
        "query": "query GetYouTubeConnection($id: ID!) {\n  user(id: $id) {\n    id\n    accountConnections {\n      youtube {\n        channelURL\n      }\n    }\n  }\n  userPublicThirdPartyAccounts(userID: $id) {\n    youtubeHandle\n  }\n}\n"
    },
    "GetYouTubeExportStatus": {
        "hash": "ee4c2c828e9b638e7eef9b770cd3f346fd5c4249027e4bd0e0088665a8bbb2cc",
        "query": "query GetYouTubeExportStatus($clipSlug: ID!, $clipAssetID: ID!) {\n  clipExportStatus(clipSlug: $clipSlug, clipAssetID: $clipAssetID) {\n    id\n    youTubeExport {\n      state\n      url\n    }\n  }\n}\n"
    },
    "ClipContent_Editor": {
        "hash": "55776c1a8393f73bca8f9968b36dca6650a23d385ffe2dfbfea74e18c5c0f9fa",
        "query": "query ClipContent_Editor($slug: ID!) {\n  clip(slug: $slug) {\n    ...contentClipsManagerClip\n  }\n}\n"
    },
    "ClipMetadataBroadcastInfoQuery": {
        "hash": "277cb43ac2866888b5235e4cd34ad1c9dc7a63263886e937bd104149c4a364ef",
        "query": "query ClipMetadataBroadcastInfoQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    broadcastSettings {\n      id\n      game {\n        id\n        displayName\n      }\n    }\n  }\n}\n"
    },
    "ClipMetadataVodInfoQuery": {
        "hash": "cdf377e4f7311a964c166d41aa90178ee0c2d2ca523dc4b637b9a84bc29ec4b0",
        "query": "query ClipMetadataVodInfoQuery($vodID: ID!) {\n  video(id: $vodID) {\n    id\n    creator {\n      id\n      displayName\n      profileImageURL(width: 70)\n    }\n    game {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "ClipCreation_CreateClipFromRawMedia": {
        "hash": "af3f9985ed3aabd6f01dafd961038a4b0b890c610c509dfb988cedb7b8c2a01d",
        "query": "mutation ClipCreation_CreateClipFromRawMedia($input: CreateClipFromRawMediaInput!) {\n  createClipFromRawMedia(input: $input) {\n    clip {\n      ...clipCreateAndEditFragment\n    }\n    error\n  }\n}\n"
    },
    "ClipEdit_EditClipMedia": {
        "hash": "f615af79fbe2d4de019bf430bede51c267ecfc4c35857b01fec666121f17f2a2",
        "query": "mutation ClipEdit_EditClipMedia($input: EditClipMediaInput!) {\n  editClipMedia(input: $input) {\n    clip {\n      ...clipCreateAndEditFragment\n    }\n    error\n  }\n}\n"
    },
    "ShareClipRenderStatus": {
        "hash": "a63939fd95dbb37815f5726973aaaadf2e06d4411c51a2e81a872ac4c24290bb",
        "query": "query ShareClipRenderStatus($slug: ID!) {\n  clip(slug: $slug) {\n    ...contentClipsManagerClip\n  }\n}\n"
    },
    "ContentClipsManagerPolling_Clip": {
        "hash": "bedb473d2a2e28d216da8f62b8ec9dd62ecbbd94cb384c9b210b1ea0e250875b",
        "query": "query ContentClipsManagerPolling_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    ...contentClipsManagerClip\n  }\n}\n"
    },
    "ContentClipsManager_User": {
        "hash": "6694f2a70e618ca9fb4ad495a041b629e80e6f0f4353f9b777cd5e300ee4a0d7",
        "query": "query ContentClipsManager_User($login: String!, $limit: Int, $cursor: Cursor, $criteria: UserClipsInput, $includeReferrals: Boolean, $includeGuestsStarParticipants: Boolean, $referralsParams: ClipReferralsParams) {\n  user(login: $login) {\n    id\n    displayName\n    clips(first: $limit, after: $cursor, criteria: $criteria) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          ...contentClipsManagerClip\n          guestStarParticipants @include(if: $includeGuestsStarParticipants) {\n            ...clipGuests\n          }\n          referrals(params: $referralsParams) @include(if: $includeReferrals) {\n            ...clipReferrals\n          }\n        }\n      }\n    }\n    self {\n      isEditor\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "CanViewersExportQuery": {
        "hash": "eebc74fec7bd57c21904d916aa9bd0db3bf83ff1453fcec6835abf187c523dcc",
        "query": "query CanViewersExportQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      clipsSettings {\n        isClipsCreationEnabled\n        isViewerExportsEnabled\n      }\n    }\n  }\n}\n"
    },
    "modifyLastUpdatedRoleOnClip": {
        "hash": "43dc819fbba326410569d1106826be4c9d235e7540c5bea8ac8485acff3a2ae4",
        "query": "mutation modifyLastUpdatedRoleOnClip($input: ModifyLastUpdatedRoleOnClipInput!) {\n  modifyLastUpdatedRoleOnClip(input: $input) {\n    slug\n  }\n}\n"
    },
    "Clips_ModalDelete": {
        "hash": "459ccf82f59cb66562deb7808e503ed887b4e1bf6c4e20bb6a0127c006dad1df",
        "query": "query Clips_ModalDelete($slug: ID!) {\n  clip(slug: $slug) {\n    ...clipModalFragment\n  }\n}\n"
    },
    "FeatureClips_UpdateClips": {
        "hash": "32ee4ff5344360cbde89c3fa25cad7590fa6b10843f8ea57e5f8817871702ab1",
        "query": "mutation FeatureClips_UpdateClips($input: UpdateFeaturedClipsInput!) {\n  updateFeaturedClips(input: $input) {\n    results {\n      slug\n      error\n      clip {\n        id\n        isFeatured\n      }\n    }\n  }\n}\n"
    },
    "FeatureClips_FeatureSettings": {
        "hash": "4766fdc50d34d271078ee81a1d16edbd84dc1bd376a1bf480a491fd3ddac43f3",
        "query": "query FeatureClips_FeatureSettings($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      clipsSettings {\n        isClipsFeatureToggleDefaultEnabled\n        featuringRestrictedTo {\n          shouldAllowMods\n        }\n      }\n    }\n  }\n}\n"
    },
    "Clips_DeleteClips": {
        "hash": "6fe700e720483f930551fdd7c7370906a534415e2e0c52cd371aad789c5fd1eb",
        "query": "mutation Clips_DeleteClips($input: DeleteClipsInput!) {\n  deleteClips(input: $input) {\n    clips {\n      id\n      slug\n    }\n  }\n}\n"
    },
    "canShareChannelClipInStory": {
        "hash": "aeac0ba2d8b1fa4436741cd3bfc31e5e98796e24bc83fa46b1e0d709e1718cfb",
        "query": "query canShareChannelClipInStory($channelId: ID!) {\n  canShareChannelClipInStory(channelID: $channelId) {\n    isAllowed\n  }\n}\n"
    },
    "exportClipToStoriesMutation": {
        "hash": "379e08e61001e32e36c1da518aad73f9527b750fafee91a65f81f898665e5b3a",
        "query": "mutation exportClipToStoriesMutation($input: ExportClipToStoriesInput!) {\n  exportClipToStories(input: $input) {\n    error\n  }\n}\n"
    },
    "CategoryFilterDropdownSearch": {
        "hash": "da97aa326ff74e5207a82086be11f01d61fee7a5e4b61e80619f7aca9896ea1b",
        "query": "fragment CategoryFilterDropdownSearchFragment on Game {\n  boxArtURL(width: 144, height: 192)\n  displayName\n  id\n  name\n}\n\nfragment CategoryFilterDropdownSearchEdgeFragment on SearchCategoriesEdge {\n  cursor\n  node {\n    ...CategoryFilterDropdownSearchFragment\n  }\n}\n\nquery CategoryFilterDropdownSearch($query: String!, $after: Cursor) {\n  searchCategories(query: $query, first: 100, after: $after) {\n    edges {\n      ...CategoryFilterDropdownSearchEdgeFragment\n    }\n  }\n}\n"
    },
    "CreatorCollaborationChannelData": {
        "hash": "67bd305f0347f38a904c2c5b495fc0a61954996d563df801bd8ef77357455537",
        "query": "query CreatorCollaborationChannelData($channelID: ID!, $targetChannelID: ID!) {\n  user(id: $channelID) {\n    id\n    relationship(targetUserID: $targetChannelID) {\n      followedAt\n      followedByAt\n      subscriptionBenefit {\n        id\n        gift {\n          isGift\n        }\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        months\n        daysRemaining\n        elapsedDays\n      }\n      raidHistory {\n        source {\n          timesRaided\n          lastRaidedAt\n          peakRaiders\n        }\n        target {\n          timesRaided\n          lastRaidedAt\n          peakRaiders\n        }\n      }\n    }\n  }\n  user(id: $targetChannelID) {\n    id\n    channel {\n      id\n      activeStreamEventCelebration {\n        id\n        isSnoozed\n        occursAt\n      }\n      schedule {\n        id\n        segmentList(first: 1) {\n          edges {\n            node {\n              id\n              startAt\n              endAt\n            }\n          }\n        }\n      }\n      guestStarSessionCall {\n        id\n        host {\n          id\n        }\n        guests {\n          id\n          slotID\n        }\n      }\n      activeCharityCampaign {\n        id\n      }\n    }\n    stream {\n      id\n      createdAt\n      contentClassificationLabels {\n        id\n        localizedName\n      }\n      isStreamDropsEnabled\n      freeformTags {\n        id\n        name\n      }\n      viewersCount\n      game {\n        id\n        displayName\n      }\n    }\n    relationship(targetUserID: $channelID) {\n      subscriptionBenefit {\n        id\n        gift {\n          isGift\n        }\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        months\n        daysRemaining\n        elapsedDays\n      }\n    }\n  }\n}\n"
    },
    "CreatorCollaborationInitialChannelData": {
        "hash": "9ff9dfe9cbcfb68901c1e48e9e3bbf0c32a7304005f003b0569303076fa1cb42",
        "query": "query CreatorCollaborationInitialChannelData($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    displayName\n    login\n    profileImageURL(width: 50)\n    stream {\n      id\n      game {\n        id\n        displayName\n      }\n      viewersCount\n    }\n  }\n}\n"
    },
    "RaidRecommendations": {
        "hash": "fb8a0a3fe9f49d30d585c0e69fced9a129aa277ada0958f55a7bcc61c53839db",
        "query": "fragment ChannelAnniversary on StreamEventCelebration {\n  id\n  isSnoozed\n  occursAt\n}\n\nquery RaidRecommendations($userID: ID!, $sourceOptions: [RaidRecommendationsSource!]) {\n  user(id: $userID) {\n    id\n    broadcastSettings {\n      id\n      game {\n        id\n        displayName\n      }\n    }\n    stream {\n      id\n      viewersCount\n    }\n    raidRecommendations(options: {sources: $sourceOptions}) {\n      user {\n        id\n        displayName\n        login\n        profileImageURL(width: 50)\n        stream {\n          id\n          broadcastLanguage\n          createdAt\n          previewImageURL(height: 248, width: 440)\n        }\n        broadcastSettings {\n          id\n          title\n          isMature\n        }\n        channel {\n          id\n          activeStreamEventCelebration {\n            ...ChannelAnniversary\n          }\n        }\n      }\n      defaultRank\n      score\n      sourceRaidHistory {\n        timesRaided\n        lastRaidedAt\n        peakRaiders\n      }\n      targetRaidHistory {\n        timesRaided\n        lastRaidedAt\n        peakRaiders\n      }\n      viewers\n      uptime\n      isFollowed\n      isRecommendedByTwitchRecs\n      category {\n        id\n        name\n        avatarURL(width: 144, height: 192)\n      }\n      tags\n      extraDetails {\n        isDropsEnabled\n        isCharityStream\n        isStreamTogether\n      }\n    }\n  }\n}\n"
    },
    "BanEvasionDetectionSettings": {
        "hash": "ba587f2fe5001bfb93b1b3ff2704ebe9ccbb84b316ede94184336acef01f37e6",
        "query": "query BanEvasionDetectionSettings($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    moderationSettings {\n      banEvasionDetection {\n        ... on BanEvasionDetectionSettings {\n          isEnabled\n          possibleTreatment\n          likelyTreatment\n        }\n        ... on BanEvasionDetectionSettingsError {\n          code\n        }\n      }\n    }\n  }\n}\n"
    },
    "SunlightBanEvasionDetectionSettingsUpdateSettings": {
        "hash": "8e385a8708e3a05e0ea4fbde1f9ab12b602cf3c7223a31da054e4222ebd920a4",
        "query": "mutation SunlightBanEvasionDetectionSettingsUpdateSettings($channelID: ID!, $isEnabled: Boolean!, $possibleEvaderTreatment: LowTrustUserTreatmentType, $likelyEvaderTreatment: LowTrustUserTreatmentType) {\n  updateBanEvasionDetectionSettings(input: {channelID: $channelID, isEnabled: $isEnabled, possibleEvaderTreatment: $possibleEvaderTreatment, likelyEvaderTreatment: $likelyEvaderTreatment}) {\n    settings {\n      isEnabled\n      possibleTreatment\n      likelyTreatment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "QuickActionEmoteOnlyChatQuery": {
        "hash": "fbb2b864869b662654bf71b181785ff43645a5bfe30688c33aec401f6893b166",
        "query": "query QuickActionEmoteOnlyChatQuery($login: String!) {\n  user(login: $login) {\n    id\n    chatSettings {\n      isEmoteOnlyModeEnabled\n    }\n  }\n}\n"
    },
    "ActivateSponsorshipTrigger": {
        "hash": "cb13bfc7fa1647966ccb61fc323a121e261f31952a4c5cf9a1c1f485831f02ec",
        "query": "mutation ActivateSponsorshipTrigger($input: ActivateSponsorshipTriggerInput!) {\n  activateSponsorshipTrigger(input: $input) {\n    campaignInstance {\n      ...sponsorshipToolsCampaignInstance\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SponsorshipToolsCampaignInstancePacings": {
        "hash": "908729449fd9c1e2343eae94e91ecba219aca3b7cef3b01e1d2bd7bfcabdb32d",
        "query": "query SponsorshipToolsCampaignInstancePacings() {\n  sponsorshipCampaignInstancePacings {\n    ...sponsorshipCampaignInstancePacing\n  }\n}\n"
    },
    "SponsorshipToolsQuery": {
        "hash": "62ff5504a68335da625c45b8e96eb8a2dfc198a907ff3db8f8a332eda1e6aec2",
        "query": "query SponsorshipToolsQuery() {\n  sponsorshipInstances(query: {stateCategory: ACTIVE}) {\n    edges {\n      node {\n        ...sponsorshipToolsCampaignInstance\n      }\n    }\n  }\n}\n"
    },
    "UpdateUserSponsorshipSettings": {
        "hash": "335e2e96448e0c0e8485e201a7552d9b565556dd56d550a91d62a4c05a2138be",
        "query": "mutation UpdateUserSponsorshipSettings($input: UpdateUserSponsorshipSettingsInput!) {\n  updateUserSponsorshipSettings(input: $input) {\n    settings {\n      activationSettings {\n        ...sponsorshipActivationSettings\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SponsorshipActivationSettings": {
        "hash": "53d88085a1dc9fb0974682cb71f2dd9498689820205dba0adb15c4cb4b29ec8c",
        "query": "query SponsorshipActivationSettings($input: UserSponsorshipSettingsInput!) {\n  userSponsorshipSettings(input: $input) {\n    activationSettings {\n      ...sponsorshipActivationSettings\n    }\n  }\n}\n"
    },
    "Community_Moments_CreateMomentQuickAction": {
        "hash": "c49aaaefb207655549d2ba0e0140aa1b1d0849d04d463250b45e3ace6192e595",
        "query": "query Community_Moments_CreateMomentQuickAction($channelID: ID!) {\n  broadcasterCommunityMomentDetails(channelID: $channelID) {\n    availableMoments\n    cooldownExpiresAt\n  }\n}\n"
    },
    "QuickActions_MomentClipDownload": {
        "hash": "d7e4e4ed8579d5fadbc70049c12bbcda9a311eaaa685d14c1eb51757d342477e",
        "query": "query QuickActions_MomentClipDownload($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    createdAt\n    playbackAccessToken(params: {platform: \"web\", playerType: \"clips-download\"}) {\n      signature\n      value\n    }\n    videoQualities {\n      sourceURL\n    }\n  }\n}\n"
    },
    "CreateMomentHeader_ClipStatus": {
        "hash": "b7479572d48c2670b165c03f6849e0d039ec9ef8afd1d0405b879f020108e4db",
        "query": "query CreateMomentHeader_ClipStatus($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    creationState\n  }\n}\n"
    },
    "CreateMomentModal_CreatorColor": {
        "hash": "1ab242ed9ee9f97fd97d49ef80400af9c0a450f6a03ecacf92d63e4bd6c148f9",
        "query": "query CreateMomentModal_CreatorColor($broadcasterID: ID!) {\n  user(id: $broadcasterID) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "QuickActions_CreateMomentClip": {
        "hash": "30e50a46bfdf6bd93f97e3ad8fecf1d1819ca5b7aa8b6056624e1986725fa29e",
        "query": "mutation QuickActions_CreateMomentClip($input: CreateClipInput!) {\n  createClip(input: $input) {\n    clip {\n      id\n      title\n      url\n      slug\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "QuickActions_CreateCommunityMoment": {
        "hash": "5a88edf9818d6b74d6b4bfef5c003ec205cc264b677c47da3a852f969916f784",
        "query": "mutation QuickActions_CreateCommunityMoment($input: CreateCommunityMomentInput!) {\n  createCommunityMoment(input: $input) {\n    moment {\n      id\n      createdAt\n    }\n    error\n  }\n}\n"
    },
    "SubsLandingPageAmbassadorsQuery": {
        "hash": "50f107e3e88f681ac3e755a9286d5e72b35036953351e07e647c277716bc658e",
        "query": "query SubsLandingPageAmbassadorsQuery($userIds: [ID!]) {\n  users(ids: $userIds) {\n    ...subsLandingPageUserInfo\n  }\n}\n"
    },
    "Following_CurrentUser": {
        "hash": "b44bf829d1ae38d2746c7f9eb6b0b98f84830f86fa99a2b9aa419a6528277abe",
        "query": "query Following_CurrentUser($limit: Int, $cursor: Cursor) {\n  currentUser {\n    id\n    login\n    follows(first: $limit, after: $cursor, filter: SUBBABLE) {\n      edges {\n        node {\n          ...subsLandingPageUserInfo\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "SubsLandingPage_SearchStreamers": {
        "hash": "8f72316bd74c99caf48e597844a18a0dcbf99981321a377b59aba924067db462",
        "query": "fragment searchStreamerResult on User {\n  id\n  displayName\n  login\n  profileImageURL(width: 50)\n  followers {\n    totalCount\n  }\n}\n\nquery SubsLandingPage_SearchStreamers($userQuery: String!) {\n  searchUsers(userQuery: $userQuery, hasSubscriptionProductsOnly: true) {\n    edges {\n      node {\n        ...searchStreamerResult\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "Offer_Eligibility": {
        "hash": "c75bd4f0437b563b1c67b65d6000e2cdce1ed7aed61dd6459dc5beeaf95c319b",
        "query": "query Offer_Eligibility($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      emoteSetID\n      name\n      hasAdFree\n      offers {\n        ...subProductOfferFragment\n      }\n      gifting {\n        community {\n          offer {\n            ...subProductOfferFragment\n          }\n        }\n      }\n    }\n  }\n  currentUser {\n    id\n    bitsOffers {\n      id\n      ... on BitsBundleOffer {\n        ...bitsBundleOffer\n      }\n    }\n  }\n}\n"
    },
    "EmotePicker_EmotePicker_UserSubscriptionProducts": {
        "hash": "548aa4d8a8711344bbd9efc9ff7c5b2e04b1d7eb9dff6d8568f096976c98c807",
        "query": "query EmotePicker_EmotePicker_UserSubscriptionProducts($channelOwnerID: ID!) {\n  currentUser {\n    id\n    bitsBalance\n  }\n  channel(id: $channelOwnerID) {\n    id\n    localEmoteSets {\n      id\n      emotes {\n        id\n        setID\n        token\n      }\n    }\n  }\n  user(id: $channelOwnerID) {\n    id\n    login\n    displayName\n    profileImageURL(width: 28)\n    subscriptionProducts {\n      ...emotePickerUserSubscriptionProduct\n    }\n    cheer {\n      id\n      badgeTierEmotes(filter: LOCKED_PREVIEW) {\n        ...bitsBadgeTierEmote\n      }\n    }\n    self {\n      follower {\n        followedAt\n      }\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        months\n      }\n      subscriptionBenefit {\n        id\n        tier\n        platform\n      }\n    }\n  }\n}\n"
    },
    "EmotePicker_SubUpsell_PriceInfo": {
        "hash": "e3993d84f2ea9dc6868da4f37a042c106457d7ce96967a43caea5eff76bd460f",
        "query": "query EmotePicker_SubUpsell_PriceInfo($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    subscriptionProducts {\n      ...emotePickerSubUpsellPriceInfoSubscriptionProduct\n    }\n  }\n}\n\nfragment emotePickerSubUpsellPriceInfoSubscriptionProduct on SubscriptionProduct {\n  ...emotePickerUserSubscriptionProduct\n  offers {\n    ...subProductOfferFragment\n  }\n}\n"
    },
    "Thread_RevokeWhisperAccess": {
        "hash": "0ae9f711e8d3dd52b4f3984ac6d5cd0fcd84a791402d07298e77495c102b8abd",
        "query": "mutation Thread_RevokeWhisperAccess($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      participants {\n        id\n        self {\n          whisperPermissions {\n            receive\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "Thread_SetMuteThread": {
        "hash": "1b905589d6bf231bdc41afbadb2a5bac1fcb2d6f28bd637114c814e6ae85df05",
        "query": "mutation Thread_SetMuteThread($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      isMuted\n    }\n  }\n}\n"
    },
    "WhisperThread_ReportUser": {
        "hash": "c400c75957602ce17b07315665027d1d1778c97bc2e3c42c176552a2c6c3e940",
        "query": "mutation WhisperThread_ReportUser($input: ReportContentInput!) {\n  reportContent(input: $input) {\n    contentID\n  }\n}\n"
    },
    "WhisperThread_SetThreadSpamStatus": {
        "hash": "151bd6bfc905155a26611fe80e025d9c2102519f7e678573f3bf12cec165a9fd",
        "query": "mutation WhisperThread_SetThreadSpamStatus($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      spamInfo {\n        lastMarkedNotSpamAt\n        likelihood\n      }\n    }\n  }\n}\n"
    },
    "WhispersSearchUsersQuery": {
        "hash": "82c6587e38662cb2cba1cd9480656cf27bce627780bbee65803faa30ab59cff2",
        "query": "query WhispersSearchUsersQuery($userQuery: String!) {\n  searchUsers(userQuery: $userQuery) {\n    edges {\n      node {\n        id\n        login\n        displayName\n        profileImageURL(width: 50)\n      }\n    }\n  }\n}\n"
    },
    "SendWhisper": {
        "hash": "227067110921fb66cb89167dc0dec91d812baf9809267ba977ece75e6bf43e53",
        "query": "mutation SendWhisper($input: SendWhisperInput!) {\n  sendWhisper(input: $input) {\n    message {\n      id\n      nonce\n      content {\n        content\n        emotes {\n          id\n          emoteID\n          setID\n          from\n          to\n          __typename\n        }\n        __typename\n      }\n      from {\n        id\n        __typename\n      }\n      sentAt\n      editedAt\n      deletedAt\n      thread {\n        id\n        participants {\n          id\n          self {\n            whisperPermissions {\n              receive\n            }\n          }\n        }\n      }\n      __typename\n    }\n    error {\n      code\n      __typename\n    }\n    __typename\n  }\n}\n"
    },
    "Thread_UnarchiveThread": {
        "hash": "38495cd2cd370a2fd40cf14564a956f3e53bf24d63968010095d8253bfdf7149",
        "query": "mutation Thread_UnarchiveThread($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      isArchived\n    }\n  }\n}\n"
    },
    "StandaloneGetAutoModLevels": {
        "hash": "01c80323a9cae30eaa5ccb2ed22f9e2145f0d99bc7b24e23f8dc3203f645cd8a",
        "query": "query StandaloneGetAutoModLevels($channelLogin: String!) {\n  currentUser {\n    id\n    roles {\n      isStaff\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      isModerator\n    }\n    channel {\n      id\n      autoModConfiguration {\n        ...autoModConfiguration\n      }\n    }\n  }\n}\n"
    },
    "StandaloneUpdateAutoModLevels": {
        "hash": "2209618f08adca9dff8b0456f7fad60a74073ad9bb9b6fb83c194b7adb48466e",
        "query": "mutation StandaloneUpdateAutoModLevels($input: UpdateAutoModLevelsInput!) {\n  updateAutoModLevels(input: $input) {\n    autoModConfiguration {\n      ...autoModConfiguration\n      eligibilities\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardQA_ChannelProperties": {
        "hash": "84edda49fb5c0349bf9b5ccd6effaea741d0ec7cbcc3a9b9e02df51867c55c52",
        "query": "query SunlightBountyBoardQA_ChannelProperties($channelID: ID) {\n  channel(id: $channelID) {\n    id\n    videoStreamSettings {\n      shouldArchiveVODs\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardQA_StopBounty": {
        "hash": "d589c4ec2e6657007e0b73733203400b539a36710df5aa1dceb78ce5e329e7a1",
        "query": "mutation SunlightBountyBoardQA_StopBounty($input: StopBountyInput!) {\n  stopBounty(input: $input) {\n    stoppedBounty {\n      ...bounty\n    }\n    user {\n      id\n      broadcastSettings {\n        id\n        title\n        game {\n          id\n          name\n        }\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SunlightBountyBoardQA_StartBounty": {
        "hash": "fdd5fa508038796a9046b21ffe18c13a0914068bfb1e18e2f62ccfb12d595ca2",
        "query": "mutation SunlightBountyBoardQA_StartBounty($input: StartBountyInput!) {\n  startBounty(input: $input) {\n    startedBounty {\n      ...bounty\n    }\n    user {\n      id\n      broadcastSettings {\n        id\n        title\n        game {\n          id\n          name\n        }\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "StreamerCard": {
        "hash": "3cba31070b58abbaea9821e0836d6ce682c121079128a15b6821d1e9d334ffb9",
        "query": "query StreamerCard($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isPartner\n    }\n    bannerImageURL\n    stream {\n      id\n      viewersCount\n      game {\n        id\n        displayName\n      }\n    }\n    followers {\n      totalCount\n    }\n    channel {\n      id\n      socialMedias {\n        ...socialMediaFields\n      }\n      schedule {\n        id\n        nextSegment {\n          id\n          categories {\n            id\n            displayName\n          }\n          hasReminder\n          startAt\n          endAt\n          isCancelled\n          title\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelActiveCharityCampaign": {
        "hash": "0fa1e684620697b9a7cfa056e61b213df205bc745783c713e0a2396cfe789613",
        "query": "query ChannelActiveCharityCampaign($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    activeCharityCampaign {\n      id\n      charities {\n        id\n        logoURL\n        name\n      }\n      isArchived\n    }\n  }\n}\n"
    },
    "ChannelSocialButtons": {
        "hash": "6365595163aea6b53ef2650509b49b34ab37b1dff5a1d16c9f982931006fd0ee",
        "query": "query ChannelSocialButtons($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    localEmoteSets {\n      id\n      emotes {\n        id\n        token\n        type\n      }\n      productType\n    }\n  }\n}\n"
    },
    "StreamEventCelebrationsChannelPageBadge": {
        "hash": "6d2349966144864af2ff013f46c67c0144d0d24b2b29d9f1b853d6c3b59a21a1",
        "query": "query StreamEventCelebrationsChannelPageBadge($channelLogin: String) {\n  channel(name: $channelLogin) {\n    id\n    activeStreamEventCelebration {\n      ...streamEventCelebration\n    }\n  }\n}\n"
    },
    "GuestStarViewerFollowing": {
        "hash": "78e0d19e6a854016c2f74a0b9929ec58f96cb5682bdad982b5c42becf553832f",
        "query": "query GuestStarViewerFollowing($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      follower {\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "OneTap_BitsBalance": {
        "hash": "468f5bad304c8937d8814f50caa7ba80299ec1a60ddb938cc4f3c4f1ccc2e92d",
        "query": "query OneTap_BitsBalance() {\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "OneTapSettings": {
        "hash": "31fc69e203069937ffa8b50a2890753e970c3123ba312316a73c4de0939689ef",
        "query": "query OneTapSettings($login: String!) {\n  user(login: $login) {\n    id\n    cheer {\n      id\n      settings {\n        id\n        oneTapSettings {\n          isOneTapEnabled\n          breakpointOptions {\n            ...OneTapBreakpointOptionFragment\n          }\n          giftOptions {\n            ...OneTapGiftOptionFragment\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "OneTapFeed": {
        "hash": "cbf214143b796643f90d4fad58af70c64023222ed73aa9b7ae39a57a509e95f0",
        "query": "query OneTapFeed($channelID: ID!) {\n  oneTapFeed(channelID: $channelID) {\n    items {\n      ...OneTapFeedItemFragment\n    }\n  }\n}\n"
    },
    "GetIDFromLogin": {
        "hash": "a65c02210b1d31714a6dd061fb1965e573cb314453edc831b7ac6b24af6e328c",
        "query": "query GetIDFromLogin($login: String!) {\n  user(login: $login, lookupType: ACTIVE) {\n    id\n  }\n}\n"
    },
    "StoryPreviewChannel": {
        "hash": "b8326329afdc47ba9a5342eb80088617061c7945f0f0c107a9b2a84fc45d6501",
        "query": "query StoryPreviewChannel($channelID: ID!, $capabilities: [StoryFeatureCapability!]) {\n  storyPreviewForChannel(channelID: $channelID, capabilities: $capabilities) {\n    ...StoryPreviewFragment\n  }\n}\n"
    },
    "ChannelEditButton": {
        "hash": "0ef6d504f840d26ce3cfb62ba72d83286d78a9ab796aaa70201668e9bc1a4395",
        "query": "query ChannelEditButton() {\n  currentUser {\n    id\n    login\n    roles {\n      isSiteAdmin\n    }\n  }\n}\n"
    },
    "ChannelSupportButtons": {
        "hash": "f6b21feaf1509cc45e1cce62ed4bfa049ef7b9e1b5dd4e8597246215ba219eec",
        "query": "query ChannelSupportButtons($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    self {\n      follower {\n        disableNotifications\n      }\n    }\n  }\n}\n"
    },
    "StreamMetadata": {
        "hash": "b57f9b910f8cd1a4659d894fe7550ccc81ec9052c01e438b290fd66a040b9b93",
        "query": "query StreamMetadata($channelLogin: String!, $includeIsDJ: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    primaryColorHex\n    roles {\n      isPartner\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n    profileImageURL(width: 70)\n    primaryTeam {\n      id\n      name\n      displayName\n    }\n    channel {\n      id\n    }\n    lastBroadcast {\n      id\n      title\n    }\n    stream {\n      id\n      type\n      createdAt\n      game {\n        id\n        slug\n        name\n      }\n    }\n  }\n}\n"
    },
    "StreamCategoryLinkCategorySlugByID": {
        "hash": "b05ad190878099a113a354143157e7d9b517be4a2faac2b8f87df8933b348c1f",
        "query": "query StreamCategoryLinkCategorySlugByID($id: ID!) {\n  game(id: $id) {\n    id\n    slug\n  }\n}\n"
    },
    "ChatInput_Badges": {
        "hash": "0f88a0b723046cfb694966ba8b4ff4fbcf27fb85230e36275cb0a48dadc15533",
        "query": "query ChatInput_Badges() {\n  currentUser {\n    id\n    chatColor\n    displayName\n    login\n  }\n}\n"
    },
    "SetChatScreenReaderAutoAnnounce": {
        "hash": "602231519c8d08293e34e624331b7681b6e1c27f41ffb1292ea21a804ffaaec9",
        "query": "mutation SetChatScreenReaderAutoAnnounce($input: SetChatScreenReaderAutoAnnounceInput!) {\n  setChatScreenReaderAutoAnnounce(input: $input) {\n    isChatScreenReaderAutoAnnounceEnabled\n  }\n}\n"
    },
    "ChatSettings_CurrentUser": {
        "hash": "56c7dbca175cfc918a5da3e9043e721ac8e5c7e8a112d9b9ccc79d1271bdf546",
        "query": "query ChatSettings_CurrentUser($channelLogin: String!) {\n  currentUser {\n    id\n    login\n    displayName\n    chatColor\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      displayBadges {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "CommunityIntroSettingsQuery": {
        "hash": "dbb5f8250c69c37846af02aca98d150c88480788fb16caeac3d43376aea832ad",
        "query": "query CommunityIntroSettingsQuery($login: String!) {\n  currentUser {\n    id\n  }\n  channel(name: $login) {\n    id\n    communityIntrosSettings {\n      isEnabled\n      prompt\n      isModAccessEnabled\n    }\n  }\n}\n"
    },
    "UpdateCommunityIntrosChannelSettings": {
        "hash": "8dc53f496ea6d6e9a63f29dd225c54e1ff4398e375fb7c848ed3e3cad2e51d82",
        "query": "mutation UpdateCommunityIntrosChannelSettings($input: UpdateCommunityIntrosChannelSettingsInput!) {\n  updateCommunityIntrosChannelSettings(input: $input) {\n    settings {\n      isEnabled\n      prompt\n      isModAccessEnabled\n    }\n  }\n}\n"
    },
    "ChatSettings_Badges": {
        "hash": "d7b8fa76b08fee47ad47cb34fd7b1e13031fa8921a0028bf0f3a0086f2333c1d",
        "query": "query ChatSettings_Badges($channelLogin: String!) {\n  currentUser {\n    id\n    hasPrime\n    hasTurbo\n    selectedBadge {\n      ...badge\n    }\n    availableBadges {\n      ...badge\n    }\n    subscriptionSettings {\n      isBadgeModifierHidden\n    }\n  }\n  user(login: $channelLogin) {\n    id\n    self {\n      selectedBadge {\n        ...badge\n      }\n      availableBadges {\n        ...badge\n      }\n      subscriptionBenefit {\n        ...subBenefit\n      }\n      subscriptionTenure(tenureMethod: STREAK) {\n        months\n      }\n    }\n    subscriptionProducts {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "ChatSettings_DeselectBadgeModifier": {
        "hash": "69aafb90d2e285bb4e5227e0b129476c1164c8aac796615edb7be4c3ded66896",
        "query": "mutation ChatSettings_DeselectBadgeModifier($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      isBadgeModifierHidden\n    }\n  }\n}\n"
    },
    "ChatSettings_DeselectChannelBadge": {
        "hash": "1bc49870105c637953c10404c2a6e83c701e4feca5f86353a5605af26370a992",
        "query": "mutation ChatSettings_DeselectChannelBadge($input: DeselectChannelBadgeInput!) {\n  deselectChannelBadge(input: $input) {\n    user {\n      id\n      self {\n        selectedBadge {\n          ...badge\n        }\n        availableBadges {\n          ...badge\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChatSettings_DeselectGlobalBadge": {
        "hash": "9a43b003f8c37348e85f64495e2528f14a109129b2377654c853a952d3637012",
        "query": "mutation ChatSettings_DeselectGlobalBadge() {\n  deselectGlobalBadge {\n    user {\n      id\n      selectedBadge {\n        ...badge\n      }\n      availableBadges {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "ChatSettings_SelectBadgeModifier": {
        "hash": "efd1a018a3a8196218e5ce51ef23e495534ecd9454707b501250b324ebf33287",
        "query": "mutation ChatSettings_SelectBadgeModifier($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      isBadgeModifierHidden\n    }\n  }\n}\n"
    },
    "ChatSettings_SelectChannelBadge": {
        "hash": "a21873d43c56ea9f158a5378063d245e4fbdf073604a76d709841991f066d5ed",
        "query": "mutation ChatSettings_SelectChannelBadge($input: SelectChannelBadgeInput!) {\n  selectChannelBadge(input: $input) {\n    isSuccessful\n    user {\n      id\n      self {\n        selectedBadge {\n          ...badge\n        }\n        availableBadges {\n          ...badge\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChatSettings_SelectGlobalBadge": {
        "hash": "3aa9b18234b318f9159795f3cf975c2487e5773d7cdf0fc7edef877cccba134a",
        "query": "mutation ChatSettings_SelectGlobalBadge($input: SelectGlobalBadgeInput!) {\n  selectGlobalBadge(input: $input) {\n    user {\n      id\n      selectedBadge {\n        ...badge\n      }\n      availableBadges {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "ChatSettingsFollowersOnlySetting": {
        "hash": "d135a96fa4d9de0dbb1abdf33552123f9a90a46fd1efee143eeb5306fae5b282",
        "query": "query ChatSettingsFollowersOnlySetting($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    chatSettings {\n      followersOnlyDurationMinutes\n    }\n  }\n}\n"
    },
    "SetFollowersOnlyModeSetting": {
        "hash": "6f1a49d95f7ce59a129b698f298679e5ac1b732ecfc632bbc7b6eabd26f5261e",
        "query": "mutation SetFollowersOnlyModeSetting($input: UpdateChatSettingsInput!) {\n  updateChatSettings(input: $input) {\n    chatSettings {\n      followersOnlyDurationMinutes\n    }\n  }\n}\n"
    },
    "RecentRaids_ModerationTools": {
        "hash": "ceff5f0881d8e42592da2a454b7647bd8861b2cb4619c918746b23cc51c7b846",
        "query": "query RecentRaids_ModerationTools($channelID: ID) {\n  user(id: $channelID) {\n    id\n    recentRaids {\n      id\n      goAt\n      sourceChannel {\n        id\n        login\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "ChatSettingsSlowModeSetting": {
        "hash": "7929d9b7e69fb88c0ff75eb3603041341d0db969cbe2fbff81e4e7cf3fe74028",
        "query": "query ChatSettingsSlowModeSetting($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    chatSettings {\n      slowModeDurationSeconds\n    }\n  }\n}\n"
    },
    "SetSlowModeSetting": {
        "hash": "8756afd6e90d8ca941f4bc0b7952a0acea704a1677026a7a1591220da031890a",
        "query": "mutation SetSlowModeSetting($input: UpdateChatSettingsInput!) {\n  updateChatSettings(input: $input) {\n    chatSettings {\n      slowModeDurationSeconds\n    }\n  }\n}\n"
    },
    "AddChannelBlockedTerm": {
        "hash": "1210d13d5f2a0aa9566a7517fc35a249486fb77a0ba1c0fe9b4992a91d397c33",
        "query": "mutation AddChannelBlockedTerm($input: AddChannelBlockedTermInput!) {\n  addChannelBlockedTerm(input: $input) {\n    term {\n      ...blockedTerm\n    }\n    wasRemovedFromPermittedList\n    error\n  }\n}\n"
    },
    "AddChannelPermittedTerm": {
        "hash": "db454c063bfb1e79369d89f7c5296d8f0717cce56a9b01d788b2176d3540a41c",
        "query": "mutation AddChannelPermittedTerm($input: AddChannelPermittedTermInput!) {\n  addChannelPermittedTerm(input: $input) {\n    term {\n      ...permittedTerm\n    }\n    wasRemovedFromBlockedList\n    error\n  }\n}\n"
    },
    "DeleteChannelBlockedTerm": {
        "hash": "b07ed03c082f73df50e279b113fb6e26eb5226bb306a4cf4aaba3052b6e17ead",
        "query": "mutation DeleteChannelBlockedTerm($input: DeleteChannelBlockedTermByIDInput!) {\n  deleteChannelBlockedTermByID(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DeleteChannelPermittedTerm": {
        "hash": "2e3430c6299d79242286c04f7bd5de39e1aecf0463a0a553c4557456731b1325",
        "query": "mutation DeleteChannelPermittedTerm($input: DeleteChannelPermittedTermByIDInput!) {\n  deleteChannelPermittedTermByID(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "BlockedTerms": {
        "hash": "0ec9a3f63e5dc12648b69e22384b667918d37b4533813b7c4f783e010dfb3cad",
        "query": "query BlockedTerms($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    blockedTerms(first: -1) {\n      edges {\n        node {\n          ...blockedTerm\n        }\n      }\n    }\n  }\n}\n"
    },
    "PermittedTerms": {
        "hash": "367aa8a0710bee4ff9e9a6bc9d2b5b17d54cd39407a32cdb7486b4eee3d159f2",
        "query": "query PermittedTerms($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    permittedTerms(first: -1) {\n      edges {\n        node {\n          ...permittedTerm\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateChatSettings": {
        "hash": "e6434e7f32b90cd09f8f37f739edef61bdd3fcabea4f346913785496887153af",
        "query": "mutation UpdateChatSettings($input: UpdateChatSettingsInput!) {\n  updateChatSettings(input: $input) {\n    chatSettings {\n      ...chatSettings\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChatSettings": {
        "hash": "a3c5f377b5f29ab3b6435aa26a1b4b8ab3c8b045d9d0a48e5b9e8396130c965f",
        "query": "query ChatSettings($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    chatSettings {\n      ...chatSettings\n    }\n  }\n}\n"
    },
    "SubsOnlyChatQuery": {
        "hash": "f2e7c0d7c8ea9920f0955a66eef6c4ceb02443bd190d0dfd477758e2c7348870",
        "query": "query SubsOnlyChatQuery($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      hasSubOnlyChat\n    }\n  }\n}\n"
    },
    "SubsOnlyChatToggle": {
        "hash": "97adb1aaaaf1becf848fa83355f7dee86204b5c91f2207af46a436a9367d939e",
        "query": "mutation SubsOnlyChatToggle($input: UpdateSubscriptionProductInput!) {\n  updateSubscriptionProduct(input: $input) {\n    product {\n      id\n      hasSubOnlyChat\n    }\n  }\n}\n"
    },
    "HomeTrackQuery": {
        "hash": "6ecabf9a03accc32570c269c0aacf83699cc60d3500b29b79dc877bd223a98a2",
        "query": "fragment homeTrackGameFragment on Game {\n  id\n  name\n}\n\nfragment homeTrackBroadcastFragment on BroadcastSettings {\n  id\n  language\n}\n\nquery HomeTrackQuery($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    lastBroadcast {\n      id\n      game {\n        ...homeTrackGameFragment\n      }\n    }\n    broadcastSettings {\n      ...homeTrackBroadcastFragment\n    }\n    self {\n      follower {\n        node {\n          id\n        }\n      }\n    }\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "MwebChannelHomePage_Query": {
        "hash": "dd5c44a1dc5bfe0275441e80f9d6d53cc06d31c63a68d30c4c97cd1ae195857d",
        "query": "fragment MwebChannelHomePage_CategoryShelfItemsFragment on Game {\n  id\n  name\n  ...MwebGameCard\n}\n\nfragment MwebChannelHomePage_StreamerShelfItemsFragment on User {\n  id\n  ...Mweb_UserCardFragment\n}\n\nfragment MwebChannelHomePage_ChannelFragment on User {\n  id\n  login\n  displayName\n  primaryColorHex\n  stream {\n    id\n    ...Mweb_ChannelFeaturedCardStreamFragment\n  }\n  videos(first: 1, type: ARCHIVE, sort: TIME) {\n    edges {\n      node {\n        ...Mweb_ChannelFeaturedCardVideoFragment\n      }\n    }\n  }\n  videoShelves(first: 1) {\n    edges {\n      node {\n        id\n        type\n        title\n        items {\n          ...Mweb_VideoShelfItemsFragment\n        }\n      }\n    }\n  }\n  channel {\n    id\n    home {\n      shelves {\n        categoryShelf {\n          edges {\n            node {\n              ...MwebChannelHomePage_CategoryShelfItemsFragment\n            }\n          }\n        }\n        streamerShelf {\n          edges {\n            trackingID\n            node {\n              ...MwebChannelHomePage_StreamerShelfItemsFragment\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nquery MwebChannelHomePage_Query($login: String!) {\n  user(login: $login) {\n    ...MwebChannelHomePage_ChannelFragment\n  }\n}\n"
    },
    "ContentCopyrightClaimsPage": {
        "hash": "8cf4b3080701f783cf944898d03328c717395689645d31545e823d512ed743c9",
        "query": "query ContentCopyrightClaimsPage($channelID: ID!, $first: Int, $cursor: Cursor) {\n  copyrightClaims(channelID: $channelID, first: $first, after: $cursor) {\n    edges {\n      node {\n        ...copyrightClaim\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n  user(id: $channelID) {\n    id\n    dmcaViolationCount\n  }\n}\n"
    },
    "ContentCopyrightClaimsPage__SingleClaim": {
        "hash": "a4d2c3f86e0570c46b7709695992707e70f3809132483fa6e2711678312adb09",
        "query": "query ContentCopyrightClaimsPage__SingleClaim($claimID: ID!) {\n  copyrightClaim(id: $claimID) {\n    ...copyrightClaim\n  }\n}\n"
    },
    "createPredictionEvent": {
        "hash": "fca59f87bec595e2fbacdd2c9e32551b0b4d10067fb836107921fa827b97b410",
        "query": "mutation createPredictionEvent($input: CreatePredictionEventInput!) {\n  createPredictionEvent(input: $input) {\n    error {\n      code\n      maxOutcomes\n      maxPredictionWindowSeconds\n    }\n    predictionEvent {\n      ...predictionEventFragment\n    }\n  }\n}\n"
    },
    "DeletePrediction": {
        "hash": "02d60745aa5eb2f339a53b5b73aead73acd60d968cfde917b70a68d068215dc2",
        "query": "mutation DeletePrediction($input: CancelPredictionEventInput!) {\n  cancelPredictionEvent(input: $input) {\n    error {\n      code\n    }\n    predictionEvent {\n      ...predictionEventFragment\n    }\n  }\n}\n"
    },
    "LockPrediction": {
        "hash": "a9039d1030808479520e3e9c74f6b2b3bc7a5e8bd6c7d38b9e08596247ca2a60",
        "query": "mutation LockPrediction($input: LockPredictionEventInput!) {\n  lockPredictionEvent(input: $input) {\n    error {\n      code\n    }\n    predictionEvent {\n      ...predictionEventFragment\n    }\n  }\n}\n"
    },
    "ResolvePrediction": {
        "hash": "f209b04cbe5f31871adc5d17a5980508570ad9be0b5ce613a4eaf25ad68f33a6",
        "query": "mutation ResolvePrediction($input: ResolvePredictionEventInput!) {\n  resolvePredictionEvent(input: $input) {\n    error {\n      code\n    }\n    predictionEvent {\n      ...predictionEventFragment\n    }\n  }\n}\n"
    },
    "PredictionsQuery": {
        "hash": "2c829e69d69803b118273f73ea1b2c97804fb4f29ba8295104368b31dd15b677",
        "query": "query PredictionsQuery($login: String!, $count: Int) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      activePredictionEvents {\n        ...predictionEventFragment\n      }\n      lockedPredictionEvents {\n        ...predictionEventFragment\n      }\n      resolvedPredictionEvents(first: $count) {\n        edges {\n          ...predictionEventEdgeFragment\n        }\n      }\n      communityPointsSettings {\n        name\n      }\n      self {\n        recentPredictions {\n          ...recentPredictionFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsSettingsName": {
        "hash": "766ffd4cebd62aa8d43cc70e6aab4f661e46f1a3de920f21cbff022a767a1085",
        "query": "query ChannelPointsSettingsName($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        name\n      }\n    }\n  }\n}\n"
    },
    "HomeShelfGames": {
        "hash": "dbdab347ac6f3c666d8e4006aa68ce7256d8e9929283333591d88d39d32f14e6",
        "query": "fragment homeShelfGame on Game {\n  id\n  boxArtURL(width: 285, height: 380)\n  displayName\n  name\n  viewersCount\n}\n\nquery HomeShelfGames($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    primaryColorHex\n    channel {\n      id\n      home {\n        shelves {\n          categoryShelf(first: 15) {\n            edges {\n              node {\n                ...homeShelfGame\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "HomeShelfUsers": {
        "hash": "72f21d9432399b2838b6879efbe814e018bffa0d0a50b7031f0a657bca9a409d",
        "query": "fragment homeShelfUser on User {\n  id\n  displayName\n  login\n  primaryColorHex\n  profileImageURL(width: 300)\n  stream {\n    id\n    viewersCount\n  }\n}\n\nquery HomeShelfUsers($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n    channel {\n      id\n      home {\n        shelves {\n          streamerShelf(first: 15, recommendationsContext: {platform: \"web\"}) {\n            type\n            edges {\n              trackingID\n              node {\n                ...homeShelfUser\n              }\n            }\n          }\n        }\n      }\n    }\n    primaryTeam {\n      id\n      name\n      displayName\n    }\n  }\n}\n"
    },
    "HomeShelfVideos": {
        "hash": "a544b72cb96f1d1e1a891844b46b4fff67f156d5ca6ae6320363c985d38f1f95",
        "query": "fragment homeShelfVideosVideo on Video {\n  id\n  title\n  previewThumbnailURL(width: 320, height: 180)\n  publishedAt\n  viewCount\n  lengthSeconds\n  animatedPreviewURL\n  resourceRestriction {\n    ...resourceRestriction\n  }\n  contentTags {\n    id\n    isLanguageTag\n    tagName\n    localizedName\n  }\n  self {\n    isRestricted\n    viewingHistory {\n      position\n    }\n  }\n  game {\n    id\n    slug\n    boxArtURL(width: 40, height: 56)\n    displayName\n    name\n  }\n  owner {\n    id\n    displayName\n    login\n    profileImageURL(width: 50)\n    primaryColorHex\n  }\n}\n\nquery HomeShelfVideos($channelLogin: String!, $first: Int!) {\n  user(login: $channelLogin) {\n    id\n    videoShelves(first: $first) {\n      edges {\n        node {\n          id\n          title\n          description\n          type\n          items {\n            ...homeShelfVideosVideo\n            ...channelHomeClip\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "HomeShelfEditor": {
        "hash": "aa65d630d9f47d2af756ce2dce4ff5caf757204b8c1ced65b59d94a80ed37f2a",
        "query": "query HomeShelfEditor($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "MwebChannelVideoPage_Query": {
        "hash": "3f5ec86e4e7556d90dd5e232afc35b8545901ea1a1f5619c8f74151db900d521",
        "query": "fragment MwebChannelVideosPage_ChannelFragment on User {\n  id\n  login\n  displayName\n  primaryColorHex\n  videoShelves {\n    edges {\n      node {\n        id\n        title\n        type\n        items {\n          ...Mweb_VideoShelfItemsFragment\n        }\n      }\n    }\n  }\n  ...MwebChannelVideosPage_VideoListFragment\n}\n\nfragment MwebChannelVideosPage_VideoListFragment on User {\n  id\n  videos(first: $archiveLimit, after: $archiveCursor, type: $archiveType, sort: TIME) @include(if: $showArchive) {\n    edges {\n      node {\n        ...MwebVideoCard\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n\nquery MwebChannelVideoPage_Query($login: String!, $archiveLimit: Int!, $archiveCursor: Cursor, $archiveType: BroadcastType, $showArchive: Boolean!) {\n  user(login: $login) {\n    ...MwebChannelVideosPage_ChannelFragment\n  }\n}\n"
    },
    "AdFrequencyQuery": {
        "hash": "4efc97f96d30a1c70a4a5587773c1a7246251a2b046d06f7af6b51fee6ab4a6a",
        "query": "query AdFrequencyQuery($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      frequency\n      lastTriggeredAt\n    }\n  }\n}\n"
    },
    "CharityRoot": {
        "hash": "7e57b6cec208a67a78d90c4bf1c9e7dce5ecf1ffb3102361543ed09f8e0b7284",
        "query": "query CharityRoot($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    charityCampaigns {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "streamDelayWidgetMutation": {
        "hash": "9ab48868f43617436bfcd04ceb9b28c92875c03b8e4ee10095ded256bc042cb5",
        "query": "mutation streamDelayWidgetMutation($input: UpdateVideoStreamSettingsInput!) {\n  updateVideoStreamSettings(input: $input) {\n    channel {\n      id\n      videoStreamSettings {\n        delaySeconds\n      }\n    }\n  }\n}\n"
    },
    "streamDelayWidget": {
        "hash": "b8ad1af29ade981deed4210719ddb562b466e20eefbca5ff02b6dd41c95a6b7e",
        "query": "query streamDelayWidget($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    videoStreamSettings {\n      isDelayEnabled\n      delaySeconds\n    }\n  }\n}\n"
    },
    "DJArtistBlockedList": {
        "hash": "684e314770031fb11d931240c2a3df2cdf548c5c028566aa091c3130f86e845f",
        "query": "query DJArtistBlockedList() {\n  djCatalogArtistBlocklist {\n    artists {\n      ...djCatalogBlockedArtistFragment\n    }\n  }\n}\n\nfragment djCatalogBlockedArtistFragment on DJCatalogArtist {\n  id\n  name\n  blocklistState\n  alternateNames\n}\n"
    },
    "DJMusicCatalogSearchQuery": {
        "hash": "d1c031aaab3e1bd2cbed198a6f7d033f7cb27a5a497198a0286c81e20103498e",
        "query": "query DJMusicCatalogSearchQuery($searchInput: DJCatalogSearchInput!, $cursor: Cursor) {\n  searchDJCatalog(input: $searchInput, after: $cursor) {\n    catalogLastUpdatedAt\n    edges {\n      cursor\n      node {\n        ...djCatalogSearchSongFragment\n        ...djCatalogSearchArtistFragment\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n\nfragment djCatalogSearchSongFragment on DJCatalogTrack {\n  id\n  title\n  artists {\n    ...djCatalogSearchArtistFragment\n  }\n  featuredArtists {\n    ...djCatalogSearchArtistFragment\n  }\n  labels\n  isBlocked\n  genres\n  duration\n  popularityIndex\n}\n\nfragment djCatalogSearchArtistFragment on DJCatalogArtist {\n  id\n  name\n  blocklistState\n  alternateNames\n}\n"
    },
    "DJOptOut": {
        "hash": "391dc6d0913afa790e0b0ef1d2efc8af7cc506116cc7c946b22aacab6dd5343a",
        "query": "mutation DJOptOut($input: OptOutDJInput!) {\n  optOutDJ(input: $input) {\n    channelID\n    errorCode\n  }\n}\n"
    },
    "DJOptOut_GetDJState": {
        "hash": "a80175f11d6591350e2f07932e3e512d74bbdab28012447aba10fa2737e4ab3a",
        "query": "query DJOptOut_GetDJState($channelID: ID) {\n  user(id: $channelID) {\n    id\n    djStatus {\n      isOptOutBlocked\n    }\n  }\n}\n"
    },
    "SecurityPage_Connections": {
        "hash": "c2fe531dbe86c45113049fb097eb4cfe707618b023c1b7e7496caf4bfa06334a",
        "query": "query SecurityPage_Connections() {\n  currentUser {\n    id\n    clientAuthorizations {\n      clientID\n      clientName\n    }\n    accountConnections {\n      riot {\n        id\n      }\n      steam {\n        id\n      }\n      twitter {\n        username\n      }\n      youtube {\n        channelURL\n      }\n      tikTok {\n        username\n      }\n    }\n  }\n}\n"
    },
    "UpdateCopyrightAudioDetectionOptOutStatus": {
        "hash": "462e4d1c5b6f5ea3e13bdcd95bbfd3d124f4f8b5170ec0200b0538bf43b832f0",
        "query": "mutation UpdateCopyrightAudioDetectionOptOutStatus($input: UpdateChannelVODSettingsInput!) {\n  updateChannelVODSettings(input: $input) {\n    channel {\n      id\n      vodSettings {\n        publishSettings {\n          isDisableOptOut\n        }\n      }\n    }\n  }\n}\n"
    },
    "Settings_CopyrightAudioDetectionSettings": {
        "hash": "49ffeb7c5c536621cf9e6306907bcdb095fc41a68fdfa2bf680094550d0b2293",
        "query": "query Settings_CopyrightAudioDetectionSettings() {\n  currentUser {\n    id\n    channel {\n      id\n      vodSettings {\n        publishSettings {\n          isDisableOptOut\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CampaignList": {
        "hash": "5024a0421bc6c0e97215925dd024a410e7fee0d5ba988e2671a9c5b7e20ac82d",
        "query": "query DevBountyBoardDashboard_CampaignList($fetchPending: Boolean!, $fetchCompleted: Boolean!, $fetchRejected: Boolean!, $fetchApproved: Boolean!, $fetchLive: Boolean!, $orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    bountyCampaigns(status: APPROVED) @include(if: $fetchApproved) {\n      edges {\n        ...devBountyEdge\n      }\n    }\n    bountyCampaigns(status: COMPLETED) @include(if: $fetchCompleted) {\n      edges {\n        ...devBountyEdge\n      }\n    }\n    bountyCampaigns(status: LIVE) @include(if: $fetchLive) {\n      edges {\n        ...devBountyEdge\n      }\n    }\n    bountyCampaigns(status: PENDING) @include(if: $fetchPending) {\n      edges {\n        ...devBountyEdge\n      }\n    }\n    bountyCampaigns(status: REJECTED) @include(if: $fetchRejected) {\n      edges {\n        ...devBountyEdge\n      }\n    }\n  }\n}\n"
    },
    "ChannelTrailerSettings": {
        "hash": "6d4a6ff3b9eff28fb568737bba64fca45fe876eeca5341e9085c5b9162e0b04c",
        "query": "query ChannelTrailerSettings($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    login\n    channel {\n      id\n      trailer {\n        video {\n          ...trailerVideo\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelTrailerSettings_SetChannelTrailer": {
        "hash": "df8d73bf7fb0b7a11632a8c9766a49a12ab0e60e87932a36687d4b58dd38846d",
        "query": "mutation ChannelTrailerSettings_SetChannelTrailer($input: SetChannelTrailerInput!) {\n  setChannelTrailer(input: $input) {\n    error\n    channel {\n      id\n      owner {\n        id\n        channel {\n          id\n          trailer {\n            video {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "RecentlyStreamedCategories": {
        "hash": "8d6f912c16f709344107316fb772494295115f6761d1ce85bfa7fb1bba25dec4",
        "query": "query RecentlyStreamedCategories($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      home {\n        shelves {\n          categoryShelfSuggestions {\n            edges {\n              isHidden\n              node {\n                id\n                boxArtURL(width: 144, height: 192)\n                displayName\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateRecentlyStreamedCategories": {
        "hash": "d3bd46d83dfa569c2eff86accd028cd6abbee709ac4783d6847e5f0bc8a07e3e",
        "query": "mutation UpdateRecentlyStreamedCategories($input: UpdateChannelHomePreferencesInput!) {\n  updateChannelHomePreferences(input: $input) {\n    channel {\n      id\n      home {\n        shelves {\n          categoryShelfSuggestions {\n            edges {\n              isHidden\n              node {\n                id\n                boxArtURL(width: 144, height: 192)\n                displayName\n              }\n            }\n          }\n        }\n      }\n    }\n    error\n  }\n}\n"
    },
    "updateAutohostSettings": {
        "hash": "927cd1bc6c9754bda455b8263f3dbfba954870385fe17937b81f80186830c015",
        "query": "mutation updateAutohostSettings($input: UpdateAutohostSettingsInput!) {\n  updateAutohostSettings(input: $input) {\n    user {\n      id\n      autohostSettings {\n        enabled\n        strategy\n      }\n    }\n  }\n}\n"
    },
    "DashboardSettingsAutohostSettings": {
        "hash": "b15a566b5b95e03a1fdc67b694c7b1bdc9a1ea20abf9a3c0fe5bcf93994f5ed6",
        "query": "query DashboardSettingsAutohostSettings($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    autohostSettings {\n      enabled\n      strategy\n    }\n  }\n}\n"
    },
    "StreamerShelfSettings": {
        "hash": "478dec334a6df63d9825bb1345ddb15a21af5c76e3a290ff8d4072c525f5208c",
        "query": "query StreamerShelfSettings($channelLogin: String!) {\n  currentUser {\n    id\n  }\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      home {\n        preferences {\n          streamerShelfType\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateStreamerShelfPreferences": {
        "hash": "99bb7b8a46ed725fe3be3faba28bba559502e50bf74181b77fed13f413950a31",
        "query": "mutation UpdateStreamerShelfPreferences($input: UpdateChannelHomePreferencesInput!) {\n  updateChannelHomePreferences(input: $input) {\n    channel {\n      id\n      home {\n        preferences {\n          streamerShelfType\n        }\n      }\n    }\n    error\n  }\n}\n"
    },
    "ClipsTitleEdit_CommunityMoment": {
        "hash": "890258ac9ece65a3b2ac37ff9cfbe80dc2128bc15b8df62134b6ec826044ae0c",
        "query": "query ClipsTitleEdit_CommunityMoment($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    communityMoment {\n      id\n      claimCount\n      createdAt\n    }\n  }\n}\n"
    },
    "ClipsTitleEdit_UpdateClip": {
        "hash": "24124d5c263a0482a7cd671c71646b0a44a38b061644e28a2c71d24808ea922d",
        "query": "mutation ClipsTitleEdit_UpdateClip($input: UpdateClipInput!) {\n  updateClip(input: $input) {\n    clip {\n      id\n      title\n    }\n    error {\n      message\n    }\n  }\n}\n"
    },
    "ClipsModalIsFollowing": {
        "hash": "76e9483cc7232bae173bf810994889c77ab4b6ed7ba03d83e80bebd7226fd1af",
        "query": "query ClipsModalIsFollowing($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      follower {\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "ClipMetadata": {
        "hash": "33aeb39108ed9bdce92f7d7755f3941ab3daff0e67591f7f6b871085cd70744a",
        "query": "query ClipMetadata($clipSlug: ID!) {\n  currentUser {\n    id\n    login\n    self {\n      isEditor\n    }\n    roles {\n      isStaff\n      isSiteAdmin\n    }\n  }\n  clip(slug: $clipSlug) {\n    id\n    guestStarParticipants {\n      guests {\n        ...guestStarUser\n      }\n      sessionIdentifier\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "DirectoryUpcomingPage": {
        "hash": "9592af9874126d50701fb8790e61ed062b90b87a75bfe7b4a940407c7a5eae1b",
        "query": "query DirectoryUpcomingPage($slug: String!) {\n  game(slug: $slug) {\n    id\n    name\n    displayName\n  }\n}\n"
    },
    "FeaturedUpcomingStreams": {
        "hash": "c1608cd15ec4553d8be5c4428d6634786ad81692d02678423488f4ed2d55a85a",
        "query": "query FeaturedUpcomingStreams($categoryID: ID!, $options: FeaturedUpcomingStreamsOptions!) {\n  featuredUpcomingStreams(categoryID: $categoryID, limit: 3, options: $options) {\n    nodes {\n      id\n      reminderCount\n      segment {\n        id\n        title\n        baseSegmentID\n        repeatEndsAfterCount\n        channel {\n          id\n          name\n          owner {\n            id\n            profileImageURL(width: 150)\n            bannerImageURL\n            primaryColorHex\n            login\n            tags {\n              id\n              localizedName\n            }\n          }\n          stream {\n            id\n            viewersCount\n          }\n        }\n        startAt\n        endAt\n        hasReminder\n        isCancelled\n      }\n    }\n  }\n}\n"
    },
    "UpcomingSchedule": {
        "hash": "7e9df1b52c14c5162ec00fea3d3626ca6b1e3d81287dea7fddafa52a7eb43a93",
        "query": "query UpcomingSchedule($categoryID: ID!, $options: FeaturedUpcomingStreamsOptions!) {\n  featuredUpcomingStreams(categoryID: $categoryID, options: $options) {\n    nodes {\n      id\n      reminderCount\n      segment {\n        id\n        title\n        baseSegmentID\n        repeatEndsAfterCount\n        channel {\n          id\n          name\n          owner {\n            id\n            profileImageURL(width: 150)\n            bannerImageURL\n            primaryColorHex\n            login\n            tags {\n              id\n              localizedName\n            }\n          }\n          stream {\n            id\n            viewersCount\n          }\n        }\n        startAt\n        endAt\n        hasReminder\n        isCancelled\n      }\n    }\n  }\n}\n"
    },
    "CollaborationInviteLinkExistingGuestStarSession": {
        "hash": "5b1a1bd487e58644101ad067dafb8a6d5110153b7442ebe2e4cbe799d3f22ace",
        "query": "query CollaborationInviteLinkExistingGuestStarSession($currentUserID: ID!) {\n  guestStarSession(options: {channelID: $currentUserID}) {\n    ...validGuestStarSessionData\n  }\n}\n"
    },
    "CollaborationValidateInviteLinkToken": {
        "hash": "b3d57ab42f8a2dbe912b3538b5a5a78a52ed79ac99c490a9d6f91752c3862b7d",
        "query": "query CollaborationValidateInviteLinkToken($token: String!) {\n  sessionInviteTokenEligibility(token: $token) {\n    id\n    session {\n      ...validGuestStarSessionData\n      ...validSharedChatSessionData\n    }\n    validationErrors\n  }\n}\n"
    },
    "CollaborationJoinSessionWithToken": {
        "hash": "37e8877d228889a103ffc517d69292c417ba068028d7a8a3a0b36b637e4bbbae",
        "query": "mutation CollaborationJoinSessionWithToken($input: JoinSessionWithInviteTokenInput!) {\n  joinSessionWithInviteToken(input: $input) {\n    eligibility {\n      id\n      session {\n        ...validGuestStarSessionData\n        ...validSharedChatSessionData\n      }\n      validationErrors\n    }\n  }\n}\n"
    },
    "MwebChannelAboutPage_Query": {
        "hash": "a71c9a4411031120d71c9cb3cf4dffb1977458dcb29c9164e9587cb3d8693014",
        "query": "fragment MwebChannelAboutPage_DefaultPanelFragment on DefaultPanel {\n  id\n  title\n  linkURL\n  imageURL\n  description\n}\n\nquery MwebChannelAboutPage_Query($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    login\n    stream {\n      id\n    }\n    panels {\n      id\n      type\n      ...MwebChannelAboutPage_DefaultPanelFragment\n    }\n  }\n}\n"
    },
    "AccountCheckupPhoneQuery": {
        "hash": "7363748834fd09b6680a2dac291125a39b5a8148a8fd8ba689913f897b2a35a0",
        "query": "query AccountCheckupPhoneQuery() {\n  currentUser {\n    id\n    phoneNumber\n  }\n}\n"
    },
    "UpdatePhoneNumberConfirmation": {
        "hash": "a6dca9bf9c10e1796e608174a6e2a54561069e42ac5dbe5e2bd420c6e5a0e7e6",
        "query": "mutation UpdatePhoneNumberConfirmation($input: UpdatePhoneNumberConfirmationInput!) {\n  updatePhoneNumberConfirmation(input: $input) {\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "UpdatePhoneNumber": {
        "hash": "dfda964c579f173ff2ca62be8ba001434d7596bf9081874a87ce839bd5c0cdfa",
        "query": "mutation UpdatePhoneNumber($input: UpdatePhoneNumberInput!) {\n  updatePhoneNumber(input: $input) {\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "DropCampaignDetails": {
        "hash": "215bc9f85f36b1ccb7a8461a7c865bfc31dae7c3026dd7cec3587f0eb5eaf17d",
        "query": "query DropCampaignDetails($dropID: ID!, $channelLogin: ID!) {\n  user(id: $channelLogin) {\n    id\n    dropCampaign(id: $dropID) {\n      id\n      self {\n        isAccountConnected\n      }\n      allow {\n        channels {\n          id\n          displayName\n          name\n        }\n        isEnabled\n      }\n      accountLinkURL\n      description\n      detailsURL\n      endAt\n      eventBasedDrops {\n        id\n        benefitEdges {\n          benefit {\n            id\n            createdAt\n            entitlementLimit\n            game {\n              id\n              name\n            }\n            imageAssetURL\n            isIosAvailable\n            name\n            ownerOrganization {\n              id\n              name\n            }\n            distributionType\n          }\n          entitlementLimit\n        }\n        claimDurationSeconds\n        conditions {\n          key\n          operator\n          value\n        }\n        endAt\n        missionDescription\n        missionName\n        name\n        startAt\n      }\n      game {\n        id\n        slug\n        displayName\n      }\n      imageURL\n      name\n      owner {\n        id\n        name\n      }\n      startAt\n      status\n      timeBasedDrops {\n        id\n        requiredSubs\n        benefitEdges {\n          benefit {\n            id\n            createdAt\n            entitlementLimit\n            game {\n              id\n              name\n            }\n            imageAssetURL\n            isIosAvailable\n            name\n            ownerOrganization {\n              id\n              name\n            }\n            distributionType\n          }\n          entitlementLimit\n        }\n        endAt\n        name\n        preconditionDrops {\n          id\n        }\n        requiredMinutesWatched\n        startAt\n      }\n    }\n  }\n}\n"
    },
    "ViewerDropsDashboard": {
        "hash": "7ef786a9d349bdaf5a3e150a2b8f9d4efdc8b1a7c5c7bf1b360c0878ec6f18e7",
        "query": "query ViewerDropsDashboard($fetchRewardCampaigns: Boolean) {\n  currentUser {\n    id\n    login\n    dropCampaigns {\n      ...dropCampaign\n    }\n  }\n  rewardCampaignsAvailableToUser @include(if: $fetchRewardCampaigns) {\n    ...rewardCampaign\n  }\n}\n"
    },
    "DropsPage_ClaimDropRewards": {
        "hash": "49a68d72071820f989af892f1cc2e1663e4a669094ab861adc935298e9cfb1c6",
        "query": "mutation DropsPage_ClaimDropRewards($input: ClaimDropRewardsInput!) {\n  claimDropRewards(input: $input) {\n    status\n    isUserAccountConnected\n    dropType {\n      id\n      campaign {\n        id\n        detailsURL\n      }\n    }\n  }\n}\n"
    },
    "Inventory": {
        "hash": "263ca03d39f4412ae9aaf6c8946a954309db0ff116e049412aa2e76bdf966bb3",
        "query": "query Inventory($fetchRewardCampaigns: Boolean) {\n  currentUser {\n    id\n    inventory {\n      dropCampaignsInProgress {\n        ...campaignInProgress\n      }\n      gameEventDrops {\n        ...inventoryUserDropReward\n      }\n      completedRewardCampaigns @include(if: $fetchRewardCampaigns) {\n        ...rewardCampaign\n      }\n    }\n  }\n}\n"
    },
    "RewardCodeModal": {
        "hash": "affc1db8dfef45ab711cae181f9185efc5578f1eb23d67387a9aaccdfba782cf",
        "query": "query RewardCodeModal($rewardCampaignID: ID!, $rewardID: ID!) {\n  currentUser {\n    id\n    inventory {\n      rewardValue(rewardCampaignID: $rewardCampaignID, rewardID: $rewardID) {\n        value\n        rewardID\n        rewardCampaignID\n        expiresAt\n      }\n    }\n  }\n}\n"
    },
    "UpdatePinnedChatAccess": {
        "hash": "90c70431c2440acc9aced8b812e48c656509c901fe0b699bf2293928ff57bc02",
        "query": "mutation UpdatePinnedChatAccess($input: UpdatePinnedChatSettingsInput!) {\n  updatePinnedChatSettings(input: $input) {\n    settings {\n      isModAccessEnabled\n    }\n  }\n}\n"
    },
    "SetViewerCardModLogsAccessMutation": {
        "hash": "8c873e792a0d5ad523c2ab1fa5364f00456eb6dd44ae0c4a3e1423a0a5387e45",
        "query": "mutation SetViewerCardModLogsAccessMutation($input: SetViewerCardModLogsAccessInput!) {\n  setViewerCardModLogsAccess(input: $input) {\n    error {\n      code\n    }\n    channel {\n      id\n      moderationSettings {\n        canAccessViewerCardModLogs\n      }\n    }\n  }\n}\n"
    },
    "ViewerCardModLogsAccessQuery": {
        "hash": "cdf9d553358e7d248bd5a1e2d021b77a4dc6f2a6e79d989ca190b246c12720c1",
        "query": "query ViewerCardModLogsAccessQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    moderationSettings {\n      canAccessViewerCardModLogs\n    }\n  }\n}\n"
    },
    "BanEvasionDetectionPreviewLink": {
        "hash": "06ea57f5f601bb7dbf8354f2d10c2961dc007e9d9954e526d0ebb3a21d28fa45",
        "query": "query BanEvasionDetectionPreviewLink($channelID: ID) {\n  channel(id: $channelID) {\n    id\n    moderationSettings {\n      banEvasionDetection {\n        ... on BanEvasionDetectionSettings {\n          isEnabled\n          possibleTreatment\n          likelyTreatment\n        }\n        ... on BanEvasionDetectionSettingsError {\n          code\n        }\n      }\n    }\n  }\n}\n"
    },
    "TeamLandingMemberList": {
        "hash": "36ddda5ac1e2f2bf79cf982a0fc1dbd0f347c4587cd448ee86e686e75bec9c64",
        "query": "query TeamLandingMemberList($teamName: String!, $withLiveMembers: Boolean!, $liveMembersCursor: Cursor, $withMembers: Boolean!, $membersCursor: Cursor) {\n  team(name: $teamName) {\n    id\n    liveMembers(first: 10, after: $liveMembersCursor) @include(if: $withLiveMembers) {\n      edges {\n        node {\n          id\n          displayName\n          login\n          profileImageURL(width: 50)\n          stream {\n            id\n            viewersCount\n            __typename\n          }\n          __typename\n        }\n        cursor\n        __typename\n      }\n      pageInfo {\n        hasNextPage\n        __typename\n      }\n    }\n    members(first: 10, after: $membersCursor) @include(if: $withMembers) {\n      edges {\n        node {\n          id\n          displayName\n          login\n          profileImageURL(width: 50)\n          __typename\n        }\n        cursor\n        __typename\n      }\n      pageInfo {\n        hasNextPage\n        __typename\n      }\n    }\n    members {\n      totalCount\n      __typename\n    }\n    __typename\n  }\n}\n"
    },
    "TeamsLandingBody": {
        "hash": "3e12387077faa288147b138f769bf611b45f576374d81f13947de9a0a59e7992",
        "query": "query TeamsLandingBody($teamName: String!) {\n  team(name: $teamName) {\n    __typename\n    id\n    backgroundImageURL\n    bannerURL\n    description\n    displayName\n    logoURL\n    ...TeamsLandingBody_PlayerUser\n  }\n}\n\nfragment TeamsLandingBody_PlayerUser on Team {\n  liveMembers(first: 1) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        id\n        login\n        stream {\n          __typename\n          id\n        }\n      }\n    }\n  }\n  members(first: 1) {\n    __typename\n    edges {\n      __typename\n      node {\n        __typename\n        id\n        login\n      }\n    }\n  }\n  owner {\n    __typename\n    id\n    login\n  }\n}\n"
    },
    "ChannelPage_ChannelInfoBar_User": {
        "hash": "13cd21721b10495f80601eb6a3f2121c563ee368a862e92202a4acc6ac858189",
        "query": "query ChannelPage_ChannelInfoBar_User($login: String!) {\n  user(login: $login) {\n    id\n    login\n    description\n    displayName\n    profileImageURL(width: 70)\n    broadcastSettings {\n      id\n      title\n    }\n    followers {\n      totalCount\n    }\n    primaryTeam {\n      id\n      displayName\n      name\n    }\n    profileViewCount\n    stream {\n      id\n      viewersCount\n      game {\n        id\n        slug\n        name\n        displayName\n        boxArtURL(width: 40, height: 55)\n      }\n    }\n  }\n}\n"
    },
    "Chat_OrbisPresetText": {
        "hash": "aac31f55a6c8c5652a26ba5c5799704494c705ae9d9af3e17b0f056ccb636f57",
        "query": "query Chat_OrbisPresetText($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      platform {\n        ... on PlayStation {\n          title {\n            id\n            presetText\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "WatchTrackQuery": {
        "hash": "1a32d87f3eaca8bca99dd392c8855e6ef1ef78c7e5e77b6f287d022aa5339eac",
        "query": "fragment watchTrackGameFragment on Game {\n  id\n  name\n}\n\nfragment watchTrackBroadcastFragment on BroadcastSettings {\n  id\n  language\n}\n\nquery WatchTrackQuery($channelLogin: String, $videoID: ID, $hasVideoID: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    lastBroadcast {\n      id\n      game {\n        ...watchTrackGameFragment\n      }\n    }\n    broadcastSettings {\n      ...watchTrackBroadcastFragment\n    }\n    self {\n      follower {\n        node {\n          id\n        }\n      }\n    }\n    stream {\n      id\n    }\n  }\n  video(id: $videoID) @include(if: $hasVideoID) {\n    id\n    broadcastType\n    language\n    game {\n      ...watchTrackGameFragment\n    }\n  }\n}\n"
    },
    "ChannelInfo": {
        "hash": "5207a71bba91de52fad40fbfc0c6dfa9ba88977f7c678a1bf3293e086f5d86ce",
        "query": "query ChannelInfo($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    displayName\n  }\n}\n"
    },
    "SwitcherClipsCards__Game": {
        "hash": "0f0f6ba5a68459f0d7bebab297f7aa1ccbe1a2f4098459037bd44f6d8ca32ee5",
        "query": "query SwitcherClipsCards__Game($categorySlug: String!, $limit: Int, $cursor: Cursor, $criteria: GameClipsInput) {\n  game(slug: $categorySlug) {\n    id\n    name\n    clips(first: $limit, after: $cursor, criteria: $criteria) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          id\n          slug\n          url\n          title\n          viewCount\n          language\n          curator {\n            id\n            login\n            displayName\n          }\n          game {\n            id\n            name\n            slug\n          }\n          broadcaster {\n            id\n            login\n            displayName\n            profileImageURL(width: 50)\n            primaryColorHex\n            roles {\n              isPartner\n            }\n          }\n          thumbnailURL\n          createdAt\n          durationSeconds\n          previewThumbnailProperties {\n            blurReason\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "SwitcherDirectoryVideos_Category": {
        "hash": "38ce72fc41eb0c74f9ed3e0a34c0f45fe57f3d51fbba8bca5def7d1d14a93358",
        "query": "query SwitcherDirectoryVideos_Category($categorySlug: String!, $videoLimit: Int, $followedCursor: Cursor, $videoSort: VideoSort, $languages: [String!], $broadcastTypes: [BroadcastType!]) {\n  categoryResultBySlug(slug: $categorySlug) {\n    ... on Game {\n      id\n      name\n      videos(first: $videoLimit, after: $followedCursor, languages: $languages, types: $broadcastTypes, sort: $videoSort) {\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            lengthSeconds\n            owner {\n              id\n              displayName\n              login\n              profileImageURL(width: 50)\n              primaryColorHex\n              roles {\n                isPartner\n              }\n            }\n            game {\n              id\n              name\n              slug\n            }\n            previewThumbnailURL(width: 320, height: 180)\n            publishedAt\n            title\n            viewCount\n            contentTags {\n              ...tagFragment\n            }\n            previewThumbnailProperties {\n              blurReason\n            }\n          }\n        }\n      }\n    }\n    ... on CategoryDoesNotExist {\n      key\n      message\n    }\n    ... on CategoryError {\n      key\n    }\n  }\n}\n"
    },
    "SwitcherStreamMetadata": {
        "hash": "35d60c05729914b632612ebd0ffbf5f8bb21ca4dfd67850f40c05c7f39246269",
        "query": "query SwitcherStreamMetadata($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      type\n    }\n  }\n}\n"
    },
    "Switcher_SwitcherHeader": {
        "hash": "dcbacc5c20bfb1b0b6b9aa8af65fe9b8be85c350e060322a0e070afd02f422f1",
        "query": "query Switcher_SwitcherHeader($slug: String!) {\n  game(slug: $slug) {\n    id\n    slug\n    name\n    displayName\n    avatarURL(width: 144, height: 192)\n    description\n  }\n}\n"
    },
    "Switcher_CategoryInfo": {
        "hash": "8db90b7ddf52e7caea0c26663eeeca43e5e717c3416fe33f81589174c36458a9",
        "query": "query Switcher_CategoryInfo($slug: String!) {\n  game(slug: $slug) {\n    id\n    slug\n    name\n    displayName\n    avatarURL(width: 144, height: 192)\n    description\n    viewersCount\n    followersCount\n    tags(tagType: CONTENT) {\n      ...tagFragment\n    }\n    igdbURL\n  }\n}\n"
    },
    "DirectoryCollection_BrowsableCollection": {
        "hash": "ac86e0e3fc2d21b6f91477c0c2d8a1f8b2e5153c75040854a8937a738b755ac4",
        "query": "query DirectoryCollection_BrowsableCollection($slug: String!, $cursor: Cursor, $limit: Int, $options: BrowsableCollectionStreamsOptions, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  browsableCollection(input: {slug: $slug}) {\n    ...DirectoryCollection_collection\n  }\n}\n\nfragment DirectoryCollection_collection on BrowsableCollection {\n  id\n  slug\n  ...DirectoryCollection_Header_collection\n  ...DirectoryCollection_Content_collection\n}\n\nfragment DirectoryCollection_Header_collection on BrowsableCollection {\n  id\n  name {\n    ...DirectoryCollection_title\n  }\n  description {\n    ...DirectoryCollection_title\n  }\n}\n\nfragment DirectoryCollection_Content_collection on BrowsableCollection {\n  id\n  slug\n  streams(first: $limit, after: $cursor, options: $options) {\n    ...DirectoryCollection_streamConnection\n  }\n}\n\nfragment DirectoryCollection_title on BrowsableCollectionTitle {\n  fallbackLocalizedTitle\n}\n\nfragment DirectoryCollection_streamConnection on StreamConnection {\n  pageInfo {\n    hasNextPage\n  }\n  edges {\n    ...DirectoryCollection_streamEdge\n  }\n}\n\nfragment DirectoryCollection_streamEdge on StreamEdge {\n  cursor\n  node {\n    ...DirectoryCollection_stream\n  }\n  trackingID\n}\n\nfragment DirectoryCollection_stream on Stream {\n  id\n  title\n  viewersCount\n  previewImageURL(width: 440, height: 248)\n  broadcaster {\n    id\n    login\n    displayName\n    roles {\n      isPartner\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n    profileImageURL(width: $imageWidth)\n    primaryColorHex\n  }\n  freeformTags {\n    ...freeformTagFragment\n  }\n  type\n  game {\n    id\n    slug\n    boxArtURL(width: 40, height: 56)\n    name\n    displayName\n  }\n  previewThumbnailProperties {\n    blurReason\n  }\n}\n"
    },
    "PauseRaids": {
        "hash": "7635876236810764eb5999cc2c9a8b14f8d0b44e1f090a2bb8f0739e32743877",
        "query": "mutation PauseRaids($input: PauseRaidsInput!) {\n  pauseRaids(input: $input) {\n    user {\n      id\n      raidSettings {\n        isAllowingRaids\n        pausedUntil\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnpauseRaids": {
        "hash": "a3a826925b0b98a53ebb93d20c7e1ceb45b6a059136b9f8d53388c77a9f7fc90",
        "query": "mutation UnpauseRaids($input: UnpauseRaidsInput!) {\n  unpauseRaids(input: $input) {\n    user {\n      id\n      raidSettings {\n        isAllowingRaids\n        pausedUntil\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ActivityFeedSponsorshipCampaignInstancePacings": {
        "hash": "c071eb475f0f15a64753b38cc61d7a3cb37f852a10c911c25cf4bfc5e4d2a04b",
        "query": "query ActivityFeedSponsorshipCampaignInstancePacings() {\n  sponsorshipCampaignInstancePacings {\n    ...sponsorshipCampaignInstancePacing\n  }\n}\n"
    },
    "QuickActionsContext_ExtensionsQuery": {
        "hash": "9aeb0ea0393518439b7ed4fd2fe2afc24a64a35fda625e74a13e088d758b8c2d",
        "query": "query QuickActionsContext_ExtensionsQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    installedExtensions {\n      id\n      activationConfig {\n        state\n      }\n      extension {\n        id\n        views {\n          liveConfig {\n            viewerURL\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChatViewers": {
        "hash": "e772ac29a3fe3392fadc2a90b312d6dde3b9c081af3f9a8a5f3e35cff47cc362",
        "query": "query ChatViewers($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    chatters {\n      broadcasters {\n        login\n      }\n      staff {\n        login\n      }\n      moderators {\n        login\n      }\n      vips {\n        login\n      }\n      viewers {\n        login\n      }\n      count\n    }\n  }\n}\n"
    },
    "SearchResultsPage_SearchResults": {
        "hash": "46d54d9143a1482bbc32ba53f50e6fc1c5f77aafde8e6b47cee62a169f22886c",
        "query": "query SearchResultsPage_SearchResults($query: String!, $options: SearchForOptions, $requestID: ID, $platform: String, $includeIsDJ: Boolean!) {\n  searchFor(userQuery: $query, platform: $platform, options: $options, requestID: $requestID) {\n    banners\n    channels {\n      ...searchForChannelsFragment\n    }\n    channelsWithTag {\n      ...searchForChannelsWithTagFragment\n    }\n    games {\n      ...searchForGamesFragment\n    }\n    videos {\n      ...searchForVideosFragment\n    }\n    relatedLiveChannels {\n      ...relatedLiveChannelsFragment\n    }\n  }\n}\n\nfragment relatedLiveChannelsFragment on SearchForResultRelatedLiveChannels {\n  edges {\n    trackingID\n    item {\n      ...searchRelatedLiveChannelFragment\n    }\n  }\n  score\n}\n\nfragment searchForGamesFragment on SearchForResultGames {\n  cursor\n  edges {\n    trackingID\n    item {\n      ...searchForGameFragment\n      ...searchForVideoFragment\n      ...searchForUserFragment\n    }\n  }\n  score\n  totalMatches\n}\n\nfragment searchForChannelsFragment on SearchForResultUsers {\n  cursor\n  edges {\n    trackingID\n    item {\n      ...searchForUserFragment\n      ...searchForVideoFragment\n      ...searchForGameFragment\n    }\n  }\n  score\n  totalMatches\n}\n\nfragment searchForChannelsWithTagFragment on SearchForResultUsers {\n  cursor\n  edges {\n    trackingID\n    item {\n      ...searchForUserFragment\n      ...searchForVideoFragment\n      ...searchForGameFragment\n    }\n  }\n  score\n  totalMatches\n}\n\nfragment searchForVideosFragment on SearchForResultVideos {\n  cursor\n  edges {\n    trackingID\n    item {\n      ...searchForVideoFragment\n      ...searchForUserFragment\n      ...searchForGameFragment\n    }\n  }\n  score\n  totalMatches\n}\n\nfragment searchRelatedLiveChannelFragment on User {\n  id\n  stream {\n    id\n    viewersCount\n    previewImageURL(height: 112, width: 200)\n    previewImageURL\n    game {\n      name\n      id\n      slug\n    }\n    broadcaster {\n      id\n      primaryColorHex\n      login\n      displayName\n      broadcastSettings {\n        id\n        title\n      }\n      roles {\n        isPartner\n        isParticipatingDJ @include(if: $includeIsDJ)\n      }\n    }\n    previewThumbnailProperties {\n      blurReason\n    }\n  }\n  watchParty {\n    session {\n      id\n      contentRestriction\n    }\n  }\n}\n\nfragment searchForGameFragment on Game {\n  id\n  slug\n  name\n  displayName\n  boxArtURL(height: 120, width: 90)\n  boxArtURL\n  tags(tagType: CONTENT) {\n    ...tagFragment\n  }\n  viewersCount\n}\n\nfragment searchForScheduleSegmentFragment on ScheduleSegment {\n  id\n  startAt\n  endAt\n  title\n  hasReminder\n  categories {\n    id\n    name\n  }\n}\n\nfragment searchForUserFragment on User {\n  broadcastSettings {\n    id\n    title\n  }\n  displayName\n  followers {\n    totalCount\n  }\n  id\n  lastBroadcast {\n    id\n    startedAt\n  }\n  login\n  profileImageURL(width: 150)\n  description\n  channel {\n    id\n    schedule {\n      id\n      nextSegment {\n        ...searchForScheduleSegmentFragment\n      }\n    }\n  }\n  self {\n    canFollow\n    follower {\n      disableNotifications\n    }\n  }\n  videos(first: 1, sort: TIME, type: ARCHIVE) {\n    edges {\n      node {\n        ...searchForFeaturedVideoFragment\n      }\n    }\n  }\n  clips(first: 1, criteria: {sort: VIEWS_DESC}) {\n    edges {\n      node {\n        ...searchForFeaturedClipFragment\n      }\n    }\n  }\n  roles {\n    isPartner\n    isParticipatingDJ @include(if: $includeIsDJ)\n  }\n  stream {\n    game {\n      id\n      slug\n      name\n      displayName\n    }\n    id\n    previewImageURL(height: 120, width: 214)\n    previewImageURL\n    freeformTags {\n      ...freeformTagFragment\n    }\n    type\n    viewersCount\n    previewThumbnailProperties {\n      blurReason\n    }\n  }\n  watchParty {\n    session {\n      id\n      contentRestriction\n    }\n  }\n}\n\nfragment searchForFeaturedVideoFragment on Video {\n  id\n  lengthSeconds\n  title\n  previewThumbnailURL(width: 100, height: 56)\n  previewThumbnailURL\n  previewThumbnailProperties {\n    blurReason\n  }\n}\n\nfragment searchForFeaturedClipFragment on Clip {\n  id\n  title\n  durationSeconds\n  thumbnailURL\n  slug\n  previewThumbnailProperties {\n    blurReason\n  }\n}\n\nfragment searchForVideoFragment on Video {\n  createdAt\n  owner {\n    id\n    displayName\n    login\n    roles {\n      isPartner\n    }\n  }\n  id\n  game {\n    id\n    slug\n    name\n    displayName\n  }\n  lengthSeconds\n  previewThumbnailURL(height: 120, width: 214)\n  previewThumbnailURL\n  title\n  viewCount\n  previewThumbnailProperties {\n    blurReason\n  }\n}\n"
    },
    "ActiveModsCtx": {
        "hash": "bebc801bac9f8833d733f6abfbe9f372acc7ce6649784e81c2df13d6575c4048",
        "query": "query ActiveModsCtx($login: String!, $cursor: Cursor) {\n  user(login: $login) {\n    id\n    login\n    mods(first: 100, after: $cursor) {\n      edges {\n        isActive\n        cursor\n        node {\n          id\n          login\n          displayName\n          profileImageURL(width: 28)\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "AutoModQueueQuery": {
        "hash": "1417dd0f2007885dfc168a7d2f930ec2ac2fb57ffd28a805e8a8fe19b121963c",
        "query": "query AutoModQueueQuery($channelID: ID!) {\n  badges {\n    ...badge\n  }\n  user(id: $channelID) {\n    id\n    login\n    broadcastBadges {\n      ...badge\n    }\n  }\n}\n"
    },
    "ChannelAutoModSettings": {
        "hash": "a4390e21c3475c03b6701c55fb53c70f464fe5f9785fc281e7b8176bc363304e",
        "query": "query ChannelAutoModSettings($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    autoModConfiguration {\n      ...autoModConfiguration\n    }\n  }\n}\n"
    },
    "LowTrustUserDetails": {
        "hash": "4ecd990859412a18ac99dd7475c5f1a2b144a131dbb742e8250be3afff6598f8",
        "query": "query LowTrustUserDetails($userID: ID!, $channelID: ID!) {\n  badges {\n    ...badge\n  }\n  user(id: $userID) {\n    id\n    login\n    displayName\n    createdAt\n  }\n  user(id: $channelID) {\n    id\n    login\n    broadcastBadges {\n      ...badge\n    }\n  }\n}\n"
    },
    "BulkReportUsers": {
        "hash": "c772e06ba4331c5be29950da47db74323e21063e026fe2af932d4c9f16c8b434",
        "query": "mutation BulkReportUsers($input: ModViewBulkReportUsersInput!) {\n  modViewBulkReportUsers(input: $input) {\n    reportErrors {\n      targetUser {\n        id\n        login\n        displayName\n      }\n      code\n    }\n  }\n}\n"
    },
    "Whispers_Thread_WhisperThread": {
        "hash": "34a96259367c4a3e727f3856a5523bda8b5277c31b2baa28de1cb9c09ee679b3",
        "query": "query Whispers_Thread_WhisperThread($id: ID!, $cursor: Cursor) {\n  whisperThread(id: $id) {\n    ...threadData\n  }\n  currentUser {\n    id\n    chatColor\n    displayName\n    isEmailVerified\n    profileImageURL(width: 70)\n    login\n    displayBadges {\n      id\n      title\n      imageURL\n    }\n    blockedUsers {\n      id\n    }\n  }\n}\n"
    },
    "Threads_MarkAllWhispersAsRead": {
        "hash": "5c084e4b6ded1a1ea6e783e69067a7eeecac769458dc26bcd266ff55a545d916",
        "query": "mutation Threads_MarkAllWhispersAsRead($input: UpdateAllWhisperThreadsInput!) {\n  updateAllWhisperThreads(input: $input) {\n    count\n  }\n}\n"
    },
    "Whispers_Whispers_UserWhisperThreads": {
        "hash": "c5a2f148f6c6c81a6dba76b3845a59011ed3adc0e09992d2cf37fbe40f8ef3a2",
        "query": "query Whispers_Whispers_UserWhisperThreads($cursor: Cursor) {\n  currentUser {\n    id\n    login\n    whisperThreads(first: 10, after: $cursor) {\n      edges {\n        cursor\n        node {\n          ...currentUserWhisperThreadsNode\n        }\n        __typename\n      }\n      __typename\n    }\n  }\n}\n"
    },
    "Thread_ArchiveThread": {
        "hash": "d951a4223716bbf3a5a7cff7a9a63d37c9a2a831ad6071b11f457f5abb7ede3f",
        "query": "mutation Thread_ArchiveThread($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      isArchived\n    }\n  }\n}\n"
    },
    "Whispers_MarkThreadMessageRead": {
        "hash": "ba72da539ad3e6b37c5176d10a453aa4d3b3cef3eccfb69a825988b7c935937c",
        "query": "mutation Whispers_MarkThreadMessageRead($input: UpdateWhisperThreadInput!) {\n  updateWhisperThread(input: $input) {\n    thread {\n      id\n      unreadMessagesCount\n    }\n  }\n}\n"
    },
    "Whispers_Tracking_CurrentUser": {
        "hash": "0741135d31a0f09de0c8457badffa9e48a181fa4011efee6b8cf422b740a81af",
        "query": "query Whispers_Tracking_CurrentUser() {\n  currentUser {\n    id\n    hasTurbo\n    availability\n    login\n  }\n}\n"
    },
    "Whispers_Tracking_Read": {
        "hash": "924dac4b2a61648e32b2951c11b8c8148b0dd9d4098075026e862620d1eb0694",
        "query": "query Whispers_Tracking_Read($threadID: ID!) {\n  currentUser {\n    id\n    login\n  }\n  whisperThread(id: $threadID) {\n    id\n    participants {\n      id\n      login\n      self {\n        whisperPermissions {\n          receive\n        }\n      }\n    }\n  }\n}\n"
    },
    "PopoutViewerCard_UserQuery": {
        "hash": "6e9bfaa0b04afe9517359d1a5540d74589d090daf2d17625deaee70643ec5324",
        "query": "query PopoutViewerCard_UserQuery($login: String!) {\n  user(login: $login) {\n    id\n    login\n  }\n}\n"
    },
    "ModViewUserDetails_GiftSubEligibility": {
        "hash": "be2c60b65e619fbee8beea620e73635a1faf48a20805a004903cf1705d293638",
        "query": "query ModViewUserDetails_GiftSubEligibility($giftRecipientLogin: String, $subProductId: String!) {\n  user(login: $giftRecipientLogin) {\n    id\n    self {\n      canGift(product: $subProductId)\n    }\n  }\n}\n"
    },
    "ModViewUserDetails_SubscriptionProducts": {
        "hash": "866e677924dd1cc5bea18464550e367049e51cdbe32d8a1bf9e71b66f976b5e5",
        "query": "query ModViewUserDetails_SubscriptionProducts($channelID: ID, $giftRecipientLogin: String, $withStandardGifting: Boolean) {\n  user(id: $channelID) {\n    id\n    subscriptionProducts {\n      ...subscriptionProduct\n    }\n  }\n  user(login: $giftRecipientLogin) {\n    id\n    relationship(targetUserID: $channelID) {\n      subscriptionTenure(tenureMethod: CUMULATIVE) {\n        ...tenure\n      }\n    }\n  }\n}\n"
    },
    "CreateChannelGoal": {
        "hash": "8359e0629828c197dc35c9bb07904036c595d8179f5d3b003d86372824f772db",
        "query": "mutation CreateChannelGoal($input: CreateChannelGoalInput!) {\n  createChannelGoal(input: $input) {\n    goal {\n      ...channelGoalFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "updateChannelGoal": {
        "hash": "e22fcb29b66e1139d17a259ffcff131349ff6308b6b09d03bf77bc1553fcff3c",
        "query": "mutation updateChannelGoal($input: UpdateChannelGoalInput!) {\n  updateChannelGoal(input: $input) {\n    goal {\n      ...channelGoalFragment\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "SetCreatorPartnerPlusWidgetSetting": {
        "hash": "e1f0c64d38326c1b47b9b0a4254be1382919624985a211d55ea4cd98f410a927",
        "query": "mutation SetCreatorPartnerPlusWidgetSetting($input: SetCreatorPartnerPlusWidgetSettingInput!) {\n  setCreatorPartnerPlusWidgetSetting(input: $input) {\n    channel {\n      id\n    }\n  }\n}\n"
    },
    "SetWidgetPreference": {
        "hash": "d8e1d368e251d6cf8467dffc361fe8f3cc02a6e18571fbffc84426883a8aa219",
        "query": "mutation SetWidgetPreference($input: SetPlusWidgetSettingInput!) {\n  setPlusWidgetSetting(input: $input) {\n    channel {\n      id\n    }\n  }\n}\n"
    },
    "QuickAction_ManagePartnerPlus": {
        "hash": "05c444ee023805e45714782ca29b2c45bcdf4db456a1cf23b19048560391aea1",
        "query": "query QuickAction_ManagePartnerPlus($channelID: ID!) {\n  plusStatus(channelID: $channelID) {\n    partnerPlusProgram {\n      subPoints {\n        year\n        month\n        count\n      }\n      widgetSetting\n    }\n    creatorPartnerPlusWidgetSetting {\n      isEnabled\n    }\n  }\n}\n"
    },
    "QuickAction_ManageGoalsModal": {
        "hash": "faed8fc5cd042a9fe06e2802e35b15bf688074ab71b8de5a3ada8c7bb5cf3965",
        "query": "query QuickAction_ManageGoalsModal($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    cheer {\n      id\n      isBitsEnabled\n    }\n    subscriptionProducts {\n      id\n    }\n  }\n  plusStatus(channelID: $channelID) {\n    partnerPlusProgram {\n      canShowWidget\n    }\n  }\n}\n"
    },
    "QuickAction_ManageGoals": {
        "hash": "40d72f8012ea8c4e73f45d861755794f8651e0c92878c1e65024fe707f912f9b",
        "query": "query QuickAction_ManageGoals($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    bannerImageURL\n    primaryColorHex\n    subscriptionProducts {\n      id\n    }\n    subscriberScore {\n      current\n      count\n      breakdown {\n        score\n        tier\n      }\n    }\n    followers {\n      totalCount\n    }\n  }\n}\n"
    },
    "DashboardCreateVideoBookmark": {
        "hash": "d4b8b93f8aed4ef7b9312a449cfbec8bd7ef4bc88d57c28e9be3e5cc09156690",
        "query": "mutation DashboardCreateVideoBookmark($input: CreateVideoBookmarkInput!) {\n  createVideoBookmark(input: $input) {\n    videoBookmark {\n      id\n      positionSeconds\n    }\n  }\n}\n"
    },
    "StreamMarker": {
        "hash": "ff930c6377c3e1b5d575e0e5bbb3413cb90294b344d06e3cf63cd2a34f07907b",
        "query": "query StreamMarker($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      createdAt\n      type\n      archiveVideo {\n        id\n      }\n    }\n  }\n  channel(name: $channelLogin) {\n    id\n    videoStreamSettings {\n      shouldArchiveVODs\n    }\n  }\n}\n"
    },
    "SetUnbanRequestsSettings": {
        "hash": "d6afd437692d1553987b86e5d37f3e1d2fd28e8db310038f07b9dba59e54db29",
        "query": "mutation SetUnbanRequestsSettings($input: SetUnbanRequestsSettingsInput!) {\n  setUnbanRequestsSettings(input: $input) {\n    settings {\n      isEnabled\n      cooldownMinutes\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "StoriesForViewers": {
        "hash": "ec0bfd88efc98620e1a54cf32a336cae2f1ee0aedfe1594deb3b03278c53853e",
        "query": "query StoriesForViewers($channelID: ID!, $first: Int, $after: Cursor, $capabilities: [StoryFeatureCapability!]) {\n  storiesForViewers(channelID: $channelID, first: $first, after: $after, capabilities: $capabilities) {\n    ...StoryConnectionFragment\n  }\n}\n"
    },
    "StreamEventsByLogin": {
        "hash": "3f476123cfa416fca19aaafd042b703cf761d5ee2d92648b9d65ba7fc0a9bc94",
        "query": "query StreamEventsByLogin($login: String!) {\n  channel(name: $login) {\n    id\n    streamEvents {\n      ...streamEvent\n    }\n    activeStreamEventCelebration {\n      id\n    }\n  }\n}\n"
    },
    "UpdateStreamEventsEventDate": {
        "hash": "e0a74298d1025320dfdd21386a5cc71eb828cdbf7faa3c074202782ffa2845c1",
        "query": "mutation UpdateStreamEventsEventDate($id: ID!, $originalEventDate: Time!) {\n  updateStreamEvent(input: {id: $id, originalEventDate: $originalEventDate}) {\n    event {\n      ...streamEvent\n    }\n    error\n  }\n}\n"
    },
    "UpdateStreamEventsCelebrationDate": {
        "hash": "c1d60aedfcef8fc63f81bac49e4ba6b8d4123462579fc29fca185b9dd0f81f06",
        "query": "mutation UpdateStreamEventsCelebrationDate($id: ID!, $occursAt: Time!) {\n  updateStreamEventCelebration(input: {id: $id, occursAt: $occursAt}) {\n    celebration {\n      ...streamEventCelebration\n    }\n    error\n  }\n}\n"
    },
    "UpdateStreamEventCelebration": {
        "hash": "ea43da89e60ba29e3520ae0f75b63991465c6d4765513d157663e8958da72236",
        "query": "mutation UpdateStreamEventCelebration($input: UpdateStreamEventCelebrationInput!) {\n  updateStreamEventCelebration(input: $input) {\n    celebration {\n      ...streamEventCelebration\n    }\n    error\n  }\n}\n"
    },
    "UpdateStreamEvent": {
        "hash": "b6ea8526606b2ab906ca460cd1f0fcde96240618735feaf60137cd647602d59f",
        "query": "mutation UpdateStreamEvent($input: UpdateStreamEventInput!) {\n  updateStreamEvent(input: $input) {\n    event {\n      ...streamEvent\n    }\n    error\n  }\n}\n"
    },
    "ModeratedChannels": {
        "hash": "f77e17ffe9eaf7c9d30cde7ce7bb39cd13cb3d652ca29deb58fe203f482bd25a",
        "query": "query ModeratedChannels($cursor: Cursor) {\n  moderatedChannels(first: 100, after: $cursor) {\n    edges {\n      ...moderatedChannelEdge\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "TopLevelModViewBar_ModeratedChannels": {
        "hash": "aa5a7598834101c6cbe7414af0ec7d5c7708d1705439622c8a482d0f501ef2e6",
        "query": "query TopLevelModViewBar_ModeratedChannels() {\n  moderatedChannels(first: 100) {\n    edges {\n      ...moderatedChannelEdge\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "DevExtensionUploadAssets": {
        "hash": "6b86998bd46f2c9f848079d956180b4eedd8c27920c95dd87f070df2f60977ca",
        "query": "mutation DevExtensionUploadAssets($input: CreateExtensionZipUploadInfoInput!) {\n  createExtensionZipUploadInfo(input: $input) {\n    response {\n      url\n      uploadID\n    }\n    error\n  }\n}\n"
    },
    "Collection_LocalizedTitle": {
        "hash": "26dff129ef76c2c9a9558e87375cf8e312453bfc6244dd27c7352e606cf048f1",
        "query": "query Collection_LocalizedTitle($slug: String!) {\n  browsableCollection(input: {slug: $slug}) {\n    id\n    slug\n    name {\n      fallbackLocalizedTitle\n    }\n  }\n}\n"
    },
    "ImpressionAnalytics": {
        "hash": "90842a2aa778a902c69299b477fea3b7cfcb887bb479da35d1368b874c4d2e19",
        "query": "query ImpressionAnalytics($channelID: ID!, $start: Time!, $end: Time!, $filter: ImpressionAnalyticsFilter, $dimension: ImpressionAnalyticsDimension!, $first: Int, $includes: [String]) {\n  impressionAnalytics(channelID: $channelID, start: $start, end: $end, filter: $filter, dimension: $dimension, first: $first, includes: $includes) {\n    items {\n      count\n      name\n    }\n  }\n}\n"
    },
    "ReferralAnalyticsCollectionsCategories": {
        "hash": "b2a4139f22bac53eb75c14b765898bdc0feda9e88ba831cb3f46a5ba3fd6918d",
        "query": "query ReferralAnalyticsCollectionsCategories($channelID: ID!, $start: Time!, $end: Time!, $first: Int!, $dimension: ReferralsDimension!, $filter: ReferralsFilter!) {\n  user(id: $channelID) {\n    id\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: $dimension, filter: $filter) {\n      items {\n        count\n        name\n      }\n    }\n  }\n}\n"
    },
    "VerticalsUpcomingSchedules": {
        "hash": "7f8083ba66feaca213a0540bb78479d33c0717b549e63f6d95999df44ce75360",
        "query": "query VerticalsUpcomingSchedules($categoryID: ID!, $options: FeaturedUpcomingStreamsOptions!) {\n  featuredUpcomingStreams(categoryID: $categoryID, limit: 3, options: $options) {\n    nodes {\n      id\n      reminderCount\n      segment {\n        id\n        title\n        baseSegmentID\n        repeatEndsAfterCount\n        channel {\n          id\n          name\n          owner {\n            id\n            profileImageURL(width: 150)\n            bannerImageURL\n            primaryColorHex\n            login\n            tags {\n              id\n              localizedName\n            }\n          }\n          stream {\n            id\n            viewersCount\n          }\n        }\n        startAt\n        endAt\n        hasReminder\n        isCancelled\n      }\n    }\n  }\n}\n"
    },
    "BrowseVerticalDirectory": {
        "hash": "27f0cc23e57d288d34beab3d1c508ed7a73f62efda0ec20ef3a96678fa69bded",
        "query": "query BrowseVerticalDirectory($id: ID!, $recommendationsContext: RecommendationsContext!, $contentMin: Int!, $contentMax: Int!, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  verticalDirectory(id: $id, recommendationsContext: $recommendationsContext, contentMin: $contentMin, contentMax: $contentMax) {\n    id\n    trackingID\n    title {\n      ...shelfTitle\n    }\n    subtitle {\n      ...shelfTitle\n    }\n    shelfGroups {\n      ...browseVerticalShelfGroup\n    }\n  }\n}\n"
    },
    "PayoutSettingsPage_CurrentUser": {
        "hash": "de627cdb65ade9a9b3b7404aef79b076a2105a5f8c4b4623109558c8215db78d",
        "query": "query PayoutSettingsPage_CurrentUser() {\n  currentUser {\n    id\n    onboardingInvitations {\n      payout {\n        id\n        category\n        workflow {\n          id\n          currentStep\n          payoutSettingsURL\n        }\n      }\n    }\n  }\n}\n"
    },
    "PollsPageRoot": {
        "hash": "fac84ddd19a39c008923628d9242e2492e44c5c88f1a4bd2e95c5429e7164669",
        "query": "query PollsPageRoot($login: String!) {\n  user(login: $login) {\n    id\n    self {\n      isEditor\n      isModerator\n    }\n  }\n  currentUser {\n    id\n    isStaff\n  }\n}\n"
    },
    "PersistentGoalFollowButton_User": {
        "hash": "35505b97f6afb3ba6ba07ceb8c9540fb478912c458892e65f194d869760d21ff",
        "query": "query PersistentGoalFollowButton_User($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    ...followButtonFragment\n  }\n}\n"
    },
    "DMCAViolationCountBanner": {
        "hash": "f7616e7dbfc4faecf21a6b938e623dd6e5189761ddc356832ef593fd7cf9759d",
        "query": "query DMCAViolationCountBanner($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    dmcaViolationCount\n  }\n}\n"
    },
    "SecurityPage_LogoutFromAll": {
        "hash": "0422e280aecb16fbf35c63d48ffabda1c166fc951f44cf577884a14a544ad5da",
        "query": "mutation SecurityPage_LogoutFromAll() {\n  logoutAllSessions {\n    token\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "SecurityPage_UserSessions": {
        "hash": "89b7fe0637d8321f998e9ea83866536346bfe1ed813db7790140fbcaf7aa0440",
        "query": "query SecurityPage_UserSessions($limit: Int!, $cursor: Cursor, $persistentCookie: String!) {\n  currentUser {\n    id\n    settings {\n      userSignedInDevices(first: $limit, after: $cursor, persistentCookie: $persistentCookie) {\n        edges {\n          cursor\n          node {\n            browser\n            os\n            createdAt\n            location\n            isActiveSession\n          }\n        }\n        totalCount\n      }\n    }\n  }\n}\n"
    },
    "CancelPaidUpgradeSubscription": {
        "hash": "48ddfa3b4b323f70065a439ec8486cc7fe735776b0746c75ce69c1ec4097bc12",
        "query": "mutation CancelPaidUpgradeSubscription($input: CancelPaidUpgradeSubscriptionInput!) {\n  cancelPaidUpgradeSubscription(input: $input) {\n    subscriptionID\n    errorCode\n  }\n}\n"
    },
    "SubscriptionsManagement_ExpiredSubscriptions": {
        "hash": "09e1600011ca142eab4276b2001dcda3cc6cb77cb4d898f407ce0df33c0dda46",
        "query": "query SubscriptionsManagement_ExpiredSubscriptions($limit: Int, $cursor: Cursor) {\n  currentUser {\n    id\n    expiredSubscriptions(first: $limit, after: $cursor) {\n      edges {\n        node {\n          ...expiredSubscription\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n    }\n  }\n  moneyBannerNotifications(platform: \"web\") {\n    ...moneyBannerFragment\n  }\n}\n"
    },
    "SubscriptionsManagement_SubscriptionBenefits": {
        "hash": "73d2146896ac419409bf434f777733f6e943b244c88c362c654c796e746c83c4",
        "query": "query SubscriptionsManagement_SubscriptionBenefits($limit: Int, $cursor: Cursor, $filter: SubscriptionBenefitFilter, $platform: SubscriptionPlatform) {\n  requestInfo {\n    countryCode\n  }\n  currentUser {\n    id\n    hasPrime\n    availableBadges {\n      ...badge\n    }\n    subscriptionToken {\n      balance\n    }\n    subscriptionBenefits(first: $limit, after: $cursor, criteria: {filter: $filter, platform: $platform}) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          ...subscriptionBenefit\n        }\n      }\n    }\n    subscriptionSettings {\n      isFounderBadgesHidden\n    }\n  }\n  moneyBannerNotifications(platform: \"web\") {\n    ...moneyBannerFragment\n  }\n}\n"
    },
    "CancelGift": {
        "hash": "0a5826b5baddc1663897e16e2b85efe7b63f425087d587369809159d08ef09d3",
        "query": "mutation CancelGift($input: CancelSubscriptionGiftInput!) {\n  cancelSubscriptionGift(input: $input) {\n    gift {\n      isGift\n    }\n  }\n}\n"
    },
    "QuickActionsStreamMarkerQuery": {
        "hash": "84e98811bee726511087c30e3f4bd401f0d7d73316a08fb4f90545afd4ea50d2",
        "query": "query QuickActionsStreamMarkerQuery($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "BitsThresholdSettingsForm_GetBitsThresholdSettings": {
        "hash": "f3101ac1a96ee10c2d449c5d176373c224fe55d100fa179022dd1fc01ee76603",
        "query": "query BitsThresholdSettingsForm_GetBitsThresholdSettings($login: String!) {\n  user(login: $login) {\n    id\n    login\n    settings {\n      cheer {\n        id\n        chatMessage {\n          minBitsPerEmote\n          minBitsToCheer\n        }\n        pinnedCheers {\n          isEnabled\n          minBits\n        }\n      }\n    }\n  }\n}\n"
    },
    "BitsThresholdSettingsForm_SetIsPinnedCheersEnabled": {
        "hash": "10a26e6347ec597cf0457cce57627dabedcc67cf3ee594b555f1ceebc5216c48",
        "query": "mutation BitsThresholdSettingsForm_SetIsPinnedCheersEnabled($input: UpdateCheerPartnerSettingsInput!) {\n  updateCheerPartnerSettings(input: $input) {\n    cheer {\n      id\n      pinnedCheers {\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "BitsThresholdSettingsForm_SetMinBitsPerEmote": {
        "hash": "700991c8db80c9a12abf4342f3237d5e7290208ced075a4d6ba2956f8a57d754",
        "query": "mutation BitsThresholdSettingsForm_SetMinBitsPerEmote($input: UpdateCheerPartnerSettingsInput!) {\n  updateCheerPartnerSettings(input: $input) {\n    cheer {\n      id\n      chatMessage {\n        minBitsPerEmote\n      }\n    }\n  }\n}\n"
    },
    "BitsThresholdSettingsForm_SetMinBitsToCheer": {
        "hash": "e5edadabed5c782736e469e21d5da20e4a021a95f951839320bb5c9be12c338f",
        "query": "mutation BitsThresholdSettingsForm_SetMinBitsToCheer($input: UpdateCheerPartnerSettingsInput!) {\n  updateCheerPartnerSettings(input: $input) {\n    cheer {\n      id\n      chatMessage {\n        minBitsToCheer\n      }\n    }\n  }\n}\n"
    },
    "BitsThresholdSettingsForm_SetMinBitsToPin": {
        "hash": "6f509f2f7575dfa062c50666cc13eb97417d9ff67642a10078ebae9e47a57457",
        "query": "mutation BitsThresholdSettingsForm_SetMinBitsToPin($input: UpdateCheerPartnerSettingsInput!) {\n  updateCheerPartnerSettings(input: $input) {\n    cheer {\n      id\n      pinnedCheers {\n        minBits\n      }\n    }\n  }\n}\n"
    },
    "CheerSettingsForm_OnboardUser": {
        "hash": "6eae93827dc632d714a9fdbe416a4735fabe86c171b5d5b38f72af503d4089fe",
        "query": "mutation CheerSettingsForm_OnboardUser($input: UpdateCheerPartnerSettingsInput!) {\n  updateCheerPartnerSettings(input: $input) {\n    cheer {\n      id\n      isOnboarded\n    }\n  }\n}\n"
    },
    "CheerSettingsForm_GetBitsOnboardedSettings": {
        "hash": "c4f4b74cec891bd207832eb13e6ca7a99e2727926b3f66ae9c074a1db0c9cd29",
        "query": "query CheerSettingsForm_GetBitsOnboardedSettings($login: String!) {\n  user(login: $login) {\n    id\n    settings {\n      cheer {\n        id\n        hasSignedBitsAmendment\n        isOnboarded\n      }\n    }\n  }\n}\n"
    },
    "ChatClip": {
        "hash": "a504b7e4580a0f2d7e9d231d2dbdbd56517d1f4a496cf4cbb197174bf51d0181",
        "query": "query ChatClip($clipSlug: ID!) {\n  clip(slug: $clipSlug) {\n    id\n    videoOffsetSeconds\n    durationSeconds\n    video {\n      id\n    }\n  }\n}\n"
    },
    "AccountReactivationModal": {
        "hash": "3ac435af3798730c62d8f831dd21e7958e0e06f936aef86b58595302495b9de4",
        "query": "query AccountReactivationModal($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    follows(first: 3) {\n      totalCount\n      edges {\n        node {\n          id\n          displayName\n          profileImageURL(width: 50)\n          login\n        }\n      }\n    }\n  }\n}\n"
    },
    "Login_FacebookAndEmail": {
        "hash": "31c356e0c1d7577b870abb368b00b20bd671e34ffc2f058323616b41b80e499a",
        "query": "query Login_FacebookAndEmail() {\n  currentUser {\n    id\n    isEmailVerified\n    email\n    accountHealth {\n      accountSecurityState\n    }\n  }\n}\n"
    },
    "AuthShellHeader": {
        "hash": "4a4ffb1e3562ad4e6d53acd118748a2ff337382d3ab08ef67d99b0801cd3b04c",
        "query": "query AuthShellHeader() {\n  currentUser {\n    id\n    login\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "UsernameValidator_User": {
        "hash": "fd1085cf8350e309b725cf8ca91cd90cac03909a3edeeedbd0872ac912f3d660",
        "query": "query UsernameValidator_User($username: String!) {\n  isUsernameAvailable(username: $username)\n}\n"
    },
    "Settings_ChannelChat_BannedChatters": {
        "hash": "40027f4e6b941826d952db6ef173156d8c14152521e23bf611bc223331cae26b",
        "query": "query Settings_ChannelChat_BannedChatters($channelLogin: String, $cursor: Cursor) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      bannedUsers(first: 100, after: $cursor) {\n        cursor\n        edges {\n          node {\n            ...BannedUser\n          }\n        }\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n}\n"
    },
    "UnBanUserFromChat": {
        "hash": "8f05872ca0d2cb5dab58abeaff7f43c9ebe7353d9a7e29813881bd730180b3dd",
        "query": "mutation UnBanUserFromChat($input: UnbanUserFromChatRoomInput!) {\n  unbanUserFromChatRoom(input: $input) {\n    ban {\n      bannedUser {\n        id\n        login\n      }\n      createdAt\n      moderator {\n        id\n        displayName\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CallStateConsistencyQuery": {
        "hash": "d45531fabcaf00b63fb25b7f0baf4050074fc6949a223affd2c56261faf7b7f0",
        "query": "fragment coreSlotState on GuestStarSlot {\n  id\n  assignedAt\n  updatedAt\n  isSlotLive\n  user {\n    id\n  }\n  audio {\n    isHostEnabled\n    isGuestEnabled\n  }\n  video {\n    isHostEnabled\n    isGuestEnabled\n  }\n}\n\nquery CallStateConsistencyQuery($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    guests {\n      id\n      ...coreSlotState\n      ...sessionParticipant\n    }\n  }\n}\n"
    },
    "SetIsBrowserSourceAudioEnabled": {
        "hash": "cc2400df630bf3b531e4722cd7b40af290882882ef6b0ad347a52a3138443f6d",
        "query": "mutation SetIsBrowserSourceAudioEnabled($input: SetGuestStarUserSettingsInput!) {\n  setGuestStarUserSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GuestStarSettingsModalNavbar": {
        "hash": "7b53bf68e28a66e3e475de3d89ec3577ade5d49de966a17a450b313b1e6b6fb5",
        "query": "query GuestStarSettingsModalNavbar() {\n  currentUser {\n    id\n    roles {\n      isStaff\n    }\n  }\n}\n"
    },
    "GetGuestStarSelfRole": {
        "hash": "1e317e75b7a0d5f8ef25ed0dd48d0e5ca1005d7ef2ed403d9f670b8c08932369",
        "query": "query GetGuestStarSelfRole($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    host {\n      id\n    }\n    self {\n      role\n    }\n  }\n}\n"
    },
    "ClearRTJQueue": {
        "hash": "ffab0a47b9710154fd102217171beb27c1d0d52c335de3cd4226df6c57f2f755",
        "query": "mutation ClearRTJQueue($input: ClearRTJQueueInput!) {\n  clearRTJQueue(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CloseRTJQueue": {
        "hash": "e0c6ea15e9b447f0298c740e15fdca7907fb1a7f57c0fda9a331d359b0e930d1",
        "query": "mutation CloseRTJQueue($input: CloseRTJQueueInput!) {\n  closeRTJQueue(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateRTJQueue": {
        "hash": "7f5cfcb2e0a0866c321116a178f93db9583d317d27ed8fbe37cf1a6f0e2af460",
        "query": "mutation CreateRTJQueue($input: CreateRTJQueueInput!) {\n  createRTJQueue(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "endGuestStarScreenshare": {
        "hash": "cb07b056172bfc04d5d7b606def658c8eb14267783fbc6173b5d47835aa9b8cf",
        "query": "mutation endGuestStarScreenshare($input: EndGuestStarScreenshareInput!) {\n  endGuestStarScreenshare(input: $input) {\n    session {\n      id\n      guests {\n        id\n        isSlotLive\n        participantID\n        audio {\n          isAvailable\n          isHostEnabled\n          isGuestEnabled\n        }\n        video {\n          isAvailable\n          isHostEnabled\n          isGuestEnabled\n        }\n        user {\n          id\n        }\n      }\n      self {\n        guest {\n          ...guestStarSessionSelfSlotFragment\n        }\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GetGuestStarChangelogReadTimestamp": {
        "hash": "d5633bc4f816c14e3a40eabfeb6004424e6fc6081fcba1a82ba111772ed98054",
        "query": "query GetGuestStarChangelogReadTimestamp() {\n  guestStarChangelogReadTimestamp {\n    timestamp\n  }\n}\n"
    },
    "GetActiveGuestStarSessionQuery": {
        "hash": "4f2a490b86346bfc980e4272d80c20dcedbe1be8843a4eafbe8e5b9ce97c5176",
        "query": "query GetActiveGuestStarSessionQuery($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    host {\n      ...guestStarUser\n    }\n    guests {\n      ...sessionParticipant\n    }\n  }\n}\n"
    },
    "GetSubscriberFollowersCount": {
        "hash": "43005e1f281c04622e2fc252a00410b3ae5dd1a3c0ed1d90fc123a6ab51fac9a",
        "query": "query GetSubscriberFollowersCount($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    subscriberScore {\n      count\n    }\n    followers {\n      totalCount\n    }\n  }\n}\n"
    },
    "FollowerCount": {
        "hash": "98efb70415f69e7c09f3d634406bb727362af4caece4f23e36ed0b77412affd7",
        "query": "query FollowerCount($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    followers {\n      totalCount\n    }\n  }\n}\n"
    },
    "ModAndEditorsList": {
        "hash": "be15597b02da6155417171ea2fc837f55a94220da0c197d80f9dcec8d07d74d5",
        "query": "query ModAndEditorsList($login: String!, $cursor: Cursor) {\n  user(login: $login) {\n    id\n    mods(first: 100, after: $cursor) {\n      edges {\n        cursor\n        node {\n          ...guestStarModAndEditorNodeFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    editors {\n      edges {\n        node {\n          ...guestStarModAndEditorNodeFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "GuestStarNameplateSettings": {
        "hash": "50355b9bf1d30f08cb64a5b81cdfce19e6a0dfdd342f99931968477a4af5ca0c",
        "query": "query GuestStarNameplateSettings($channelLogin: String, $viewOnlyToken: String) {\n  guestStarSettings(userLogin: $channelLogin, viewOnlyKey: $viewOnlyToken) {\n    id\n    hostSettings {\n      isNameplatesEnabled\n      browserSourceSettings {\n        nameplateSize\n        nameplateLocation\n      }\n    }\n  }\n}\n"
    },
    "GetGuestStarSessionSettingsQuery": {
        "hash": "547c0f151bd0bab6e8e1fa761415f3a0ebaaa616320ccd56de24f797e596cdea",
        "query": "query GetGuestStarSessionSettingsQuery($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    settings {\n      isAudioOnlyEnabled\n      isGuestInvitesEnabled\n      isAutoPushEnabled\n      guestScreensharePermission\n    }\n    host {\n      id\n    }\n  }\n}\n"
    },
    "GetUserIDFromLogin": {
        "hash": "ced649c23ba44974e6ea1ff00c22280c267029625a0d2a5c448feef08fa526c7",
        "query": "query GetUserIDFromLogin($login: String!, $lookupType: UserLookupType!) {\n  user(login: $login, lookupType: $lookupType) {\n    id\n  }\n}\n"
    },
    "GetHostSettings": {
        "hash": "477ce9dd614e9a2fec4ff62d00e6e73f5827ab8a338fbcdd00ca224ae9dffb95",
        "query": "query GetHostSettings($sessionOptions: GuestStarSessionOptions!) {\n  guestStarSession(options: $sessionOptions) {\n    id\n    host {\n      id\n      login\n    }\n    hostSettings {\n      browserSourceLayout\n      isBrowserSourceAudioEnabled\n      slotCount\n      guestScreensharePermission\n    }\n  }\n}\n"
    },
    "notifyGuestStarFollowers": {
        "hash": "4fbfcd0a9194a6ab0f11a7ed127660cf9b2ffa0bceffc09224509e516227a85e",
        "query": "mutation notifyGuestStarFollowers($input: NotifyGuestStarFollowersInput!) {\n  notifyGuestStarFollowers(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RegenerateGuestStarViewOnlyToken": {
        "hash": "3d2ac845db9b0307c1d958188cc67f58cf1efa5ce3e19823b557ffc2c934e106",
        "query": "mutation RegenerateGuestStarViewOnlyToken($input: RegenerateGuestStarViewOnlyTokenInput!) {\n  regenerateGuestStarViewOnlyToken(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SetGuestStarChangelogReadTimestamp": {
        "hash": "f9d37f8a50b118b964f2877a76a36ba25f1ccfc0cdd3c23e6e5c9c18ac423404",
        "query": "mutation SetGuestStarChangelogReadTimestamp($input: SetGuestStarChangelogReadTimestampInput!) {\n  setGuestStarChangelogReadTimestamp(input: $input) {\n    __typename\n    timestamp\n  }\n}\n"
    },
    "SetGuestStarSessionSettings": {
        "hash": "5b21b3c30540a58fca3e87cdfe272b5cccf0a2fe4d7bcd8fc14d1adbe3a12ff1",
        "query": "mutation SetGuestStarSessionSettings($input: SetGuestStarSessionSettingsInput!) {\n  setGuestStarSessionSettings(input: $input) {\n    session {\n      id\n      settings {\n        isAutoPushEnabled\n        isAudioOnlyEnabled\n        guestScreensharePermission\n      }\n    }\n  }\n}\n"
    },
    "StartGuestStarScreenshare": {
        "hash": "d706dc14bb037a893e823ae873b9dbf9b645ecb8fed28da692fcbbe97d1e1d0b",
        "query": "mutation StartGuestStarScreenshare($input: StartGuestStarScreenshareInput!) {\n  startGuestStarScreenshare(input: $input) {\n    slot {\n      id\n      isSlotLive\n      participantID\n      audio {\n        isAvailable\n        isHostEnabled\n        isGuestEnabled\n      }\n      video {\n        isAvailable\n        isHostEnabled\n        isGuestEnabled\n      }\n      user {\n        id\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateRTJQueueStatus": {
        "hash": "298571d012c22e8da331edf63a149695b82260d6ceff93fedca07d0228b55f8f",
        "query": "mutation UpdateRTJQueueStatus($input: UpdateRTJQueueStatusInput!) {\n  updateRTJQueueStatus(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreatorChatLiveEvent": {
        "hash": "06b5559f088b075e2e4a981c3618bfdda100ccc830a7aeeec181bc08eff51ca5",
        "query": "query CreatorChatLiveEvent($creatorID: ID!) {\n  user(id: $creatorID) {\n    id\n    login\n    displayName\n  }\n}\n"
    },
    "UseStreamHealthQuery": {
        "hash": "f47975e477af6315332f0b2547803ca799b37deb93d593df2eccec8e187abaa7",
        "query": "query UseStreamHealthQuery($channelID: ID!, $secondsAgo: Int!, $includeDetails: Boolean!) {\n  videoIngestSessionLatest(channelID: $channelID, secondsAgo: $secondsAgo) {\n    ...streamHealthSession\n  }\n  currentUser {\n    id\n  }\n}\n\nfragment streamHealthStarvationEvent on IngestStarvationEvent {\n  startedAt\n  durationSeconds\n}\n\nfragment streamHealthSession on VideoIngestSession {\n  id\n  bitrates @include(if: $includeDetails) {\n    valueKbps\n    recordedAt\n  }\n  framerates @include(if: $includeDetails) {\n    valueFPS\n    recordedAt\n  }\n  starvationEvents @include(if: $includeDetails) {\n    ...streamHealthStarvationEvent\n  }\n  ingestSession {\n    streamUpAt\n    streamDownAt\n  }\n  streamHealth {\n    status\n    reasons\n  }\n}\n"
    },
    "SnoozeAd": {
        "hash": "19040faceaaa8745c5a6d2d0eee4bfd2d1d3112c6ad1c299d5024b926e1407eb",
        "query": "mutation SnoozeAd($input: SnoozeAdInput!) {\n  snoozeAd(input: $input) {\n    status\n  }\n}\n"
    },
    "visitStreamManager": {
        "hash": "8a5a8a60be2f549acd00de17432cd590bba7b762c721c9ffb3c41aadb6fcc6be",
        "query": "mutation visitStreamManager($input: VisitStreamManagerInput!) {\n  visitStreamManager(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "Snackbar_AdProperties": {
        "hash": "88d96a33e412b8e82f3396fec0aa5f3d024feebf3bd39ae21adacf3a8c7506e9",
        "query": "query Snackbar_AdProperties($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        adSchedule {\n          runAtTime\n          durationSeconds\n        }\n        snooze {\n          currentAmount\n          maxAmount\n          refreshAt\n          durationSeconds\n        }\n        reminder {\n          isEnabled\n          seconds\n          isChatReminderEnabled\n        }\n        isAdScheduleEnabled\n      }\n    }\n  }\n}\n"
    },
    "CopoGoalSnackbar_ActiveChallengesQuery": {
        "hash": "5bf9abb47c5df02354ddbb4288a0c2d427918b8b2c5dbca0fe041b69f740965d",
        "query": "query CopoGoalSnackbar_ActiveChallengesQuery($id: ID!, $includeGoalTypes: [CommunityPointsCommunityGoalType!]) {\n  user(id: $id) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        communityGoalSmallContribution\n        communityGoalMaxContributionPerStream\n        goals(includeGoalTypes: $includeGoalTypes) {\n          id\n          status\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsManagerFirstTimeUserExperienceQuery": {
        "hash": "cc35cffb6ef72500c02307b0a408ee876916ca251fca54fd5b8fe422045a9658",
        "query": "query AdsManagerFirstTimeUserExperienceQuery($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        adManagerFirstTimeUserExperienceConfig {\n          hasSeenManagerFull\n          installRemindedAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsManagerInstallReminder_SetFirstTimeUserExperienceConfig": {
        "hash": "4a90bd0d9f576896b80d917bcd9efdacf49b1446813c0beace2bc22ada9cac2b",
        "query": "mutation AdsManagerInstallReminder_SetFirstTimeUserExperienceConfig($input: SetAdManagerFirstTimeUserExperienceConfigInput!) {\n  setAdManagerFirstTimeUserExperienceConfig(input: $input) {\n    config {\n      hasSeenManagerFull\n      installRemindedAt\n    }\n  }\n}\n"
    },
    "AdsManagerTutorial_AdProperties": {
        "hash": "e4b21153253c1d9de7d07d76ff2c8a63ecfb79748376535e141faadde77746c6",
        "query": "query AdsManagerTutorial_AdProperties($id: ID!) {\n  user(id: $id) {\n    id\n    adProperties {\n      density {\n        isAdScheduleEnabled\n        adManagerFirstTimeUserExperienceConfig {\n          hasSeenManagerFull\n          hasSeenManagerIntro\n          hasSeenScheduler\n          installRemindedAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsManagerTutorial_SetAdManagerFTUE": {
        "hash": "9862ca56d7e1677d3d5bde305a72ee2a3f92de95cfa542234ecd39d1f880fe70",
        "query": "mutation AdsManagerTutorial_SetAdManagerFTUE($input: SetAdManagerFirstTimeUserExperienceConfigInput!) {\n  setAdManagerFirstTimeUserExperienceConfig(input: $input) {\n    config {\n      hasSeenManagerFull\n      hasSeenManagerIntro\n      hasSeenScheduler\n      installRemindedAt\n    }\n  }\n}\n"
    },
    "DashboardInsights_AbbreviatedVideoPlayReferrals": {
        "hash": "f3fb237ea074be216a5c82a3d50cd05d2d41ff3116a4b11ee4fa0edee0ecc0ee",
        "query": "query DashboardInsights_AbbreviatedVideoPlayReferrals($channelID: ID!, $start: Time!, $end: Time!, $first: Int!) {\n  user(id: $channelID) {\n    id\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: INTERNAL, filter: INTERNAL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: CHANNEL, filter: INTERNAL_CHANNEL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: EXTERNAL, filter: EXTERNAL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n  }\n}\n"
    },
    "DashboardInsights_AllVideoPlayReferrals": {
        "hash": "fd10b77cf2646e154c0a807751d00018f849bca3e28a1b155f6c9e9f1bc9911f",
        "query": "query DashboardInsights_AllVideoPlayReferrals($channelID: ID!, $start: Time!, $end: Time!, $first: Int!) {\n  user(id: $channelID) {\n    id\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: COUNTRY, filter: ALL) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: PLATFORM, filter: ALL) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: INTERNAL, filter: INTERNAL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: CHANNEL, filter: INTERNAL_CHANNEL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n    videoPlayReferrals(start: $start, end: $end, first: $first, dimension: EXTERNAL, filter: EXTERNAL_LIVE_WEB) {\n      ...videoPlayReferralsFragment\n    }\n  }\n}\n"
    },
    "UserColor": {
        "hash": "66276970c6dd85702a6637be78aaac9bc1cba6f88e8345f06c2d704bab68a8da",
        "query": "query UserColor($channelID: ID) {\n  user(id: $channelID) {\n    id\n    primaryColorHex\n  }\n}\n"
    },
    "ChannelAnalytics_Notifications": {
        "hash": "3f551fef23580daf2c1e5a4781fccbb6e4e09bd02b23027aa2fcd9627db07f34",
        "query": "query ChannelAnalytics_Notifications($channelName: String!, $startAt: Time!, $endAt: Time!, $first: Int!, $after: Cursor) {\n  user(login: $channelName) {\n    id\n    goLiveNotificationConnection(startAt: $startAt, endAt: $endAt, first: $first, sort: DESC, after: $after) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          customText\n          engagements\n          followerCount\n          followersNotified\n          streamStartTime\n          streamStartTime\n        }\n      }\n    }\n  }\n}\n"
    },
    "ViewerDiscovery_FreeformTagsImpressions": {
        "hash": "ca634f59bada5c5d7dd4d079add267fdac2bc74c7289be73c5b806c4417c6f71",
        "query": "query ViewerDiscovery_FreeformTagsImpressions($channelID: ID!, $start: Time!, $end: Time!, $sortBy: FreeformTagSort, $sortOrder: SortOrder, $limit: Int) {\n  freeformTagAnalytics(channelID: $channelID, start: $start, end: $end, sortBy: $sortBy, sortOrder: $sortOrder, limit: $limit) {\n    items {\n      ...freeformTagItemFragment\n    }\n  }\n}\n\nfragment freeformTagItemFragment on FreeformTagAnalytic {\n  filterConversions\n  filterImpressions\n  tag\n}\n"
    },
    "ViewerDiscovery_NewVsReturning": {
        "hash": "7b5ce177a0976cef9d5b15f3986a63427139e9333de802f6e33e5268f8d1ac49",
        "query": "query ViewerDiscovery_NewVsReturning($channelID: ID!, $startAt: Time!, $endAt: Time!, $numberOfIntervals: Int!) {\n  user(id: $channelID) {\n    id\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: $numberOfIntervals) {\n      items {\n        uniqueViewersString\n        uniqueEngagedString\n        uniqueNewEngagedString\n        uniqueReturningEngagedString\n      }\n    }\n  }\n}\n"
    },
    "StreamSummaryPage_GetStreamSummaryMetrics": {
        "hash": "e0e9feb0cd6d3742f1c28fa8fdc91e155e415b2235950cdd79d5e63ac6a2c409",
        "query": "query StreamSummaryPage_GetStreamSummaryMetrics($channelID: ID!, $lastStartedAt: Time) {\n  user(id: $channelID) {\n    id\n    streamSummaries(first: 2, lastStartedAt: $lastStartedAt) {\n      startedAt\n      endedAt\n      averageViewers\n      clips {\n        ...TopClipsConnectionFragment\n      }\n      clipsCreated\n      follows\n      liveViews\n      maxViewers\n      newSubscriptions\n      uniqueChatters\n      uniqueViewers\n      archiveVideos {\n        title\n        viewCount\n        previewThumbnailURL(height: 360, width: 640)\n        id\n        recordedAt\n        lengthSeconds\n        owner {\n          id\n        }\n      }\n      goLiveNotification {\n        customText\n        engagements\n        followerCount\n        followersNotified\n        streamStartTime\n      }\n    }\n  }\n}\n\nfragment TopClipsConnectionFragment on ClipConnection {\n  edges {\n    node {\n      id\n      slug\n      url\n      embedURL\n      title\n      viewCount\n      language\n      isFeatured\n      assets {\n        ...clipAssetFragment\n      }\n      curator {\n        id\n        login\n        displayName\n        profileImageURL(width: 70)\n      }\n      game {\n        id\n        name\n        boxArtURL(width: 52, height: 72)\n        displayName\n        slug\n      }\n      broadcast {\n        id\n        title\n      }\n      broadcaster {\n        id\n        login\n        displayName\n        primaryColorHex\n        isPartner\n        profileImageURL(width: 70)\n        followers {\n          totalCount\n        }\n        stream {\n          id\n          viewersCount\n        }\n        lastBroadcast {\n          id\n          startedAt\n        }\n        self {\n          isEditor\n        }\n      }\n      thumbnailURL\n      createdAt\n      isFeatured\n      isPublished\n      durationSeconds\n      champBadge {\n        id\n      }\n      playbackAccessToken(params: {platform: \"web\", playerType: \"clips-download\"}) {\n        signature\n        value\n      }\n      video {\n        id\n        broadcastType\n        title\n      }\n      videoOffsetSeconds\n      videoQualities {\n        sourceURL\n      }\n      isViewerEditRestricted\n      suggestedCropping {\n        ...portraitClipCropping\n      }\n    }\n  }\n}\n"
    },
    "StreamSummaryPage_GetRecentStreamSessions": {
        "hash": "4b978b1ce032d7dbcf1255bf05c92fa40624fc51e5826404bad4f9f6bbe9e3c1",
        "query": "query StreamSummaryPage_GetRecentStreamSessions($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    streamSessions(first: 30) {\n      startedAt\n      endedAt\n    }\n  }\n}\n"
    },
    "StreamSummaryPage_GetStreamSession": {
        "hash": "499efdd1fe7cb175dbc7619aad704d7825ff8ca00d4a393dd2b3d271659e4f98",
        "query": "query StreamSummaryPage_GetStreamSession($channelID: ID!, $lastStartedAt: Time!) {\n  user(id: $channelID) {\n    id\n    streamSessions(first: 1, lastStartedAt: $lastStartedAt) {\n      startedAt\n      endedAt\n    }\n  }\n}\n"
    },
    "EmoteAnalytics_ChannelAnalytics": {
        "hash": "06b39ba9fbf1ec346fe8c744bd2670227d7cbe0199f2d1df00b976002f28312d",
        "query": "query EmoteAnalytics_ChannelAnalytics($channelID: ID!, $startAt: Time!, $endAt: Time!, $usageType: EmoteUsageType!, $sortBy: EmoteUsageSort, $sortOrder: SortOrder, $emoteGroupProductTypes: [EmoteGroupProductType!], $emoteGroupAssetTypes: [EmoteGroupAssetType!]) {\n  channelEmoteUsage(input: {channelID: $channelID, startAt: $startAt, endAt: $endAt, usageType: $usageType, sortBy: $sortBy, sortOrder: $sortOrder, emoteGroupProductTypes: $emoteGroupProductTypes, emoteGroupAssetTypes: $emoteGroupAssetTypes}) {\n    ...channelEmoteUsage\n  }\n}\n\nfragment channelEmoteUsage on EmoteUsage {\n  id\n  emote {\n    id\n    suffix\n    token\n  }\n  emoteGroup {\n    id\n    assetType\n    productType\n  }\n  totalUsage\n  uniqueUsers\n}\n"
    },
    "CreatorDropsDashboardCurrentUser": {
        "hash": "61b417b85e42c09072c15513a42f9e9b1d0f1e7fb8513d25c52a164acc79b367",
        "query": "query CreatorDropsDashboardCurrentUser() {\n  currentUser {\n    id\n    login\n  }\n}\n"
    },
    "CreatorDropsDashboard": {
        "hash": "13be83c020b4f9a033b23e39e20bcc7cd47dbbc4fc4be57f09c2f3fa63cc6f28",
        "query": "query CreatorDropsDashboard($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    isOptedOutOfDrops\n    dropCampaigns {\n      ...dashboardDropCampaign\n    }\n    rewardCampaignChannelSettings {\n      isEnabled\n      rewardCampaignsHidden {\n        isHidden\n        rewardCampaignID\n      }\n    }\n  }\n}\n"
    },
    "DashboardDropCampaignDetails": {
        "hash": "e79f5b0951300cfa0d09097e8d38aeead30dbcf5cd077f02541617675664386f",
        "query": "query DashboardDropCampaignDetails($dropID: ID!, $channelLogin: ID!) {\n  user(id: $channelLogin) {\n    id\n    dropCampaign(id: $dropID) {\n      id\n      self {\n        isAccountConnected\n      }\n      allow {\n        channels {\n          id\n          displayName\n          name\n        }\n        isEnabled\n      }\n      accountLinkURL\n      description\n      detailsURL\n      endAt\n      eventBasedDrops {\n        id\n        benefitEdges {\n          benefit {\n            id\n            createdAt\n            entitlementLimit\n            game {\n              id\n              name\n            }\n            imageAssetURL\n            isIosAvailable\n            name\n            ownerOrganization {\n              id\n              name\n            }\n            distributionType\n          }\n          entitlementLimit\n        }\n        claimDurationSeconds\n        conditions {\n          key\n          operator\n          value\n        }\n        endAt\n        missionDescription\n        missionName\n        name\n        startAt\n      }\n      game {\n        id\n        slug\n        displayName\n      }\n      imageURL\n      name\n      owner {\n        id\n        name\n      }\n      startAt\n      status\n      timeBasedDrops {\n        id\n        benefitEdges {\n          benefit {\n            id\n            createdAt\n            entitlementLimit\n            game {\n              id\n              name\n            }\n            imageAssetURL\n            isIosAvailable\n            name\n            ownerOrganization {\n              id\n              name\n            }\n            distributionType\n          }\n          entitlementLimit\n        }\n        endAt\n        name\n        preconditionDrops {\n          id\n        }\n        requiredMinutesWatched\n        requiredSubs\n        startAt\n      }\n      version\n    }\n  }\n}\n"
    },
    "DropsPage_UpdateDropsOptOut": {
        "hash": "a7798a4db5da1a36037e24d67f2e126df5ed0a7c60889896f59e577ff23f373d",
        "query": "mutation DropsPage_UpdateDropsOptOut($input: UpdateDropsOptOutStatusInput!) {\n  updateDropsOptOutStatus(input: $input) {\n    isOptedOut\n    userID\n  }\n}\n"
    },
    "TaxExpiryQuery": {
        "hash": "ebf6d14ccd6a64bbe441251ab3b86389a47cd4fe8a20490b1ab7ca79f1cd7f32",
        "query": "query TaxExpiryQuery() {\n  currentUser {\n    id\n    payout {\n      taxIntents {\n        state\n        formExpiryDate\n      }\n    }\n  }\n}\n"
    },
    "AcceptOrganizationInvite": {
        "hash": "b73cc9fa8b1f4f8489611632490890c57bfaf93a0a2181730507b73b37986fdf",
        "query": "mutation AcceptOrganizationInvite($input: AcceptOrganizationInviteInput!) {\n  acceptOrganizationInvite(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DeclineOrganizationInvite": {
        "hash": "6427716de062fc59cd6429b25b43aded62611fb4b348b666a3c320d444f6ba47",
        "query": "mutation DeclineOrganizationInvite($input: DeclineOrganizationInviteInput!) {\n  declineOrganizationInvite(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RemoveOrgMember": {
        "hash": "56f215e296f33e3f3424fdd6beef3881cb407cb95f6cd9f11e943ec9cf176a90",
        "query": "mutation RemoveOrgMember($input: RemoveOrganizationMemberInput!) {\n  removeOrganizationMember(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DevExtensionListPage_CurrentUser": {
        "hash": "759d04204f9fc6ba443ab9b87403fd1bbca4a5865b9362b8f99dff8f50d1b304",
        "query": "query DevExtensionListPage_CurrentUser($organizationID: ID, $after: Cursor) {\n  extensionClients(organizationID: $organizationID, after: $after) {\n    pageInfo {\n      hasNextPage\n    }\n    edges {\n      cursor\n      node {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n}\n"
    },
    "DevOrganizationPanel_GamesDrops": {
        "hash": "169f6d24d36000d6a3ae5115e28cec034da614ef3c73adbc2d3a8adb71bb0bf4",
        "query": "query DevOrganizationPanel_GamesDrops($id: ID!) {\n  organization(id: $id) {\n    id\n    games {\n      id\n    }\n  }\n}\n"
    },
    "PendingOrganizationApplications": {
        "hash": "689a0e08e273e90f8bfaa02ee1448b0e018dd45067291588d9aa4da3dd8486df",
        "query": "fragment orgApp on OrganizationApplication {\n  organizationName\n  status\n}\n\nquery PendingOrganizationApplications() {\n  pendingOrganizationApplications {\n    ...orgApp\n  }\n}\n"
    },
    "DevCurrentUser_Apps": {
        "hash": "2e9eca98063b4f70fbed1c4296762b9446acffaed63fa75efa026361ab0edb33",
        "query": "query DevCurrentUser_Apps($after: Cursor) {\n  currentUser {\n    id\n    createdAt\n    oauthApps(after: $after) {\n      edges {\n        cursor\n        node {\n          id\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "BitsCard_Bits": {
        "hash": "b7bf1e2ca25a284547fa7728ba70f55cbe821bec5f4602cccfd27ee6438c97d4",
        "query": "query BitsCard_Bits() {\n  currentUser {\n    id\n    bitsBalance\n    login\n    bitsUserState\n    bitsUserSettings {\n      ...bitsUserSettings\n    }\n  }\n}\n"
    },
    "BalanceFooter_BitsBadge": {
        "hash": "17eae646c6209f610257358c113fbaf1a7fc3957c8a3dbfccb168919f570b3ca",
        "query": "query BalanceFooter_BitsBadge($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    self {\n      bitsBadge {\n        ...bitsBadge\n      }\n    }\n  }\n}\n"
    },
    "BitsCard_MainCard": {
        "hash": "0efa8939e80cd118e742674bcecf0a697f17648b71e2fba96814df4af93d290d",
        "query": "query BitsCard_MainCard($name: ID!, $withCheerBombEventEnabled: Boolean!) {\n  currentUser {\n    id\n    bitsBalance\n    login\n    bitsOffers {\n      ...bitsOffer\n    }\n  }\n  user(id: $name) {\n    id\n    displayName\n    profileImageURL(width: 28)\n    cheer {\n      id\n      settings {\n        id\n        emoteMinimumBits\n        cheerMinimumBits\n        event\n        isCheerBombEventEnabled @include(if: $withCheerBombEventEnabled)\n        minBitsToPin\n        pinnedCheerLevels {\n          ...pinnedCheerLevels\n        }\n      }\n    }\n  }\n}\n"
    },
    "PubSubSimulator": {
        "hash": "16cc5b96634a50a4aef4c096bf70fb5f98ef79e5c3e77722650f3ae7e314ac1d",
        "query": "query PubSubSimulator($channelLogin: String!) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $channelLogin) {\n    id\n    login\n  }\n}\n"
    },
    "DisableTwoFactor": {
        "hash": "f051bf4346c4dd5c6ef0224782fddfebfed019f5bb00f4a1948151be0aaa9bb8",
        "query": "mutation DisableTwoFactor($input: DisableTwoFactorInput!) {\n  disableTwoFactor(input: $input) {\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "GenerateSecondFactorQRCode": {
        "hash": "1e4ece01a5f7b75bf91becb6b3c7999be03d38ed21098b1b2237a5694a2108a5",
        "query": "mutation GenerateSecondFactorQRCode($input: GenerateSecondFactorQRCodeInput!) {\n  generateSecondFactorQRCode(input: $input) {\n    qrCode\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "RegisterTwoFactorConfirmation": {
        "hash": "1f3f4a60a59bd6a5be73425efc5d5e11f08d4ca6aa8d25468b594b061fced479",
        "query": "mutation RegisterTwoFactorConfirmation($input: RegisterTwoFactorConfirmationInput!) {\n  registerTwoFactorConfirmation(input: $input) {\n    accessToken\n    isTwoFactorAccountShared\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "RegisterTwoFactor": {
        "hash": "9b4b4e18af5b61ead4418a950fcd87bfc3b0f86efa886045c3cd8fb8135443dd",
        "query": "mutation RegisterTwoFactor($input: RegisterTwoFactorInput!) {\n  registerTwoFactor(input: $input) {\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "VerifyOneTimePassword": {
        "hash": "92c226be4a92342a978267478ea4dfd6839b189735e7b6b4f6327d213451e48e",
        "query": "mutation VerifyOneTimePassword($input: VerifyOneTimePasswordInput!) {\n  verifyOneTimePassword(input: $input) {\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "AddOrgInvite": {
        "hash": "254483e6a8d541567415e8caf0023840536ee089e50e9f7706088fbce5608cfe",
        "query": "mutation AddOrgInvite($input: CreateOrganizationInviteInput!) {\n  createOrganizationInvite(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateOrganizationMemberRole": {
        "hash": "ece2585311a369922a8649ea7e7ca557d1325608847e751aec753ff9e7b883c3",
        "query": "mutation UpdateOrganizationMemberRole($input: UpdateOrganizationMemberRoleInput!) {\n  updateOrganizationMemberRole(input: $input) {\n    error {\n      code\n    }\n    organizationMember {\n      id\n      role\n    }\n  }\n}\n"
    },
    "DeveloperBadgeToggle": {
        "hash": "137f3e54ac7b30c0f35301543e6db82c8c5dbe776083a769adc05822b4fecdfe",
        "query": "mutation DeveloperBadgeToggle($input: UpdateOrganizationBadgeStatusInput!) {\n  updateOrganizationBadgeStatus(input: $input) {\n    organization {\n      id\n      isBadgesEnabled\n    }\n  }\n}\n"
    },
    "DeveloperBadgeStatus": {
        "hash": "c253032274f1fd9fab1d5de4906b7ab911ab7c9b38893a2104eb307a39cfa848",
        "query": "fragment fetchedGame on Game {\n  id\n  giantBombID\n  name\n}\n\nquery DeveloperBadgeStatus($orgID: ID!) {\n  organization(id: $orgID) {\n    id\n    isBadgesEnabled\n    type\n    games {\n      ...fetchedGame\n    }\n  }\n}\n"
    },
    "DevOrgMembers": {
        "hash": "b8baa8b0d239c1c3eb754605abf9a9568a0395e8aedcba92c9a95b7c4a60a19e",
        "query": "fragment orgMemberEdge on OrganizationMemberEdge {\n  cursor\n  joinedAt\n  node {\n    id\n    firstName\n    lastName\n    role\n    title\n    email\n    user {\n      id\n      displayName\n      login\n      profileImageURL(width: 50)\n    }\n  }\n}\n\nfragment orgInviteEdge on OrganizationInviteEdge {\n  cursor\n  node {\n    id\n    inviter {\n      id\n      displayName\n    }\n    invitee {\n      id\n      displayName\n      login\n      profileImageURL(width: 50)\n    }\n    role\n    createdAt\n    expiresAt\n  }\n}\n\nquery DevOrgMembers($orgID: ID!, $membFirst: Int, $membAfter: Cursor, $inviteFirst: Int, $inviteAfter: Cursor) {\n  organization(id: $orgID) {\n    id\n    members(first: $membFirst, after: $membAfter) {\n      totalCount\n      edges {\n        ...orgMemberEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    invites(first: $inviteFirst, after: $inviteAfter) {\n      totalCount\n      edges {\n        ...orgInviteEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    self {\n      canAddMember\n      canRemoveMember\n      canLeaveOrganization\n    }\n  }\n}\n"
    },
    "MwebDirectoryCategoryInfoQuery": {
        "hash": "58470e51247f89d27990eb4b41859b5c7f4a0b369fd1a68546e79a6ec061d675",
        "query": "query MwebDirectoryCategoryInfoQuery($categorySlug: String!) {\n  game(slug: $categorySlug) {\n    ...MwebGameCard\n    description\n    followersCount\n  }\n}\n"
    },
    "MwebDirectoryCategoryQuery": {
        "hash": "5427d0ee7aaa383784013b4bfc39bb55b6a862059ffb50aef1345181b341e18c",
        "query": "query MwebDirectoryCategoryQuery($slug: String!, $limit: Int, $cursor: Cursor, $options: GameStreamOptions, $includeIsDJ: Boolean!) {\n  game(slug: $slug) {\n    id\n    displayName\n    streams(first: $limit, after: $cursor, options: $options) {\n      edges {\n        ...MwebDirectoryCategoryStreamEdge\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n}\n\nfragment MwebDirectoryCategoryStreamEdge on StreamEdge {\n  cursor\n  node {\n    ...MwebStreamCard\n  }\n}\n"
    },
    "Chat_UpdateChatColor": {
        "hash": "ee8e7ed15d204d685d73504ec1c4a823ac9330e8069fcf89ef0e3b498fee2113",
        "query": "mutation Chat_UpdateChatColor($input: UpdateChatColorInput!) {\n  updateChatColor(input: $input) {\n    user {\n      id\n      chatColor\n    }\n  }\n}\n"
    },
    "CoreAuthNewCurrentUser": {
        "hash": "8c393e16d35ede78d38b300b3b3f0521f0fc5da1671a2055fb1fd9c096e9b6e0",
        "query": "query CoreAuthNewCurrentUser() {\n  currentUser {\n    id\n  }\n}\n"
    },
    "EmailVerificationSuccess": {
        "hash": "471ad11e344ff7bcc598c6d48430ccd85101ebc71aef688041a9b3b766516475",
        "query": "query EmailVerificationSuccess() {\n  currentUser {\n    id\n    login\n    isEmailVerified\n  }\n}\n"
    },
    "VerficationCodeUser": {
        "hash": "0d81342bb99a5deb4879d3a11fadad2bdd77c2bd9b335af9c2e06137951e5315",
        "query": "query VerficationCodeUser() {\n  currentUser {\n    id\n    email\n  }\n}\n"
    },
    "ValidateVerificationCode": {
        "hash": "6a619e94f1c9784c6b56f3b1f131360f6863891cc7b72f21698d1772cd882b87",
        "query": "mutation ValidateVerificationCode($input: ValidateVerificationCodeInput!) {\n  validateVerificationCode(input: $input) {\n    error {\n      code\n    }\n    request {\n      status\n    }\n  }\n}\n"
    },
    "PhoneNumber_CountryCode": {
        "hash": "ad2d873a182e934a86206d33661df79ecf564b0f87023a780ba9b574676ed17b",
        "query": "query PhoneNumber_CountryCode() {\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "UnlinkAmazonConnectionStatusMutation": {
        "hash": "a6a28065e532412085b1d50edc52377b4f13a8a189b35577e8b0f2dc27b761e5",
        "query": "mutation UnlinkAmazonConnectionStatusMutation($input: UnlinkAmazonConnectionInput!) {\n  unlinkAmazonConnection(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "Settings_Connections_Amazon": {
        "hash": "7ef22c71cd27217711872c39487d0c041377e01c61f7cf98ab4e39e91052a922",
        "query": "query Settings_Connections_Amazon() {\n  currentUser {\n    id\n    accountConnections {\n      hasConnectedAmazon\n    }\n  }\n}\n"
    },
    "Settings_Connections_DeviceConnection": {
        "hash": "49ef3c0f97c4e476cb6e984c5231866e03f61568a7f4075c7eaeae2e7ecddbc6",
        "query": "query Settings_Connections_DeviceConnection($clientID: ID!) {\n  clientAuthorization(id: $clientID) {\n    clientID\n    clientName\n    createdAt\n  }\n}\n"
    },
    "Settings_Connections_ExtensionConnectionsList": {
        "hash": "9d628c4bd070b41f849ee585ce3d60abf4897e1dbb00e9c6132eac3a91baee76",
        "query": "query Settings_Connections_ExtensionConnectionsList() {\n  currentUser {\n    id\n    linkedExtensions {\n      authorName\n      iconURLs {\n        square100\n      }\n      id\n      name\n      summary\n    }\n  }\n}\n"
    },
    "Settings_Connections_ExtensionUnlinkUser": {
        "hash": "9f8d5909290321aba362a1337b123837698b709b3dd55ffa23044055475e6fcc",
        "query": "mutation Settings_Connections_ExtensionUnlinkUser($input: ExtensionLinkUserInput!) {\n  extensionLinkUser(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnlinkInstagramConnectionStatusMutation": {
        "hash": "7b9a00565940d13b22be1b6aa2be1f657aaede34f7b3bf7b1207df2ec16c74e5",
        "query": "mutation UnlinkInstagramConnectionStatusMutation($input: UnlinkInstagramConnectionInput!) {\n  unlinkInstagramConnection(input: $input) {\n    connections {\n      instagram {\n        username\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_InstagramConnection": {
        "hash": "2964c0236f16ad3452e891f91f25125fcd23abf1c46725cc17ee306c1daec8fd",
        "query": "query Settings_Connections_InstagramConnection() {\n  currentUser {\n    id\n    accountConnections {\n      instagram {\n        username\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_OtherConnectionsList": {
        "hash": "063647999f0f9409b5179cbae6ac47cbcb1b472821eb6004ffc19be9e0659bed",
        "query": "query Settings_Connections_OtherConnectionsList() {\n  currentUser {\n    id\n    clientAuthorizations {\n      clientID\n      clientName\n      createdAt\n    }\n  }\n}\n"
    },
    "UnlinkRiotConnectionMutation": {
        "hash": "f3996eb28931bed1e330028ebc6dde277c9d4d7c29d9c025efce9dacba0d1dab",
        "query": "mutation UnlinkRiotConnectionMutation($input: UnlinkRiotConnectionInput!) {\n  unlinkRiotConnection(input: $input) {\n    connections {\n      riot {\n        id\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_RiotConnection": {
        "hash": "a380de99cf1222e0252cd15480ee5f34dad3ebb86057e865769dc3ea6021e8f7",
        "query": "query Settings_Connections_RiotConnection() {\n  currentUser {\n    id\n    accountConnections {\n      riot {\n        id\n      }\n    }\n  }\n}\n"
    },
    "UnlinkSteamConnectionStatusMutation": {
        "hash": "b23b951f9585f00ece3a0a8ec99a31279f86142999627021d2aa58f5671e260d",
        "query": "mutation UnlinkSteamConnectionStatusMutation($input: UnlinkSteamConnectionInput!) {\n  unlinkSteamConnection(input: $input) {\n    connections {\n      steam {\n        id\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_Steam": {
        "hash": "6328b725a2b55d389ab064bb30400cc55a1b8d65e09d4a78b2324b940194a767",
        "query": "query Settings_Connections_Steam() {\n  currentUser {\n    id\n    accountConnections {\n      steam {\n        id\n      }\n    }\n  }\n}\n"
    },
    "UnlinkTikTokConnectionStatusMutation": {
        "hash": "4c4cdcea7dcbeff122037b6f796b2b24e486869438860debd80f66760e5e63f1",
        "query": "mutation UnlinkTikTokConnectionStatusMutation($input: UnlinkTikTokConnectionInput!) {\n  unlinkTikTokConnection(input: $input) {\n    connections {\n      tikTok {\n        username\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_TikTokConnection": {
        "hash": "7cadbc5ee2da04d5996025ae43664a667e051dc327ba085adde61cc87c3797b4",
        "query": "query Settings_Connections_TikTokConnection() {\n  currentUser {\n    id\n    accountConnections {\n      tikTok {\n        username\n      }\n    }\n  }\n}\n"
    },
    "UnlinkTwitterConnectionStatusMutation": {
        "hash": "0d2a80d455caadbd30344a1ed43c05120b7921373929bd03696ef2240ed6923b",
        "query": "mutation UnlinkTwitterConnectionStatusMutation($input: UnlinkTwitterConnectionInput!) {\n  unlinkTwitterConnection(input: $input) {\n    connections {\n      twitter {\n        username\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_Twitter": {
        "hash": "eb23b5e151e7ac99f9c616768cf06a6df6976972b0df4c0f8b1c41d51d8f7c86",
        "query": "query Settings_Connections_Twitter() {\n  currentUser {\n    id\n    accountConnections {\n      twitter {\n        username\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_Ubisoft": {
        "hash": "50e96ebacc6eb6d35403bd00c45c0a71c815a068a0ac0e2e4bc08477302b47d6",
        "query": "query Settings_Connections_Ubisoft() {\n  clientAuthorization(id: \"ik4kgnclcg9gv59ft7voz7ho5zzyuo2\") {\n    clientID\n    clientName\n    createdAt\n  }\n}\n"
    },
    "UnlinkYoutubeConnectionStatusMutation": {
        "hash": "072496d8e9d69a4e4e2c8f3455a2691b36595b01ba013546581d70d27a516d77",
        "query": "mutation UnlinkYoutubeConnectionStatusMutation($input: UnlinkYoutubeConnectionInput!) {\n  unlinkYoutubeConnection(input: $input) {\n    connections {\n      youtube {\n        channelURL\n      }\n    }\n  }\n}\n"
    },
    "Settings_Connections_YoutubeConnection": {
        "hash": "35f76fe05f3848eb750325d2a015b8022fcb32d5248b59949e76854430e9f96e",
        "query": "query Settings_Connections_YoutubeConnection() {\n  currentUser {\n    id\n    accountConnections {\n      youtube {\n        channelURL\n      }\n    }\n  }\n}\n"
    },
    "GlobalNotificationSettings_SetChannelGlobalIsEnabled": {
        "hash": "d1c5c282577c2ed777f74c025ecfc7bb871081ed503035f784bbfa8b154dd1be",
        "query": "mutation GlobalNotificationSettings_SetChannelGlobalIsEnabled($input: FollowUserInput!) {\n  followUser(input: $input) {\n    follow {\n      disableNotifications\n    }\n  }\n}\n"
    },
    "AdvancedNotificationSettings_User": {
        "hash": "6caf866d0825d12dc85e8853de01f2f6e3e0bdeb373400c5007ea069821cb650",
        "query": "query AdvancedNotificationSettings_User($limit: Int, $cursor: Cursor) {\n  currentUser {\n    id\n    follows(first: $limit, after: $cursor) {\n      totalCount\n      edges {\n        cursor\n        node {\n          id\n          displayName\n          profileImageURL(width: 70)\n          login\n          followers {\n            totalCount\n          }\n        }\n        notificationSettings {\n          isEnabled\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "PlatformNotificationSettings_User": {
        "hash": "bb305a89617a4833c0016592f858f6ebbd385f6e051d27bf0feef0985b1c3d72",
        "query": "query PlatformNotificationSettings_User() {\n  currentUser {\n    id\n    displayName\n  }\n}\n"
    },
    "SmartNotificationSettings_User": {
        "hash": "9778b5aaf57917693efdd2df6cf7a11f20adcee8a8a1333325301c6128d605d6",
        "query": "query SmartNotificationSettings_User() {\n  currentUser {\n    id\n    displayName\n    notificationSettings {\n      category\n      platforms {\n        platformName\n        settingState\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "GlobalNotificationSettings_SetNotificationSetting": {
        "hash": "41fc9070f3bf8e34352d923d6c56f2ed8e8fa2f3b996809b72b50709ed911e94",
        "query": "mutation GlobalNotificationSettings_SetNotificationSetting($input: SetNotificationSettingInput!) {\n  setNotificationSetting(input: $input) {\n    settingState\n  }\n}\n"
    },
    "SettingsNotificationsPage_User": {
        "hash": "04cc194d175c3ac4be4f5c87baf72f0f126c333bd7aae22c919e615f4db4dd14",
        "query": "query SettingsNotificationsPage_User() {\n  currentUser {\n    id\n    follows {\n      totalCount\n      edges {\n        notificationSettings {\n          isEnabled\n        }\n      }\n    }\n    notificationSettings {\n      category\n      platforms {\n        platformName\n        settingState\n        isEnabled\n      }\n    }\n  }\n}\n"
    },
    "ChatColorPicker_CurrentUser": {
        "hash": "15d91b5f7dcfaacaebe8b31981dc8480649da3e8bd65ae41361be46dc68ffc1f",
        "query": "query ChatColorPicker_CurrentUser() {\n  currentUser {\n    id\n    login\n    chatColor\n    displayName\n  }\n}\n"
    },
    "UpdatePrimeSettings_PostSubscription": {
        "hash": "1fd5f38f1d4619d81896841a0cab73468fd5b25ee809e4577a3a982fbc3630af",
        "query": "mutation UpdatePrimeSettings_PostSubscription($input: UpdatePrimeSettingsInput!) {\n  updatePrimeSettings(input: $input) {\n    primeSettings {\n      id\n      isSubCreditChatNotificationEnabled\n    }\n  }\n}\n"
    },
    "PostSubscriptionsToggle": {
        "hash": "e9c4943ae3a2f31a988dc0243573511c7e73a5b1f335309fa7caeb3159670bec",
        "query": "query PostSubscriptionsToggle() {\n  currentUser {\n    id\n    primeSettings {\n      id\n      isSubCreditChatNotificationEnabled\n    }\n  }\n}\n"
    },
    "SettingsPrimePage_PrimeEmotesSetPicker": {
        "hash": "dd8fd51425d6a0953b3ef7735d53584c0913731119b5c833e4aae1ee97c8976b",
        "query": "query SettingsPrimePage_PrimeEmotesSetPicker() {\n  currentUser {\n    id\n    primeSettings {\n      ...CurrentUserPrimeSettings\n    }\n  }\n}\n\nfragment CurrentUserPrimeSettings on PrimeSettings {\n  id\n  primeEmoticons {\n    currentSetName\n    emoticonSets {\n      ...PrimeEmoticonsSmiliesSet\n    }\n  }\n}\n\nfragment PrimeEmoticonsSmiliesSet on SmiliesSet {\n  id\n  emotes {\n    ...EmoteSetEmote\n  }\n}\n\nfragment EmoteSetEmote on Emote {\n  id\n  text\n}\n"
    },
    "SettingsPrimePage_PrimeEmotesSetPicker_UpdatePrimeSettings": {
        "hash": "b2afff44b4a1f937da2b236f1d9f4d868df960b691d767bc79c8cb047b01b0a3",
        "query": "mutation SettingsPrimePage_PrimeEmotesSetPicker_UpdatePrimeSettings($input: UpdatePrimeSettingsInput!) {\n  updatePrimeSettings(input: $input) {\n    primeSettings {\n      id\n      primeEmoticons {\n        currentSetName\n      }\n    }\n  }\n}\n"
    },
    "SettingsPrimePage_CurrentUser": {
        "hash": "77e9f2399b9018b3a15315c07d3def7f57421160861c1c629ab05e37bfa6b843",
        "query": "query SettingsPrimePage_CurrentUser() {\n  currentUser {\n    id\n    hasPrime\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "DeleteRecommendationFeedback": {
        "hash": "f514cd470139b9ecc2518edcb7209f48d9676c72fddf6cc7b4357c37b93d3cd5",
        "query": "mutation DeleteRecommendationFeedback($input: DeleteRecommendationFeedbackInput!) {\n  deleteRecommendationFeedback(input: $input) {\n    feedbackID\n  }\n}\n"
    },
    "FeedbackItemList": {
        "hash": "991d4f4e2a70cb1df5cc29f39f24fb17b9f30a39e2c8e45358bf3e35bbad6aeb",
        "query": "fragment gameFromFeedback on Game {\n  id\n  avatarURL(width: 38, height: 51)\n  displayName\n}\n\nfragment videoFromFeedback on Video {\n  id\n  previewThumbnailURL(width: 90, height: 51)\n  title\n}\n\nfragment channelFromFeedback on Channel {\n  id\n  owner {\n    id\n    login\n    profileImageURL(width: 50)\n    displayName\n  }\n}\n\nfragment recommendationFeedbackItem on RecommendationFeedback {\n  id\n  lastUpdated\n  type\n  category\n  content {\n    ...gameFromFeedback\n    ...videoFromFeedback\n    ...channelFromFeedback\n  }\n}\n\nquery FeedbackItemList($type: String!, $limit: Int, $after: Cursor) {\n  currentUser {\n    id\n    recommendationFeedback(type: $type, limit: $limit, after: $after) {\n      edges {\n        node {\n          ...recommendationFeedbackItem\n        }\n        cursor\n      }\n    }\n  }\n}\n"
    },
    "AccountSecurityStatus_PasswordCompromiseStatus": {
        "hash": "5d8debda0e91fded00a3aa17337aacbcaf635e216d402bbcd69842ce32bd7d16",
        "query": "query AccountSecurityStatus_PasswordCompromiseStatus($userID: ID!) {\n  currentUser {\n    id\n    settings {\n      hasTwoFactorEnabled\n    }\n  }\n  passwordCompromisedStatus(userID: $userID) {\n    isBreached\n  }\n}\n"
    },
    "UpdateUserSubscriptionSettings_RENAME2": {
        "hash": "163fe60460b7c84a91ba7050baad55eb330459636634c5b50a61c5ed534280f7",
        "query": "mutation UpdateUserSubscriptionSettings_RENAME2($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      giftsToFollowedChannelsOnly\n    }\n  }\n}\n"
    },
    "BlockGiftedSubsSetting": {
        "hash": "8f0564aa40e1ac48e80c350c828ef802170437fbce4d848ec4153c98cd6f392e",
        "query": "query BlockGiftedSubsSetting() {\n  currentUser {\n    id\n    subscriptionSettings {\n      giftsToFollowedChannelsOnly\n    }\n  }\n}\n"
    },
    "UpdateWhisperSettings": {
        "hash": "b7470fa9b45e1787622af1a9b14002de8676a83530bcc4ffcd2da52013096315",
        "query": "mutation UpdateWhisperSettings($input: UpdateWhisperSettingsInput!) {\n  updateWhisperSettings(input: $input) {\n    user {\n      id\n      whisperSettings {\n        isBlockingWhispersFromStrangers\n      }\n    }\n  }\n}\n"
    },
    "WhisperSettings": {
        "hash": "c510fbc1d43fdc743a0343d1017be0e38deb129d78f6914a2459bf5e3bb139e5",
        "query": "query WhisperSettings() {\n  currentUser {\n    id\n    whisperSettings {\n      isBlockingWhispersFromStrangers\n    }\n  }\n}\n"
    },
    "BlockedUserDetail": {
        "hash": "0cca39228803ed3a3d4f7ad9dfd4651986c5c3be5dd70cdb137cc4c3534b52b0",
        "query": "query BlockedUserDetail($login: String) {\n  user(login: $login, lookupType: ALL) {\n    id\n    login\n    profileImageURL(width: 28)\n    displayName\n  }\n}\n"
    },
    "UpdateUserIsEmailRevertSuccessMutation": {
        "hash": "6631e873b68e6a531211d291faaf0d55298126a38bd5cc45925cb4d485551db6",
        "query": "mutation UpdateUserIsEmailRevertSuccessMutation($input: UpdateUserIsEmailRevertSuccessInput!) {\n  updateUserIsEmailRevertSuccess(input: $input) {\n    user {\n      id\n      settings {\n        isEmailRevertSuccess\n      }\n    }\n  }\n}\n"
    },
    "UpdateEmailReusable": {
        "hash": "a4a2addf40538fd205c133794514177207544a6034336d32232c8efaed1f8c52",
        "query": "mutation UpdateEmailReusable($input: UpdateUserEmailReusableInput!) {\n  updateUserEmailReusable(input: $input) {\n    user {\n      id\n      isEmailReusable\n    }\n  }\n}\n"
    },
    "UpdatePhoneNumberReusable": {
        "hash": "6b5101a0045b122a0ce33969040662662ca0fa23576a2b20c713d6b7fb5969ff",
        "query": "mutation UpdatePhoneNumberReusable($input: UpdateUserPhoneNumberReusableInput!) {\n  updateUserPhoneNumberReusable(input: $input) {\n    user {\n      id\n      isPhoneNumberReusable\n    }\n  }\n}\n"
    },
    "UpdateSettingsPhoneNumberConfirmationMutation": {
        "hash": "43b24095d6ac7451c14b66fb2b41f6ab5429bd37027e78d1e7b985b7bf089d3b",
        "query": "mutation UpdateSettingsPhoneNumberConfirmationMutation($input: UpdatePhoneNumberConfirmationInput!) {\n  updatePhoneNumberConfirmation(input: $input) {\n    accessToken\n    error {\n      code\n      externalCode\n      message\n    }\n  }\n}\n"
    },
    "UpdateSettingsPhoneNumberMutation": {
        "hash": "7b68e71fc50197610a8a820ec063792fc5a1178ceaf0cf2e87a65db3c8c779b1",
        "query": "mutation UpdateSettingsPhoneNumberMutation($input: UpdatePhoneNumberInput!) {\n  updatePhoneNumber(input: $input) {\n    error {\n      code\n      message\n      externalCode\n    }\n  }\n}\n"
    },
    "Settings_SecurityPage_ContactSettings": {
        "hash": "8e19c14d85ab532ddb6a8a2a31e7d90f0e251925aa569146ca8b0f96dba635c1",
        "query": "query Settings_SecurityPage_ContactSettings() {\n  currentUser {\n    id\n    email\n    isEmailVerified\n    isEmailReusable\n    isEmailUpdateable\n    isPhoneNumberReusable\n    login\n    phoneNumber\n    settings {\n      isEmailRevertSuccess\n      twoFactorPhoneNumber {\n        number\n        updatedAt\n        countryCode\n      }\n    }\n    verificationRequest {\n      status\n      modified\n    }\n  }\n}\n"
    },
    "UpdateUserSubscriptionSettingsFounderBadgeHidden": {
        "hash": "f9c128258d229c8576624208fe0a044ff369f6a2e18baef7965e923440a11493",
        "query": "mutation UpdateUserSubscriptionSettingsFounderBadgeHidden($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      isFounderBadgesHidden\n    }\n  }\n}\n"
    },
    "HideFounderBadge": {
        "hash": "9aa1bf19f5d37f48082cdc578655d304a385907f6d3e2224598507cde97a1aaf",
        "query": "query HideFounderBadge() {\n  currentUser {\n    id\n    subscriptionSettings {\n      isFounderBadgesHidden\n    }\n  }\n}\n"
    },
    "UpdateUserSubscriptionSettings": {
        "hash": "078dd6bffd3cad186284162b329520133d91159ee0c0d51eb24a73b18e3c617d",
        "query": "mutation UpdateUserSubscriptionSettings($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      isGiftCountHidden\n    }\n  }\n}\n"
    },
    "HideSubscriptionGiftCountQuery": {
        "hash": "194444a62966eed88078c68598797aac40b847904ec01dff5c09475e18432e5a",
        "query": "query HideSubscriptionGiftCountQuery() {\n  currentUser {\n    id\n    subscriptionSettings {\n      isGiftCountHidden\n    }\n  }\n}\n"
    },
    "UpdateUserSubscriptionSettingsSubscriptionStatus": {
        "hash": "29b9c8a58aa2e65d1206223436c3bfc1ff19bc245427fdc27ddd6f317956abc2",
        "query": "mutation UpdateUserSubscriptionSettingsSubscriptionStatus($input: UpdateUserSubscriptionSettingsInput!) {\n  updateUserSubscriptionSettings(input: $input) {\n    subscriptionSettings {\n      isSubscriptionStatusHidden\n    }\n  }\n}\n"
    },
    "HideSubscriptionStatusSetting": {
        "hash": "a9e0ec709b25578f6c4890af6029c73fe1251d6804edc5e20bf179b58e829974",
        "query": "query HideSubscriptionStatusSetting() {\n  currentUser {\n    id\n    subscriptionSettings {\n      isSubscriptionStatusHidden\n    }\n  }\n}\n"
    },
    "DataAccessRequestReportDownloadLink": {
        "hash": "b955b4144e04ada2fbde238a01d0aaed2433ecfeb5f28c81b575b464d3c03d69",
        "query": "query DataAccessRequestReportDownloadLink($requestID: ID!) {\n  dataAccessRequestReportDownloadLink(requestID: $requestID) {\n    downloadLink\n    downloadLinks\n    expiresAt\n    errorCode\n  }\n}\n"
    },
    "CreateDataAccessRequest": {
        "hash": "c63e166ab8fccc74c282f42f5d2a4d35953e3821e0620e0ecfdf8746b2265ede",
        "query": "mutation CreateDataAccessRequest($input: CreateDataAccessRequestInput!) {\n  createDataAccessRequest(input: $input) {\n    accessRequest {\n      accessRequestID\n      user {\n        id\n      }\n      createdAt\n      completedAt\n      isExpired\n      validUntil\n      startAt\n      endAt\n      isDelivered\n      dataCategories\n    }\n  }\n}\n"
    },
    "DataAccessCategories": {
        "hash": "117f2f56f9581a6c5d8beb8fa83154c2004d9859c57fa05f4c3568f77041dc21",
        "query": "query DataAccessCategories() {\n  dataAccessCategories {\n    entityName\n    folderName\n  }\n}\n"
    },
    "DataAccessRequests": {
        "hash": "e48abdc6200c4d22c4f55b4ecc786f8ab9b5518657c07d45c954cd9a8192b7c1",
        "query": "query DataAccessRequests($pageToken: Cursor) {\n  dataAccessRequests(pageToken: $pageToken) {\n    accessRequests {\n      accessRequestID\n      user {\n        id\n      }\n      createdAt\n      completedAt\n      isExpired\n      validUntil\n      startAt\n      endAt\n      oneTrustID\n      reportStatus\n      isDelivered\n      dataCategories\n    }\n  }\n}\n"
    },
    "SetStoryClipSetting": {
        "hash": "a050d8189dc532e458f8d3d68560a57030b05d1d4a317575cedf8297f9916c91",
        "query": "mutation SetStoryClipSetting($input: SetStoryClipSettingInput!) {\n  setStoryClipSetting(input: $input) {\n    permission\n  }\n}\n"
    },
    "SetStoryMentionSetting": {
        "hash": "aa18844c4234445c985222794e644e46717fa918887cf3852ee7eda42cf4a451",
        "query": "mutation SetStoryMentionSetting($input: SetStoryMentionSettingInput!) {\n  setStoryMentionSetting(input: $input) {\n    permission\n  }\n}\n"
    },
    "SetStoryReshareSetting": {
        "hash": "b5562afec2a4a3ddd52384081c44a6250f551cab12a0efea24858f467be7d99b",
        "query": "mutation SetStoryReshareSetting($input: SetStoryReshareSettingInput!) {\n  setStoryReshareSetting(input: $input) {\n    permission\n  }\n}\n"
    },
    "TwoFactorAuthSettings_AccountHealth": {
        "hash": "c3a0aecad4aee4729f017e78289bbee8ca27657bb61e2737bd3f1f6a0fdff98f",
        "query": "query TwoFactorAuthSettings_AccountHealth() {\n  currentUser {\n    id\n    phoneNumber\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n      isAffiliate\n      isPartner\n    }\n    accountHealth {\n      twoFactorMethods\n      isVerifiedEmail\n      isTwoFactorAccountShared\n    }\n    settings {\n      hasTwoFactorEnabled\n      twoFactorPhoneNumber {\n        number\n        updatedAt\n        countryCode\n      }\n    }\n  }\n}\n"
    },
    "StorySettings": {
        "hash": "169bf5a89da9accaf05fda66e13381edaa369ad0cad995032e4daf3f418fc432",
        "query": "query StorySettings() {\n  storySettings {\n    mentionPermission\n    clipPermission\n    resharePermission\n  }\n}\n"
    },
    "SettingsTurboPage": {
        "hash": "a9956db9746deb1fdb45fee743fd645470dbab7814c70edec44abb9d8306ab9f",
        "query": "query SettingsTurboPage() {\n  currentUser {\n    id\n    hasPrime\n    hasTurbo\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "DisableAccount_DisableUser": {
        "hash": "8d7e66011cbd39243f8fe54c7a55c33ce936cd153e7b1504265f0f2f1b985b04",
        "query": "mutation DisableAccount_DisableUser($input: DisableUserAccountInput!) {\n  disableUserAccount(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DisableAccountForm_CurrentUserQuery": {
        "hash": "1574f5ea218ae37c3b1ca467199a2c2ee36fb039b6be3f90a8601823d72e08aa",
        "query": "query DisableAccountForm_CurrentUserQuery() {\n  currentUser {\n    id\n    roles {\n      isAffiliate\n      isPartner\n      isExtensionsDeveloper\n    }\n  }\n}\n"
    },
    "BulkReportReasons": {
        "hash": "926c649288097bb9ec5ace481da1474fe51ae00ae95b5a87a62ac9fd251cb1ff",
        "query": "query BulkReportReasons() {\n  modViewBulkReportReasons {\n    id\n    toSAndCountryReasons {\n      id\n      text\n    }\n  }\n}\n"
    },
    "ReportableModActionTargets": {
        "hash": "24819c93f5570d50e1417ed1ff7f05b2ae48b2b87e10d18c3c10c78cd9811ba9",
        "query": "fragment reportableTargetUser on User {\n  id\n  login\n  displayName\n}\n\nfragment reportableTarget on ReportableModActionTarget {\n  id\n  user {\n    ...reportableTargetUser\n  }\n  metadata {\n    __typename\n    ... on BanModActionMetadata {\n      bannedBy {\n        ...reportableTargetUser\n      }\n    }\n    ... on TimeoutModActionMetadata {\n      durationSeconds\n      timedOutBy {\n        ...reportableTargetUser\n      }\n    }\n  }\n  content {\n    id\n    text\n  }\n  reportedStatus\n}\n\nquery ReportableModActionTargets($channelID: ID!, $after: Cursor, $authorType: ModActionAuthorType, $type: ReportableModActionType) {\n  reportableModActionTargets(channelID: $channelID, after: $after, authorType: $authorType, type: $type) {\n    edges {\n      cursor\n      node {\n        ...reportableTarget\n      }\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n"
    },
    "ReportableTargetUser": {
        "hash": "5701dfd2080aa9a76ac9fcb1d4ae923cbd5f9a5bdc0e5ffb9139420259ba0004",
        "query": "query ReportableTargetUser($id: ID!) {\n  user(id: $id, lookupType: ALL) {\n    ...reportableTargetUser\n  }\n}\n"
    },
    "Dashboard_OptOut": {
        "hash": "f239a6f9ed43af2b615ae6c0e39d0d403ba04e0f9cb2a7dca190fe6a78d79157",
        "query": "mutation Dashboard_OptOut() {\n  optOutFromCensus {\n    isSuccess\n  }\n}\n"
    },
    "DashboardCensus_PostSurvey": {
        "hash": "a6671780c13503a7e1ad0a03dbe5cbd5b5743ab7d8b65dcfe185bac72c1f08ba",
        "query": "mutation DashboardCensus_PostSurvey($input: SubmitCensusSurveyInput!) {\n  submitCensusSurvey(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "DashboardCensus_GetQuestions": {
        "hash": "d10d72710640553219a49c278cac7f3227bac201907f5066b2b945cdca09fc8a",
        "query": "query DashboardCensus_GetQuestions() {\n  currentUser {\n    id\n    roles {\n      isAffiliate\n      isPartner\n      isStaff\n    }\n  }\n  censusQuestionnaire {\n    countryCode\n    ietfLanguageTag\n    questions {\n      schemaVersionID\n      id\n      text\n      answerType\n      ordinal\n      answers {\n        id\n        text\n        ordinal\n      }\n    }\n  }\n}\n"
    },
    "InvalidateEmailAssociationMutation": {
        "hash": "5dda9714cabe10668450f830fd41059331f72efa202844dffd85f37efb9a33c0",
        "query": "mutation InvalidateEmailAssociationMutation($input: InvalidateEmailAssociationInput!) {\n  invalidateEmailAssociation(input: $input) {\n    hasSucceeded\n  }\n}\n"
    },
    "NotMePage_verificationRequest": {
        "hash": "5873ff9484da736c1bc7ceeb9b38655604ab559b105f9ba86af2953fd5a03b9c",
        "query": "query NotMePage_verificationRequest($opaqueID: ID!) {\n  verificationRequest(opaqueID: $opaqueID) {\n    address\n  }\n}\n"
    },
    "UnbanRequestsItemHeaderTabs": {
        "hash": "3dc6106bb0d94a58680f40adab9e29df591ac606bc00de447a154883b261d081",
        "query": "query UnbanRequestsItemHeaderTabs($channelID: ID!, $targetID: ID!) {\n  viewerCardModLogs(channelID: $channelID, targetID: $targetID) {\n    targetedActions(first: 99, type: BAN) {\n      __typename\n      ... on ModLogsTargetedActionsError {\n        __typename\n        code\n      }\n      ... on ModLogsTargetedActionsConnection {\n        __typename\n        count\n        pageInfo {\n          hasNextPage\n        }\n        edges {\n          cursor\n          node {\n            id\n            timestamp\n          }\n        }\n      }\n    }\n    targetedActions(first: 99, type: TIMEOUT) {\n      __typename\n      ... on ModLogsTargetedActionsError {\n        __typename\n        code\n      }\n      ... on ModLogsTargetedActionsConnection {\n        __typename\n        count\n        pageInfo {\n          hasNextPage\n        }\n      }\n    }\n  }\n  chatRoomBanStatus(channelID: $channelID, userID: $targetID) {\n    createdAt\n    moderator {\n      id\n      login\n    }\n  }\n}\n"
    },
    "UnbanRequestListItemHeader": {
        "hash": "22859114d804e8025a9a7115ec561e4ef2a67c3663f79b6ab6091990966c443a",
        "query": "query UnbanRequestListItemHeader($requesterID: ID) {\n  user(id: $requesterID) {\n    id\n    login\n    createdAt\n    displayName\n    profileImageURL(width: 50)\n  }\n}\n"
    },
    "ApproveUnbanRequest": {
        "hash": "99d72b448bd31e44b3f921c4c694bf9a9cac14c74eb2ec4853339d70a55ba8e6",
        "query": "mutation ApproveUnbanRequest($input: ApproveUnbanRequestInput!) {\n  approveUnbanRequest(input: $input) {\n    unbanRequest {\n      id\n      status\n      resolvedAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DenyUnbanRequest": {
        "hash": "c9094f2daaa6ff016a5e51fabd6e81b37d78b908f15c95d4ae237c60466dd6b2",
        "query": "mutation DenyUnbanRequest($input: DenyUnbanRequestInput!) {\n  denyUnbanRequest(input: $input) {\n    unbanRequest {\n      id\n      status\n      resolvedAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UnbanRequestPage": {
        "hash": "9e46500ce6b867a9119214bd849e5ebe67c446533518c9930b27f612fc352418",
        "query": "query UnbanRequestPage($id: ID!) {\n  channelUnbanRequest(id: $id) {\n    ... on UnbanRequest {\n      ...unbanRequestFragment\n      channel {\n        id\n        name\n        owner {\n          id\n          login\n          displayName\n          profileImageURL(width: 50)\n        }\n      }\n    }\n    ... on UnbanRequestError {\n      code\n    }\n  }\n}\n"
    },
    "CustomShelves_CreateCollection": {
        "hash": "6d8d88e4c4bd998a099d26ba4df6c74d50721588e3b4590d62c17b4a6509d44f",
        "query": "mutation CustomShelves_CreateCollection($input: CreateCollectionInput!, $includePreviewBlur: Boolean) {\n  createCollection(input: $input) {\n    collection {\n      ...PreviewCollection\n    }\n  }\n}\n"
    },
    "AddShelfLayoutQuery": {
        "hash": "6c62a51d83c80d0ba34c3d93dcfc708e542b95219596861994ff9ed820f36564",
        "query": "query AddShelfLayoutQuery($channelLogin: String!, $first: Int!, $cursor: Cursor, $includePreviewBlur: Boolean) {\n  user(login: $channelLogin) {\n    id\n    collections(first: $first, after: $cursor, options: {includeEmpty: true}) {\n      edges {\n        ...shelfEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment shelfEdge on CollectionsItemEdge {\n  node {\n    ...PreviewCollection\n  }\n  cursor\n}\n"
    },
    "ChannelRefreshVideoShelfQuery": {
        "hash": "49899122034c3e80cd83d6d70f2d1bdda0bf4c8a8d94f72067540814252028a5",
        "query": "query ChannelRefreshVideoShelfQuery($channelLogin: String!, $options: ShelvesAvailableOptions, $includePreviewBlur: Boolean) {\n  user(login: $channelLogin) {\n    id\n    videoShelvesAvailable(first: 1, options: $options) {\n      edges {\n        ...VideoShelfEdge\n      }\n    }\n  }\n}\n"
    },
    "ChannelVideosEditPage__UpdateShelves": {
        "hash": "4b6eacf2e2e1e7a93442db19d053e07efbc6a7ca84fd9202ba37e5165265fb06",
        "query": "mutation ChannelVideosEditPage__UpdateShelves($input: UpdateUserVideoShelvesInput!, $includePreviewBlur: Boolean) {\n  updateUserVideoShelves(input: $input) {\n    error {\n      code\n      message\n    }\n    shelves {\n      ...updatedShelf\n    }\n  }\n}\n\nfragment updatedShelf on VideoShelf {\n  id\n  title\n  description\n  type\n  collection {\n    id\n    items {\n      totalCount\n    }\n  }\n  items {\n    ...ShelfPreviewCardClip\n    ...PreviewCardVideo\n  }\n}\n"
    },
    "ExtensionMessageCard": {
        "hash": "7023e4aaad762f5aad132efc5ff94fd5d317ec457e6c58f5351c127c60f1837e",
        "query": "query ExtensionMessageCard($extensionID: ID!, $extensionVersion: String) {\n  extension(id: $extensionID, version: $extensionVersion) {\n    id\n    authorName\n    clientID\n    description\n    iconURLs {\n      square100\n    }\n    name\n    version\n  }\n}\n"
    },
    "ShareVideo_Content": {
        "hash": "cfa49e6c50459972910b89af748b7a3202057955910e3a93b5e2a5e2ac78e1c5",
        "query": "query ShareVideo_Content($videoID: ID!, $collectionID: ID!, $hasVideo: Boolean!, $hasCollection: Boolean!) {\n  video(id: $videoID) @include(if: $hasVideo) {\n    ...shareVideoContent\n  }\n  collection(id: $collectionID) @include(if: $hasCollection) {\n    ...shareCollectionContent\n  }\n}\n\nfragment shareVideoContent on Video {\n  id\n  owner {\n    id\n    displayName\n  }\n  title\n}\n\nfragment shareCollectionContent on Collection {\n  id\n  owner {\n    id\n    displayName\n  }\n  title\n}\n"
    },
    "VideoOptions_User": {
        "hash": "ef4af5902a7b4967c9336778572578d8ad57da1d9a6127fb137f5842eafe8738",
        "query": "query VideoOptions_User($contentOwnerID: ID!) {\n  user(id: $contentOwnerID) {\n    id\n    login\n    self {\n      isEditor\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "VideoMetadata": {
        "hash": "6c46a20f65a8b4e0c514d46707f085837e2259d5b15a6e1621fa5656e43719a7",
        "query": "fragment videoMetadataUser on User {\n  id\n}\n\nfragment videoMetadataVideo on Video {\n  id\n  title\n  description\n  previewThumbnailURL(height: 60, width: 90)\n  createdAt\n  viewCount\n  publishedAt\n  lengthSeconds\n  broadcastType\n  owner {\n    id\n    login\n    displayName\n  }\n  game {\n    id\n    slug\n    boxArtURL\n    name\n    displayName\n  }\n}\n\nquery VideoMetadata($channelLogin: String!, $videoID: ID!) {\n  user(login: $channelLogin) {\n    id\n    primaryColorHex\n    isPartner\n    profileImageURL(width: 70)\n    lastBroadcast {\n      id\n      startedAt\n    }\n    stream {\n      id\n      viewersCount\n    }\n    followers {\n      totalCount\n    }\n  }\n  currentUser {\n    ...videoMetadataUser\n  }\n  video(id: $videoID) {\n    ...videoMetadataVideo\n  }\n}\n"
    },
    "BitsCheckoutRoot": {
        "hash": "c811f35df59b49b71d8f63539e457651f3fac931d99d0f272134eecf883b95a3",
        "query": "query BitsCheckoutRoot() {\n  currentUser {\n    id\n    email\n    bitsOffers {\n      id\n      bits\n      ... on BitsBundleOffer {\n        ...bitsBundleOfferOnCheckout\n      }\n    }\n  }\n}\n\nfragment bitsBundleOfferOnCheckout on BitsBundleOffer {\n  asin\n}\n"
    },
    "CollectionEditor_AddCollectionItem": {
        "hash": "b376744ccb038fcae228817942f1c29d2536556bba901638148cf7207444d069",
        "query": "mutation CollectionEditor_AddCollectionItem($input: AddCollectionItemInput!) {\n  addCollectionItem(input: $input) {\n    collection {\n      ...collectionEditorFields\n      ...itemConnection\n    }\n  }\n}\n"
    },
    "CollectionManager_EditCollection": {
        "hash": "72ce010f799bd4087ed9bcdd676aeb37f7c2661b21ab9efb914c78e4feca3a64",
        "query": "query CollectionManager_EditCollection($collectionID: ID!, $ownerLogin: String!) {\n  collection(id: $collectionID, options: {includeAllItems: true}) {\n    ...collectionEditorFields\n    ...itemConnection\n  }\n  user(login: $ownerLogin) {\n    id\n    displayName\n  }\n}\n"
    },
    "CollectionEditor_RemoveCollectionItem": {
        "hash": "e0c16e140a4a9e3770535f8f49c5afa0ab5b0f3b9fc9734d461471b3e8c0ce8b",
        "query": "mutation CollectionEditor_RemoveCollectionItem($input: RemoveCollectionItemInput!) {\n  removeCollectionItem(input: $input) {\n    collection {\n      ...collectionEditorFields\n      ...itemConnection\n    }\n  }\n}\n"
    },
    "CollectionEditor_ReorderCollectionItem": {
        "hash": "1d32a3997f6dcbc4246f6097fd4d0f3c57fe88627dff65be4fdf244481ba5bb0",
        "query": "mutation CollectionEditor_ReorderCollectionItem($input: ReorderCollectionItemInput!) {\n  reorderCollectionItem(input: $input) {\n    collection {\n      id\n      ...itemConnection\n    }\n  }\n}\n"
    },
    "CollectionEditor_UpdateCollection": {
        "hash": "1c6e9054681609572cc6868d7fa1fdd86232631445b506ae9dae05bebb3470c5",
        "query": "mutation CollectionEditor_UpdateCollection($input: UpdateCollectionInput!) {\n  updateCollection(input: $input) {\n    collection {\n      ...collectionEditorFields\n      ...itemConnection\n    }\n  }\n}\n"
    },
    "CollectionItemCard_CurrentUser": {
        "hash": "42a85b7c9bd71f220932a2fc239476cf3739db2b924455a17966cb9f3878f760",
        "query": "query CollectionItemCard_CurrentUser() {\n  currentUser {\n    id\n  }\n}\n"
    },
    "CollectionEditor_SearchCreatorVideos": {
        "hash": "4499b26ddda5e9188d65a29fc90a4cd2ccee720b37c96e686007260cccc642c3",
        "query": "query CollectionEditor_SearchCreatorVideos($creatorID: ID!, $collectionID: ID!, $after: Cursor, $search: VideoConnectionSearchParams) {\n  user(id: $creatorID) {\n    id\n    searchVideos(first: 6, after: $after, search: $search) {\n      edges {\n        cursor\n        node {\n          ...SearchCardVideo\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n  collection(id: $collectionID, options: {includeAllItems: true}) {\n    ...collectionEditorFields\n    ...itemConnection\n  }\n}\n"
    },
    "CollectionManager_CreatorCollections": {
        "hash": "f3dc32b8700934bf2112d8dcba9145b15b992a462d6efd1e0413ee72f3a669b7",
        "query": "query CollectionManager_CreatorCollections($creatorLogin: String!, $after: Cursor) {\n  user(login: $creatorLogin) {\n    id\n    displayName\n    collections(first: 15, after: $after, options: {includeEmpty: true}) {\n      edges {\n        cursor\n        node {\n          ...collectionManagerCollection\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    self {\n      isEditor\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "CollectionManager_DeleteCollection": {
        "hash": "9e94f35d3b7d6d2613750f200c26064f34415d7e39268df43a70cf33cf13f117",
        "query": "mutation CollectionManager_DeleteCollection($input: DeleteCollectionInput!) {\n  deleteCollection(input: $input) {\n    collection {\n      id\n    }\n  }\n}\n"
    },
    "UserImageUploader": {
        "hash": "65fdda1124b03c0b22d19aa847f785dac60ec3c5a0907ea9a100a8fae413b45f",
        "query": "query UserImageUploader($login: String!) {\n  user(login: $login) {\n    id\n    login\n    bannerImageURL\n    offlineImageURL\n  }\n}\n"
    },
    "EditProfile_CreateChannelOfflineImageUploadURL": {
        "hash": "c6bd3bb22519656708484e6d5885753dee87f0fe8ac9ab1469f347eccc7ef9cf",
        "query": "mutation EditProfile_CreateChannelOfflineImageUploadURL($input: CreateChannelOfflineImageUploadURLInput!) {\n  createChannelOfflineImageUploadURL(input: $input) {\n    uploadID\n    uploadURL\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EditProfile_CreateProfileBannerImageUploadURL": {
        "hash": "ccf35384febbbaf6190401094b218168e08bd9bc2033886399621782a6eb6dec",
        "query": "mutation EditProfile_CreateProfileBannerImageUploadURL($input: CreateProfileBannerImageUploadURLInput!) {\n  createProfileBannerImageUploadURL(input: $input) {\n    uploadID\n    uploadURL\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EditProfile_CreateProfileImageUploadURL": {
        "hash": "88b7a4a2ddebb4b0e5a6a3479b619a09ee03f730792e705a6e9b8a2ee575ae90",
        "query": "mutation EditProfile_CreateProfileImageUploadURL($input: CreateProfileImageUploadURLInput!) {\n  createProfileImageUploadURL(input: $input) {\n    uploadID\n    uploadURL\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EditProfile_SetUserDefaultProfileImage": {
        "hash": "efb8b7b45a56c8d4ed760aa690a47ed37814e772a3fa18d45245155509dacd2f",
        "query": "mutation EditProfile_SetUserDefaultProfileImage($input: SetUserDefaultProfileImageInput!) {\n  setUserDefaultProfileImage(input: $input) {\n    user {\n      id\n      profileImageURL(width: 70)\n      profileImageURL(width: 300)\n    }\n  }\n}\n"
    },
    "ProfileBannerSetting": {
        "hash": "3a39ef317a8cfa8c1e70534f844bffd5aa4fa8f797036ba90dbe545d158de774",
        "query": "query ProfileBannerSetting() {\n  currentUser {\n    id\n    login\n    displayName\n    bannerImageURL\n  }\n}\n"
    },
    "UpdateCustomBannerPreference": {
        "hash": "a90488d75ac748ada3d9505967a7e9dd9ae100f9ca965c4f556c7a9b798de46c",
        "query": "mutation UpdateCustomBannerPreference($input: UpdateChannelHomePreferencesInput!) {\n  updateChannelHomePreferences(input: $input) {\n    channel {\n      id\n      home {\n        preferences {\n          heroPreset\n        }\n      }\n    }\n  }\n}\n"
    },
    "ProfileImageSetting": {
        "hash": "1b7f6e56142e7cc9235474fae6ad5c2ecd939b5b256f0774f3c45fee0615868c",
        "query": "query ProfileImageSetting() {\n  currentUser {\n    id\n    login\n    displayName\n    profileImageURL(width: 300)\n  }\n}\n"
    },
    "SettingsTabs_User": {
        "hash": "79c85403dca1f6eb98ed39c64b0c819777e86bbfb26668019ce1462ad8b15f72",
        "query": "query SettingsTabs_User() {\n  currentUser {\n    id\n    hasTurbo\n    hasPrime\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "CreateCommunityPointsCommunityGoal": {
        "hash": "4cc9d235ea8753395a38dfae1c95add6f07d742befcb8f815a757beaab09747c",
        "query": "mutation CreateCommunityPointsCommunityGoal($input: CreateCommunityPointsCommunityGoalInput!) {\n  createCommunityPointsCommunityGoal(input: $input) {\n    error {\n      code\n    }\n    goal {\n      ...communityGoalItem\n    }\n  }\n}\n"
    },
    "UpdateCommunityPointsCommunityGoal": {
        "hash": "fc7ec0bc658d3f1944b8516e12864a5413ea242714c13cba2f76f1f95166629e",
        "query": "mutation UpdateCommunityPointsCommunityGoal($input: UpdateCommunityPointsCommunityGoalInput!) {\n  updateCommunityPointsCommunityGoal(input: $input) {\n    error {\n      code\n    }\n    goal {\n      ...communityGoalItem\n    }\n  }\n}\n"
    },
    "Consent": {
        "hash": "0c830d9b97caed14e9b1ef9367bd85b33de0cef3c3389afa34e33b2485d0fd22",
        "query": "query Consent($id: ID!, $includeNewCookieConsentFields: Boolean!, $includeTCData: Boolean!) {\n  consent(consentSessionID: $id) {\n    id\n    isDeniedUnderage\n    privacyLawName\n    shouldShowNotification\n    shouldShowSettingsPage\n    shouldShowDismissButton\n    shouldSkipDmaBanner\n    vendorStatus {\n      name\n      consentStatus\n      hasUserSetConsent\n      isVisible\n    }\n    vendorConsentStatus @include(if: $includeNewCookieConsentFields) {\n      ...vendorConsentStatuses\n    }\n    gdprUserPreferences @include(if: $includeTCData) {\n      ...gdprUserPreferences\n    }\n    dmaUserPreferences @include(if: $includeTCData) {\n      ...dmaUserPreferences\n    }\n  }\n}\n"
    },
    "IsInRaidBrowserT0T1ExperimentClusterQuery": {
        "hash": "596e711862114215a3eb540c8ab385466ceff42fc1bf148ae58f7362ecff74ac",
        "query": "query IsInRaidBrowserT0T1ExperimentClusterQuery($clusterID: ID!, $userID: ID!) {\n  experimentCluster(input: {clusterID: $clusterID, userID: $userID}) {\n    id\n    isEligible\n    experimentGroup\n  }\n}\n"
    },
    "IsInRaidBrowserT2ExperimentClusterQuery": {
        "hash": "8c0e92ea7fda4d3cffa3ed000e7ca00d3649eb679d1653838f1f94e7813084de",
        "query": "query IsInRaidBrowserT2ExperimentClusterQuery($clusterID: ID!, $userID: ID!) {\n  experimentCluster(input: {clusterID: $clusterID, userID: $userID}) {\n    id\n    isEligible\n    experimentGroup\n  }\n}\n"
    },
    "ChannelPropertiesSettingsPageMutation": {
        "hash": "8d7d8fe8ed6eb17c150f80e4f0383ecdf8a40701b6e061ff0aa5c5372b78d158",
        "query": "mutation ChannelPropertiesSettingsPageMutation($input: UpdateVideoStreamSettingsInput!) {\n  updateVideoStreamSettings(input: $input) {\n    channel {\n      id\n      videoStreamSettings {\n        isDisconnectSlateEnabled\n        isLowLatency\n        shouldArchiveVODs\n      }\n    }\n  }\n}\n"
    },
    "RegenerateStreamKeyMutation": {
        "hash": "fec3f53a686d7080261abed129c63b1cabdf1b8dc5aa80990928de908e961294",
        "query": "mutation RegenerateStreamKeyMutation($input: RegenerateStreamKeyInput!) {\n  regenerateStreamKey(input: $input) {\n    channel {\n      id\n    }\n  }\n}\n"
    },
    "ChannelPropertiesSettingsPage": {
        "hash": "e4a4c02e003ab6508b19de9b9566489336a1e1e774e307763f3c216eaf68e03b",
        "query": "query ChannelPropertiesSettingsPage($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    videoStreamSettings {\n      isLowLatency\n      shouldArchiveVODs\n      streamKey {\n        ... on StreamKey {\n          value\n          expiresAt\n        }\n        ... on StreamKeyError {\n          code\n          links\n          message\n        }\n      }\n      isBackupEnabled\n      disconnectSlateDurationSeconds\n      backupStreamKeys {\n        ... on StreamKey {\n          value\n          expiresAt\n        }\n        ... on StreamKeyError {\n          code\n          links\n          message\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateChannelVodsSettings": {
        "hash": "309e18044aa79a0af57171fa91a816d08e4de3147d35edb0b8f3e4a15c724b82",
        "query": "mutation UpdateChannelVodsSettings($input: UpdateChannelVODSettingsInput!) {\n  updateChannelVODSettings(input: $input) {\n    channel {\n      id\n      vodSettings {\n        shouldAlwaysPublishVODs\n        categoryBlocklist {\n          id\n          name\n          displayName\n          boxArtURL(width: 40, height: 55)\n        }\n      }\n    }\n  }\n}\n"
    },
    "Settings_ChannelVODsSettings": {
        "hash": "7a0ca7fe923132f008c0a5adf22e1001383b85553bf2f2d51e19e44de8b3ea72",
        "query": "query Settings_ChannelVODsSettings() {\n  currentUser {\n    id\n    roles {\n      isParticipatingDJ\n    }\n    channel {\n      id\n      vodSettings {\n        shouldAlwaysPublishVODs\n        categoryBlocklist {\n          id\n          name\n          displayName\n          boxArtURL(width: 40, height: 55)\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateMutingThresholdStatus": {
        "hash": "efd7e81f901602226193d9018e8ea83823394020bd14575faa742678b7438b5b",
        "query": "mutation UpdateMutingThresholdStatus($input: UpdateChannelVODSettingsInput!) {\n  updateChannelVODSettings(input: $input) {\n    channel {\n      id\n      vodSettings {\n        publishSettings {\n          wasDisabled\n        }\n      }\n    }\n  }\n}\n"
    },
    "Settings_ContentAccessSettings": {
        "hash": "59f042819cbba8f0594a8ca1d12f219b4bc4ceb5faf50292230546c71e6cc462",
        "query": "query Settings_ContentAccessSettings() {\n  currentUser {\n    id\n    channel {\n      id\n      vodSettings {\n        isUnviewable\n        unviewableExpirationTime\n        publishSettings {\n          wasDisabled\n          disableReason\n          lastDisableTime\n          isDisableOptOut\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateUnviewableStatus": {
        "hash": "936f2fc00d02517f97e7ee472a87f67be3e29a2f801882f9f31209ae2a3f00bf",
        "query": "mutation UpdateUnviewableStatus($input: UpdateChannelVODSettingsInput!) {\n  updateChannelVODSettings(input: $input) {\n    channel {\n      id\n      vodSettings {\n        isUnviewable\n      }\n    }\n  }\n}\n"
    },
    "RestrictStreamViewingSettings": {
        "hash": "257b0f469a4d2caa13ad08993231eda7473a70b895c5b012899ab933567ab0b6",
        "query": "query RestrictStreamViewingSettings($channelID: ID!) {\n  restrictStreamViewingSettings(channelID: $channelID) {\n    shouldRestrictBannedChatters\n  }\n}\n"
    },
    "UpdateRestrictStreamViewingSettings": {
        "hash": "8e7a9f95b1a3b3dcfca935df905027c50bf318ff9f18bfb45ed3b3739a273d22",
        "query": "mutation UpdateRestrictStreamViewingSettings($input: UpdateRestrictStreamViewingSettingsInput!) {\n  updateRestrictStreamViewingSettings(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateRawMedia": {
        "hash": "e2f996c960e6d6d7b6bf43b80f6e7c029be3c059d35f5236bed48dc0cb49aade",
        "query": "mutation CreateRawMedia($input: CreateRawMediaInput!) {\n  createRawMedia(input: $input) {\n    rawMedia {\n      ...rawMedia\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GetRawMedia": {
        "hash": "7fe86ce241ac56cbaf7f05e18a7ae05bb33a36b48bcb5f3f54d2faf7fdd998ec",
        "query": "query GetRawMedia($id: ID!) {\n  rawMedia(id: $id) {\n    ...rawMedia\n  }\n}\n"
    },
    "LiveStreamInfoClipCreationWebViewQuery": {
        "hash": "43c4fd50913cb7b5f918c5b7e04b346c55a9bd19233fa253e04bff52c48c2bda",
        "query": "query LiveStreamInfoClipCreationWebViewQuery($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "IsStreamLiveClipCreationWebViewQuery": {
        "hash": "816da4a2a4685eba79523fe56c68deb42372c75d3ab4933fa15deea0e2857425",
        "query": "query IsStreamLiveClipCreationWebViewQuery($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "BitsLandingPage": {
        "hash": "b55c3d5824357cf1ac19c20c277b9ab72b5159e3485e24c67ba155edda5ac1a2",
        "query": "query BitsLandingPage() {\n  currentUser {\n    id\n    bitsBalance\n  }\n}\n"
    },
    "ReportWizardQuery": {
        "hash": "4aed0390130b860d9d69c2f198127da35838f55c30323074b0775832a243051a",
        "query": "query ReportWizardQuery($targetLogin: String!) {\n  userResultByLogin(login: $targetLogin) {\n    ... on User {\n      id\n    }\n    ... on UserDoesNotExist {\n      key\n    }\n    ... on UserError {\n      key\n    }\n  }\n}\n"
    },
    "SnoozeAdsQuickAction_AdProperties": {
        "hash": "0a40741d1199d71f100429d31e3e655f8867d4cd5014551b45f848b83bff1f1b",
        "query": "query SnoozeAdsQuickAction_AdProperties($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        isAdScheduleEnabled\n        adSchedule {\n          runAtTime\n        }\n        snooze {\n          currentAmount\n          maxAmount\n          refreshAt\n          durationSeconds\n        }\n      }\n    }\n  }\n}\n"
    },
    "SetResourceRestrictionMutation": {
        "hash": "1b7286c08fcd6225753399c48d4a39e58c7e7e095081675704abd760df8333a3",
        "query": "mutation SetResourceRestrictionMutation($input: SetResourceRestrictionInput!) {\n  setResourceRestriction(input: $input) {\n    stream {\n      id\n      restriction {\n        id\n        type\n        options\n      }\n      restrictionType\n    }\n    channel {\n      id\n      restriction {\n        id\n        type\n        options\n      }\n    }\n    video {\n      id\n      resourceRestriction {\n        id\n        type\n        options\n      }\n    }\n  }\n}\n"
    },
    "CategoryDetails": {
        "hash": "0fdc762efc3f2bbcadcad4658699b31d6e4bdc6657ec9d822939ddd85f17431f",
        "query": "query CategoryDetails($id: ID!, $tagType: TagType!) {\n  game(id: $id) {\n    id\n    name\n    displayName\n    boxArtURL(width: 144, height: 192)\n    viewersCount\n    followersCount\n    isMature\n    isRestrictedForCurrentUserAndRegion\n    tags(tagType: $tagType) {\n      ...broadcastTagFragment\n    }\n  }\n}\n"
    },
    "EditBroadcastContext_LiveUpNotificationMutation": {
        "hash": "8a6fd4a82d85054f84cb9d63572ab2ccc17c54792bc9b477c4b1e5b51d617cfa",
        "query": "mutation EditBroadcastContext_LiveUpNotificationMutation($input: UpdateLiveUpNotificationInput!) {\n  updateLiveUpNotification(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "EditBroadcastContext_BroadcastSettingsMutation": {
        "hash": "b0d695214e48ef4818f2c5299444e028eba665ea07a35c19c2e4fa5a1b6ee785",
        "query": "mutation EditBroadcastContext_BroadcastSettingsMutation($input: UpdateBroadcastSettingsInput!) {\n  updateBroadcastSettings(input: $input) {\n    broadcastSettings {\n      game {\n        id\n        name\n        displayName\n        tags(tagType: CONTENT) {\n          ...broadcastTagFragment\n        }\n      }\n      id\n      language\n      liveUpNotificationInfo {\n        isDefault\n        liveUpNotification\n      }\n      title\n    }\n    error\n  }\n}\n"
    },
    "EditBroadcastContext_ChannelRerunStatusMutation": {
        "hash": "e446d8bec19ce81b765661d4ed3405251906b78178553a013cd892f348e9b263",
        "query": "mutation EditBroadcastContext_ChannelRerunStatusMutation($input: SetChannelRerunStatusInput!) {\n  setChannelRerunStatus(input: $input) {\n    channel {\n      id\n    }\n    channelRerunStatus {\n      isRerun\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ContentClassificationLabelsMutation": {
        "hash": "9d28a082f9a7a307a7d3c3aa3bfef24d058fa4279cbc5a620169712ec135d8e2",
        "query": "mutation ContentClassificationLabelsMutation($input: SetContentClassificationLabelsInput!) {\n  setContentClassificationLabels(input: $input) {\n    contentClassificationLabels {\n      id\n      localizedName\n      description\n      isEnabled\n      isLocked\n      lockedUntil\n      isSelectable\n    }\n    error {\n      code\n      message\n    }\n  }\n}\n"
    },
    "ContentPolicyPropertiesMutation": {
        "hash": "f60d37973e9dbb1a0ef5d6bc6639c32cde25570fc373ea7b71cb9aed4e85171a",
        "query": "mutation ContentPolicyPropertiesMutation($input: SetContentPolicyPropertiesInput!) {\n  setContentPolicyProperties(input: $input) {\n    contentPolicyProperties {\n      hasBrandedContent\n    }\n    error\n  }\n}\n"
    },
    "EditBroadcastContextQuery": {
        "hash": "c8051c854f1132fb20bb69b0f81342e0ca95ce8b4cc45be0bb091863bced67fb",
        "query": "query EditBroadcastContextQuery($login: String!, $id: ID!, $isChannelOwner: Boolean!, $includesDisabled: Boolean!) {\n  channelRerunStatus(channelID: $id) {\n    isRerun\n  }\n  user(login: $login) {\n    id\n    lastBroadcast {\n      id\n      title\n      game {\n        id\n        displayName\n        name\n        isMature\n        isRestrictedForCurrentUserAndRegion\n      }\n    }\n    stream {\n      id\n    }\n    channel {\n      id\n      restriction {\n        id\n        type\n        options\n      }\n      self {\n        permissions\n      }\n      contentClassificationLabels(includesDisabled: $includesDisabled) {\n        id\n        localizedName\n        description\n        isEnabled\n        isLocked\n        lockedUntil\n        isSelectable\n      }\n    }\n    subscriptionProducts {\n      ...editBroadcastSubscriptionProduct\n    }\n    broadcastSettings {\n      id\n      contentPolicyProperties @include(if: $isChannelOwner) {\n        hasBrandedContent\n      }\n      contentClassificationLabelBroadcasterPolicyProperties {\n        contentClassificationLabelsAllowed\n      }\n      language\n      liveUpNotificationInfo @include(if: $isChannelOwner) {\n        isDefault\n        liveUpNotification\n      }\n      game {\n        id\n        displayName\n        name\n        isMature\n        isRestrictedForCurrentUserAndRegion\n        tags(tagType: CONTENT) {\n          id\n        }\n      }\n      title\n    }\n  }\n}\n\nfragment editBroadcastSubscriptionProduct on SubscriptionProduct {\n  id\n  name\n  tier\n}\n"
    },
    "ContentMatchedExtensionConfigure": {
        "hash": "c947fdbb858209f422fe257fbb4b8c032eebbc2eee91c9d04d24972340f7ba95",
        "query": "query ContentMatchedExtensionConfigure($hasStreamCategory: Boolean!, $streamCategoryID: ID) {\n  currentUser {\n    id\n    installedExtensions {\n      id\n      activationConfig {\n        anchor\n        state\n      }\n      extension {\n        id\n        clientID\n        name\n        version\n        views {\n          component {\n            viewerURL\n          }\n          videoOverlay {\n            viewerURL\n          }\n        }\n      }\n      requiredActions {\n        type\n      }\n    }\n  }\n  game(id: $streamCategoryID) @include(if: $hasStreamCategory) {\n    id\n    name\n  }\n}\n"
    },
    "ContentMatchedExtensionActivation": {
        "hash": "bde3f946bcdf4ae6d810475d1d17dd8ee87b48e39a142fb8dda25d4d2aed701a",
        "query": "mutation ContentMatchedExtensionActivation($input: ApplyExtensionActivationsInput!) {\n  applyExtensionActivations(input: $input) {\n    installedExtensions {\n      ...ContentMatchedExtensionInstallationFields\n    }\n  }\n}\n"
    },
    "InterruptSchedule": {
        "hash": "cecda4e0fab187d258fc0652a22d69df1d8230826ef1a95228ec3b60173568b4",
        "query": "mutation InterruptSchedule($input: InterruptScheduleInput!) {\n  interruptSchedule(input: $input) {\n    error {\n      code\n      ... on InterruptScheduleBoundsError {\n        minimum\n        maximum\n      }\n    }\n    schedule {\n      id\n      interruption {\n        endAt\n        reason\n        startAt\n      }\n    }\n  }\n}\n"
    },
    "ResumeSchedule": {
        "hash": "3c54822cb13a17c4891a676887f5d7496d8a9389262e7dbfd10cd8e5c6d7d229",
        "query": "mutation ResumeSchedule($input: ResumeScheduleInput!) {\n  resumeSchedule(input: $input) {\n    error\n    schedule {\n      id\n      interruption {\n        endAt\n        reason\n        startAt\n      }\n    }\n  }\n}\n"
    },
    "CreateStreamSchedule": {
        "hash": "8b23a3fdb35584684f650b771eb1666993f92608d21a41d37182c49006f76dc8",
        "query": "mutation CreateStreamSchedule($input: CreateScheduleInput!) {\n  createSchedule(input: $input) {\n    channel {\n      id\n      schedule {\n        id\n      }\n    }\n    error\n  }\n}\n"
    },
    "CreateStreamScheduleSegment": {
        "hash": "39b36916075a72ad984c307a0b9c421220a2996fccd19c817b5a051bba4cc786",
        "query": "mutation CreateStreamScheduleSegment($input: CreateScheduleSegmentInput!) {\n  createScheduleSegment(input: $input) {\n    error {\n      code\n      maximum\n      minimum\n      conflictingSegment {\n        id\n        startAt\n        endAt\n      }\n    }\n    schedule {\n      ...scheduleFragment\n    }\n  }\n}\n"
    },
    "DeleteSchedule": {
        "hash": "3ea4d768ca980b5c4a75d3ace56312016fad8e4af481d4abf4288fa4a50381c7",
        "query": "mutation DeleteSchedule($input: DeleteScheduleInput!) {\n  deleteSchedule(input: $input) {\n    error\n    channel {\n      id\n    }\n  }\n}\n"
    },
    "DeleteScheduleSegment": {
        "hash": "33224806898d656ea2c289064ecf303a6da30e7bb7587fd026a4a70df65d4f40",
        "query": "mutation DeleteScheduleSegment($input: DeleteScheduleSegmentInput!) {\n  deleteScheduleSegment(input: $input) {\n    error\n    schedule {\n      ...scheduleFragment\n    }\n  }\n}\n"
    },
    "UpdateScheduleSegment": {
        "hash": "ad30dfddc9e0ba1c0a8cc1520fc51f94d84cf912df0d728613411ed330b88761",
        "query": "mutation UpdateScheduleSegment($input: UpdateScheduleSegmentInput!) {\n  updateScheduleSegment(input: $input) {\n    error {\n      code\n      maximum\n      minimum\n    }\n    schedule {\n      ...scheduleFragment\n    }\n  }\n}\n"
    },
    "ScheduleEditor": {
        "hash": "8682a89cc82251219822a3d7a8778800f762f3c0b78febab8a991b027777bc20",
        "query": "query ScheduleEditor($channelLogin: String!, $startingWeekday: String, $utcOffsetMinutes: Int) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      schedule {\n        id\n        interruption {\n          endAt\n          reason\n          startAt\n        }\n        segments(startingWeekday: $startingWeekday, utcOffsetMinutes: $utcOffsetMinutes, includeFutureSegments: true) {\n          categories {\n            id\n            boxArtURL(width: 144, height: 192)\n            displayName\n            name\n          }\n          endAt\n          id\n          isCancelled\n          startAt\n          title\n          cancelledUntil\n          reminderCount\n          repeatEndsAfterCount\n          firstOccurrenceDate\n        }\n      }\n    }\n    roles {\n      ...userRoles\n    }\n  }\n}\n\nfragment userRoles on UserRoles {\n  isStaff\n  isPartner\n  isAffiliate\n}\n"
    },
    "ScheduleEditorSearchCategories": {
        "hash": "84fae579168496a25b4cfb9a95096836d2df2c5beeea7cd802f4c59b8887f99c",
        "query": "query ScheduleEditorSearchCategories($query: String!) {\n  searchCategories(query: $query) {\n    edges {\n      ...SearchCategoriesEdgeFragment\n    }\n  }\n}\n\nfragment SearchCategoriesEdgeFragment on SearchCategoriesEdge {\n  node {\n    id\n    displayName\n    name\n    boxArtURL\n    isRestrictedForCurrentUserAndRegion\n  }\n}\n"
    },
    "GenericSearchCategories": {
        "hash": "1a215ae1792e2b2f057ad3732f51af2391c3fcefdbc430d58bd87549bf1dd884",
        "query": "query GenericSearchCategories($query: String!, $after: Cursor) {\n  searchCategories(query: $query, first: 10, after: $after) {\n    edges {\n      ...GenericSearchCategoriesEdgeFragment\n    }\n  }\n}\n\nfragment GenericSearchCategoriesEdgeFragment on SearchCategoriesEdge {\n  cursor\n  node {\n    boxArtURL(width: 144, height: 192)\n    id\n    displayName\n    name\n    slug\n  }\n}\n"
    },
    "getHourlyViewersHeatmapQuery": {
        "hash": "c6d81550a3a5be4d29cfaa53ca6b143f9e2c687301c21b4dffd8b8b8983dbc1d",
        "query": "query getHourlyViewersHeatmapQuery($input: HourlyViewersInput!) {\n  hourlyViewers(input: $input) {\n    hourlyHeatMap {\n      dayOfWeek\n      hourOfDay\n      averageConcurrentUsers\n      weeklyProportion\n      averageViewers\n      averageBroadcasters\n    }\n    dataStatus\n    releaseStatus\n    error\n  }\n}\n"
    },
    "getHourlyViewersReportQuery": {
        "hash": "9a454a2f987abc91f14d332110ac319ef2f981006f9c1b121de8343300229ee6",
        "query": "query getHourlyViewersReportQuery($input: HourlyViewersReportInput!) {\n  hourlyViewersReport(input: $input) {\n    report {\n      recentCategories {\n        categories {\n          id\n          details {\n            id\n            displayName\n            name\n            originalReleaseDate\n            slug\n          }\n          timeStamp\n          isInvalidForSuggestions\n        }\n        language\n      }\n      categoryDetails {\n        id\n        displayName\n        name\n        ... on Game {\n          slug\n        }\n      }\n      hourlyViewers {\n        hourlyHeatMap {\n          dayOfWeek\n          hourOfDay\n          averageConcurrentUsers\n          weeklyProportion\n          averageViewers\n          averageBroadcasters\n        }\n        dataStatus\n        releaseStatus\n        error\n      }\n      language\n      filteredLanguages\n    }\n    error\n  }\n}\n"
    },
    "AccountCheckupSecurityStateQuery": {
        "hash": "a5c4a32147a0d0d2a543b0a3cd56a7065c666ae4360344ca046412522ed8906e",
        "query": "query AccountCheckupSecurityStateQuery() {\n  currentUser {\n    id\n    email\n    phoneNumber\n    accountHealth {\n      accountSecurityState\n      isVerifiedEmail\n    }\n  }\n}\n"
    },
    "StreamerAdsManager_QueryAdProperties": {
        "hash": "ac6cfbde3ad30bee9349dd2a6960366720d0d75ea72278121390c61fb8bb171d",
        "query": "query StreamerAdsManager_QueryAdProperties($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      frequency\n      lastTriggeredAt\n      density {\n        isAdScheduleEnabled\n        adSchedule {\n          runAtTime\n          durationSeconds\n        }\n        snooze {\n          currentAmount\n          maxAmount\n          refreshAt\n          durationSeconds\n        }\n        interval {\n          desiredSeconds\n        }\n        duration {\n          desiredSeconds\n        }\n        startDelay {\n          desiredSeconds\n        }\n        reminder {\n          isEnabled\n          seconds\n        }\n        isInPartnerRevshareProgram\n      }\n    }\n  }\n}\n"
    },
    "StreamerAdsManagerPanelAdProperties_Query": {
        "hash": "20c43b07be29017f4a5a94b6962e24909157aa7cbb6fe471cdaff225b2913e1c",
        "query": "query StreamerAdsManagerPanelAdProperties_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        isAdScheduleEnabled\n      }\n    }\n  }\n  user(login: $login) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n  }\n}\n"
    },
    "RedeemSubPageEligibility": {
        "hash": "db7020c1515437a0aba47cfca6abaac3ab2f6387001fd496d80596b0f9a64fcc",
        "query": "query RedeemSubPageEligibility($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    subscriptionProducts {\n      id\n      tier\n    }\n    self {\n      subscriptionBenefit {\n        id\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "RedeemSubMutation": {
        "hash": "250c0be16aa3b1f5f217feae7ab6672c185c9d86bee3dd10b6788b8ddf801f37",
        "query": "mutation RedeemSubMutation($input: RedeemSubscriptionInput!) {\n  redeemSubscription(input: $input) {\n    errorCode\n    product {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "RedeemSubPageQuery": {
        "hash": "9315a17fc7567aba9f4e6f4b8c4652649a493ffd25a4306922be8e4a5326ba4f",
        "query": "query RedeemSubPageQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    self {\n      subscriptionBenefit {\n        id\n      }\n      canRedeemSubscription\n    }\n  }\n}\n"
    },
    "RedeemSubSearchChannel": {
        "hash": "b3c67c271b367dfca5a6b118782f9dd48982d7293ba97b7b0fdbba81d732ff19",
        "query": "fragment redeemSubSearchChannel on User {\n  id\n  displayName\n  login\n  profileImageURL(width: 50)\n}\n\nquery RedeemSubSearchChannel($userQuery: String!) {\n  searchUsers(userQuery: $userQuery, hasSubscriptionProductsOnly: true) {\n    edges {\n      node {\n        ...redeemSubSearchChannel\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "SubsBroadcaster_RENAME1": {
        "hash": "cb96f041638e082514a63b8d46fca1859a7d02b01ad11585d07689a1d382b10e",
        "query": "query SubsBroadcaster_RENAME1($currentChannelLogin: String!) {\n  user(login: $currentChannelLogin) {\n    id\n    displayName\n    login\n    description\n    roles {\n      isPartner\n    }\n    bannerImageURL\n    profileImageURL(width: 300)\n  }\n}\n"
    },
    "UpdateConsentMutation": {
        "hash": "8cbd049794b779b99e6d8ca5426dc78614b4c346191f383d37bb78559ec7dfc6",
        "query": "mutation UpdateConsentMutation($input: UpdateConsentInput!, $includeNewCookieConsentFields: Boolean!, $includeTCData: Boolean!) {\n  updateConsent(input: $input) {\n    consent {\n      id\n      isDeniedUnderage\n      privacyLawName\n      shouldShowNotification\n      shouldShowSettingsPage\n      shouldShowDismissButton\n      shouldSkipDmaBanner\n      vendorStatus {\n        name\n        consentStatus\n        hasUserSetConsent\n        isVisible\n      }\n      vendorConsentStatus @include(if: $includeNewCookieConsentFields) {\n        ...vendorConsentStatuses\n      }\n      gdprUserPreferences @include(if: $includeTCData) {\n        ...gdprUserPreferences\n      }\n      dmaUserPreferences @include(if: $includeTCData) {\n        ...dmaUserPreferences\n      }\n    }\n  }\n}\n"
    },
    "EmbedPlayer_ChannelLogin": {
        "hash": "484959aded095c8e557992629605d3e15eba6717ffd1e3182acc9b8057b788b1",
        "query": "query EmbedPlayer_ChannelLogin($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    login\n  }\n}\n"
    },
    "EmbedPlayer_ChannelData": {
        "hash": "662459f3d40947b841a28404e95e37ed1384f7e1bfbdddf6db2b27acf54f5849",
        "query": "query EmbedPlayer_ChannelData($channel: String) {\n  user(login: $channel) {\n    id\n  }\n}\n"
    },
    "VideoPlayer_DeadLTVFollowStatus": {
        "hash": "4e955fee679bb3d4e9596b090821c389f0d7d52bbac1e225349fc8c127d8f7e5",
        "query": "query VideoPlayer_DeadLTVFollowStatus($id: ID!) {\n  user(id: $id) {\n    id\n    self {\n      follower {\n        disableNotifications\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n"
    },
    "LTVPlayerSource": {
        "hash": "9ee483eb5071d5f560b6248cc4f72917907c83a4b95ece73cd845ff92ead0315",
        "query": "query LTVPlayerSource($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    displayName\n    stream {\n      id\n    }\n    videos(first: 1, types: [HIGHLIGHT]) {\n      ...LiveToVideoConnection\n    }\n    videos(first: 1, types: [ARCHIVE]) {\n      ...LiveToVideoConnection\n    }\n  }\n}\n\nfragment LiveToVideoConnection on VideoConnection {\n  edges {\n    node {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "EmbedPlayer_UserData": {
        "hash": "e0a6f1c7af019aa96c92933cf257cf987f2550d963e7f7623bc5cee45b2cc9ad",
        "query": "query EmbedPlayer_UserData() {\n  currentUser {\n    id\n    displayName\n    profileImageURL(width: 300)\n  }\n}\n"
    },
    "MWebViewerSheet": {
        "hash": "cc7e5486cdda3bea6820f858485dac7d8befaa1afbbbd8084d70f4887e94f630",
        "query": "query MWebViewerSheet($targetLogin: String!) {\n  user(login: $targetLogin) {\n    id\n    login\n    displayName\n  }\n  currentUser {\n    id\n    blockedUsers {\n      id\n    }\n  }\n}\n"
    },
    "MwebChannelLiveQuery": {
        "hash": "4ebbbd9ae804e68d8ec8968d08ef72cc4c5d1329e606d861cf14a7a9b00ac563",
        "query": "fragment MwebChanneLiveStreamInfoFragment on User {\n  login\n  displayName\n  profileImageURL(width: 50)\n  roles {\n    isPartner\n    isParticipatingDJ @include(if: $includeIsDJ)\n  }\n  broadcastSettings {\n    id\n    title\n  }\n  stream {\n    id\n    game {\n      id\n      name\n      slug\n    }\n    freeformTags {\n      ...freeformTagFragment\n    }\n  }\n  self {\n    follower {\n      followedAt\n    }\n  }\n  ...MWebSubscribeButtonFragment\n}\n\nquery MwebChannelLiveQuery($login: String!, $includeIsDJ: Boolean!) {\n  user(login: $login) {\n    ...MwebChanneLiveStreamInfoFragment\n    id\n    login\n    displayName\n    description\n    broadcastSettings {\n      id\n      title\n      game {\n        id\n        displayName\n      }\n    }\n    stream {\n      id\n      createdAt\n      height\n      previewImageURL\n      game {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "AcceptPlusGrant": {
        "hash": "838949e9f74d4645ce8f16cf7bab9642ec8d2ee6324e0c51c50ef5940d73b875",
        "query": "mutation AcceptPlusGrant($channelID: ID!, $language: String!, $version: String!, $plusLevel: String!) {\n  acceptPlusGrant(input: {channelID: $channelID, language: $language, version: $version, plusLevel: $plusLevel}) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DownloadSubsListMutation": {
        "hash": "b9ee5b599c6fa10919dba0b6253800c0765afb44dc90f95900c7b5bfb0e1be04",
        "query": "mutation DownloadSubsListMutation($input: GenerateSubscribersCSVInput!) {\n  generateSubscribersCSV(input: $input) {\n    channelID\n  }\n}\n"
    },
    "DJSubsidyPanel_GetDJSubsidy": {
        "hash": "9182d8d6099c9382ba62128f06ee7df0801c0dc6d586eff2bacf9e6c36296387",
        "query": "query DJSubsidyPanel_GetDJSubsidy($channelID: ID) {\n  user(id: $channelID) {\n    id\n    djStatus {\n      programState\n      subsidyPercent\n      lastProgramUpdate\n    }\n    djSubsidyDetails {\n      year\n      month\n      updatedAt\n      subsidyPercent\n      subsidyAmountCents\n    }\n  }\n}\n"
    },
    "PlusProgramPanel_Query": {
        "hash": "d7985d5a574f204521e881657bf98358c662fc694f1af564281ba0a4adc0f28f",
        "query": "query PlusProgramPanel_Query($channelID: ID!, $contractIdentifier: String!) {\n  plusStatus(channelID: $channelID) {\n    partnerPlusProgram {\n      qualification {\n        endDate\n        disallowedReason\n        blockStartDate\n        blockEndDate\n        progress {\n          qualifiedLevel\n          count\n          year\n          month\n        }\n      }\n      level\n      hasMetCriteria\n    }\n  }\n  creatorTermsStatus(channelID: $channelID, contractIdentifier: $contractIdentifier) {\n    contract {\n      markdown\n      version\n      language\n      metadata {\n        key\n        value\n      }\n    }\n    isAccepted\n  }\n}\n"
    },
    "ChannelAnalytics_RevenueTermsQuery": {
        "hash": "3d271ae353b1ce7de83dc4157f72a237d5388e241355d3915b7467c7ac5805fa",
        "query": "query ChannelAnalytics_RevenueTermsQuery($channelID: ID) {\n  user(id: $channelID) {\n    id\n    djStatus {\n      programState\n    }\n    payoutPlans {\n      category\n      tags\n    }\n  }\n}\n"
    },
    "SubscribersPanelQuery": {
        "hash": "e15efbc386ab18bc836e2786f4d2ddcf709b12ad92397e64fe492a71a0638db8",
        "query": "query SubscribersPanelQuery($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    payoutPlans {\n      tags\n    }\n    subscriptionProducts {\n      id\n      displayName\n      tier\n      priceInfo {\n        id\n        price\n      }\n      revenueConfig {\n        id\n        splitPercent\n      }\n    }\n    subscriberScore {\n      breakdown {\n        score\n        tier\n      }\n      countBreakdown {\n        count\n        tier\n      }\n    }\n  }\n}\n"
    },
    "WithholdingRatePanelQuery": {
        "hash": "593337028b846cab003eb35875cbbb7680b6ce6454912e8639da46243677309d",
        "query": "query WithholdingRatePanelQuery($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    payout {\n      taxIntents {\n        type\n        formExpiryDate\n      }\n    }\n    withholdingTaxDetail {\n      royaltyTaxRate\n      serviceTaxRate\n    }\n  }\n}\n"
    },
    "AdsManagerRefreshBanner_Query": {
        "hash": "4a1d4af803d55dac1dbcf565f0819169120516016028eec676590729618b3017",
        "query": "query AdsManagerRefreshBanner_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      density {\n        isAdScheduleEnabled\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsSettingsDisplay": {
        "hash": "cf170dfa4137e402f0cd1ac4c2a550037d94e0e2216e2cbe144e00c46bd88a77",
        "query": "query ChannelPointsSettingsDisplay($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        name\n        image {\n          url\n          url2x\n          url4x\n        }\n      }\n    }\n  }\n}\n"
    },
    "ResetChannelPointsIconMutation": {
        "hash": "d277168146fed93b89258e8c0e825141899dc6e7e424a28ebc1e5c431325b91c",
        "query": "mutation ResetChannelPointsIconMutation($input: UpdateCommunityPointsChannelSettingsInput!) {\n  updateCommunityPointsChannelSettings(input: $input) {\n    channel {\n      id\n      communityPointsSettings {\n        image {\n          ...pointsImageFragment\n        }\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UpdateChannelPointsNameMutation": {
        "hash": "efafd55098a1d4708a98525a2f4082a2a7284347aba3a0a9b60d9c74c3491f3d",
        "query": "mutation UpdateChannelPointsNameMutation($input: UpdateCommunityPointsChannelSettingsInput!) {\n  updateCommunityPointsChannelSettings(input: $input) {\n    error {\n      code\n    }\n    channel {\n      id\n      communityPointsSettings {\n        name\n      }\n    }\n  }\n}\n"
    },
    "ChannelCollectionsContent": {
        "hash": "e1949f66af6d18b37fe44ee6c001d14c9112efed50c46b8b8cec54e432b58daa",
        "query": "query ChannelCollectionsContent($ownerLogin: String!, $limit: Int, $cursor: Cursor, $includePreviewBlur: Boolean) {\n  user(login: $ownerLogin) {\n    id\n    login\n    displayName\n    collections(first: $limit, after: $cursor) {\n      ...PreviewCollectionConnection\n    }\n    self {\n      isEditor\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "FilterableVideoTower_Videos": {
        "hash": "ee738c36a5e866ee4ed9b1d090eb33597bf3ea3255f12d91e6f180c96690a14f",
        "query": "query FilterableVideoTower_Videos($channelOwnerLogin: String!, $limit: Int, $cursor: Cursor, $broadcastType: BroadcastType, $videoSort: VideoSort, $options: VideoConnectionOptionsInput, $includePreviewBlur: Boolean) {\n  user(login: $channelOwnerLogin) {\n    id\n    videos(first: $limit, after: $cursor, type: $broadcastType, sort: $videoSort, options: $options) {\n      edges {\n        ...VideoEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "EditableChannelsPage": {
        "hash": "1647fd2e0fc281bbe69b43180b9def9d431c3189506391e432c7d355f5f137ab",
        "query": "query EditableChannelsPage($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    editableChannels {\n      edges {\n        cursor\n        node {\n          id\n          displayName\n          login\n          profileImageURL(width: 50)\n        }\n      }\n    }\n  }\n}\n"
    },
    "removeEditor": {
        "hash": "67e80624c1a34d6fbe5cf529c2e9dbe09907566571b7cd1e30535273c575539c",
        "query": "mutation removeEditor($input: RemoveEditorInput!) {\n  removeEditor(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "PopoutDashboardLiveCardPageQuery": {
        "hash": "08466c5f7837e8be80b4ca071e4496fc3412a56908e2b60264498cf72526d7a1",
        "query": "query PopoutDashboardLiveCardPageQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "SubscribersByGeoQuery": {
        "hash": "4085d3e1c09a4c23b302629fdd44f09081246fb32a46f89180fbcb097d7df1c6",
        "query": "query SubscribersByGeoQuery($startAt: Time!, $endAt: Time!, $period: TimeSeriesPeriod!, $channel: String!) {\n  creatorDashboard(startAt: $startAt, endAt: $endAt, period: $period, channel: $channel) {\n    channelAnalytics {\n      subCountSeries {\n        totalCount\n        subGeoBreakdown {\n          distributions {\n            countryCode\n            percentage\n          }\n          isSufficientlyAnonymized\n        }\n      }\n    }\n  }\n}\n"
    },
    "CancelReasonsQuery": {
        "hash": "b9153a26a2609aa30d7d238cde4e86da3cf28e2b11945baf8ef20ea4241150ee",
        "query": "query CancelReasonsQuery($channel: String!, $startAt: Time!, $endAt: Time!, $period: TimeSeriesPeriod!) {\n  creatorDashboard(channel: $channel, startAt: $startAt, endAt: $endAt, period: $period) {\n    channelAnalytics {\n      doNotRenewReasonAggregations {\n        reason\n        count\n      }\n    }\n  }\n}\n"
    },
    "FoundersBadgePanelQuery": {
        "hash": "d677c4e593c393044491cbeb7e1e675db4515f5e423a3c824d1dd006f8ab0536",
        "query": "query FoundersBadgePanelQuery($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    founders {\n      entitlementStart\n      entitlementOwnerID\n      isSubscribed\n      isBanned\n      isBlocked\n      user {\n        id\n        login\n        displayName\n        profileImageURL(width: 70)\n      }\n    }\n  }\n}\n"
    },
    "QuickActionsCreateClip": {
        "hash": "45bb4371ec16b51087e25780f23355937ecd425fb7e97f8d861fc93bd117ea10",
        "query": "mutation QuickActionsCreateClip($input: CreateClipInput!) {\n  createClip(input: $input) {\n    clip {\n      id\n      url\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "QuickActions_ClipThat_DJRestrictions": {
        "hash": "246669d3b2a0d0fb28d4948c033f0c347e8f0cf40c9fa8cd7ab3e4c20dc57a84",
        "query": "query QuickActions_ClipThat_DJRestrictions($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    roles {\n      isParticipatingDJ\n    }\n    broadcastSettings {\n      id\n      game {\n        id\n      }\n    }\n  }\n}\n"
    },
    "DevTopNav_User_User": {
        "hash": "11e0071b70e099c81fc34b0a7873131760c71e8e8bf023e3961eb9591100d051",
        "query": "query DevTopNav_User_User() {\n  currentUser {\n    id\n    login\n    displayName\n    profileImageURL(width: 70)\n  }\n}\n"
    },
    "DevOrgListPage_CurrentUser": {
        "hash": "a75588da0b2afa58b376009c10410160629244dc4e491b90ca2c1abd0c480354",
        "query": "fragment organization on Organization {\n  id\n  name\n  url\n  type\n  isContractSigned\n  isCampaignsEnabled\n  curseCompanyID\n  isLegacy\n  self {\n    canAddMember\n    canLeaveOrganization\n    canRemoveMember\n    role\n    joinedAt\n  }\n  members {\n    totalCount\n  }\n  invites {\n    totalCount\n  }\n}\n\nfragment invite on OrganizationInvite {\n  id\n  organizationID\n  organizationName\n  role\n  createdAt\n  expiresAt\n}\n\nquery DevOrgListPage_CurrentUser() {\n  currentUser {\n    id\n    organizations {\n      ...organization\n    }\n    organizationInvites(first: 100) {\n      isWithinOrganizationMembershipLimit\n      totalCount\n      edges {\n        cursor\n        node {\n          ...invite\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "OnboardingSection_CurrentUser": {
        "hash": "1939df9f2225f70d17954ba70c81087c2d6a8198329cc8931c9644360c8207f9",
        "query": "query OnboardingSection_CurrentUser() {\n  currentUser {\n    id\n    login\n    roles {\n      isAffiliate\n      isExtensionsDeveloper\n    }\n    payoutPlans {\n      category\n      isReceivingRevenue\n      tags\n    }\n    onboardingInvitations {\n      payout {\n        id\n        category\n        workflow {\n          id\n          currentStep\n        }\n        isLegacy\n      }\n      upgrade {\n        id\n        category\n        workflow {\n          id\n          currentStep\n        }\n        isLegacy\n      }\n    }\n  }\n}\n"
    },
    "DashboardRevenueSettingsIndexPage": {
        "hash": "d286854fa939b9a311845e744516a6b46b48d6b090ed6107e830aadab831d2c2",
        "query": "query DashboardRevenueSettingsIndexPage($channelName: String!) {\n  user(login: $channelName) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    channel {\n      id\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isAffiliate\n    }\n    onboardingInvitations {\n      upgrade {\n        id\n        category\n      }\n      payout {\n        id\n        isDefaulted\n        workflow {\n          id\n          currentStep\n        }\n      }\n    }\n  }\n}\n"
    },
    "QuickActionsCreateStreamMarkerTitle": {
        "hash": "14337e3cb51bdbaa3e23fe2b7c0ab46d98343fb85eb7089cf055c4b145f5efad",
        "query": "mutation QuickActionsCreateStreamMarkerTitle($input: CreateVideoBookmarkInput!) {\n  createVideoBookmark(input: $input) {\n    videoBookmark {\n      id\n      positionSeconds\n    }\n  }\n}\n"
    },
    "QuickActionsStreamMarkerTitleQuery": {
        "hash": "4a7948a3cbc7ca2825bf9dd64c1027bfbd0e7f498a9a81cf490722bd08c31b10",
        "query": "query QuickActionsStreamMarkerTitleQuery($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n    }\n  }\n}\n"
    },
    "ExtensionMonetizationPutProduct": {
        "hash": "369390e6b53c072e6196a43f557e56ce4dc1325f9ebd42e6f55a092e9436a830",
        "query": "mutation ExtensionMonetizationPutProduct($input: UpdateExtensionProductInput!) {\n  updateExtensionProduct(input: $input) {\n    product {\n      displayName\n      isInDevelopment\n      sku\n      expiration\n      willNotifyAllExtensions\n      cost {\n        amount\n        type\n      }\n    }\n    error\n  }\n}\n"
    },
    "ExtensionMonetizationProducts": {
        "hash": "f25dc92d691ab8f8b0d4aa320363955e2337f729ca8aeec45f297572830f66f8",
        "query": "query ExtensionMonetizationProducts($extensionID: ID!, $extensionVersion: String) {\n  extension(id: $extensionID, version: $extensionVersion) {\n    id\n    products(includeAll: true) {\n      displayName\n      isInDevelopment\n      sku\n      expiration\n      willNotifyAllExtensions\n      cost {\n        amount\n        type\n      }\n    }\n  }\n}\n"
    },
    "DevExtensionMonetizationAssignedBillingManager": {
        "hash": "1212ce0cdbedcfd087f7a7708a37dc0aa8de35b851a0e8d1296d677242641b2e",
        "query": "query DevExtensionMonetizationAssignedBillingManager($id: ID!) {\n  extensionClient(id: $id) {\n    id\n    assignedBillingManager {\n      ...billingManager\n    }\n  }\n}\n"
    },
    "DevExtensionGetVersionManifests": {
        "hash": "94f03a2e84795786b6c74942a6ce3cc944bb5f28e11939b6121d6de5ad34c030",
        "query": "query DevExtensionGetVersionManifests($id: ID!, $after: Cursor) {\n  extensionManifests(id: $id, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        developerManifest {\n          versionState\n        }\n        capabilities {\n          bitsSupportLevel\n        }\n      }\n    }\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n"
    },
    "DevExtensionInviteDeveloper": {
        "hash": "492d02f206a8f0166ee080d56fd1f8ba9bd8a51631ca34b18dd7028629c3ab3c",
        "query": "mutation DevExtensionInviteDeveloper() {\n  inviteDeveloper {\n    error\n  }\n}\n"
    },
    "DevExtensionPayoutInviteStatus_CurrentUser": {
        "hash": "9d796105c1fcc940748ed21f0f48b9ae4943afd603af1da76daf85f587a4bf44",
        "query": "query DevExtensionPayoutInviteStatus_CurrentUser() {\n  currentUser {\n    id\n    login\n    roles {\n      isAffiliate\n      isExtensionsDeveloper\n      isPartner\n    }\n    payoutInvite {\n      id\n      category\n      workflow {\n        id\n        currentStep\n      }\n    }\n  }\n}\n"
    },
    "MyCollaborationsShelf": {
        "hash": "317e20db618f9255e8705ca4399de858f59b862ebdf9ec6b906bfd96e83fe9ec",
        "query": "query MyCollaborationsShelf($collabShelfGroup: ShelfGroupID, $requestID: String!, $platform: String!, $first: Int!, $imageWidth: Int, $includeIsDJ: Boolean) {\n  shelves(requestID: $requestID, platform: $platform, first: $first, shelfGroupID: $collabShelfGroup) {\n    edges {\n      node {\n        ...shelf\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n    }\n    verboseResults\n  }\n}\n"
    },
    "ChannelAvatar": {
        "hash": "2ff33c29693d1ef8783e4d00f792cc81b560a511ac6470fa9db0540cf3e51d32",
        "query": "query ChannelAvatar($channelLogin: String!, $includeIsDJ: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    followers {\n      totalCount\n    }\n    roles {\n      isPartner\n      isParticipatingDJ @include(if: $includeIsDJ)\n    }\n    primaryColorHex\n  }\n}\n"
    },
    "LowerHomeHeader": {
        "hash": "ee0e9410797cb7d4325f37b67f2141dda1d377eb71a45bdf637620bb2eb2d8ef",
        "query": "query LowerHomeHeader($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    self {\n      isEditor\n    }\n  }\n}\n"
    },
    "FollowGameCard_FollowGame": {
        "hash": "ade1d155b2f792704f5d649a6e619c31d4e3c926ec4a3074156e137f6c19fc5f",
        "query": "mutation FollowGameCard_FollowGame($input: FollowGameInput!) {\n  followGame(input: $input) {\n    game {\n      id\n      self {\n        follow {\n          followedAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "Game_FollowGameCard": {
        "hash": "c1c1a7427b16c2653f6a9d4c5c3ad606b0ed0d8a0722e955a94af5869efc3bb4",
        "query": "query Game_FollowGameCard($name: String) {\n  game(name: $name) {\n    id\n    displayName\n    self {\n      follow {\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "FollowGameCard_UnfollowGame": {
        "hash": "d0301136052a96a7f856b98c9114b5981bc22c5d5cb56e67f81f4144e4245d6b",
        "query": "mutation FollowGameCard_UnfollowGame($input: UnfollowGameInput!) {\n  unfollowGame(input: $input) {\n    game {\n      id\n      self {\n        follow {\n          followedAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "FollowGamesModal_Games": {
        "hash": "621ecd4a75c2771a5a04c199852af33b92d55a2fb6d1be9f064b23dbcc496f47",
        "query": "query FollowGamesModal_Games($limit: Int) {\n  games(first: $limit) {\n    edges {\n      node {\n        id\n        name\n        displayName\n        boxArtURL(width: 285, height: 380)\n      }\n    }\n  }\n}\n"
    },
    "FollowingPage_RecommendedChannels": {
        "hash": "cbb0b2c030f93880823b1cd4911f384ddcb4e80154521239871b4ec2d4ed1f75",
        "query": "query FollowingPage_RecommendedChannels($first: Int, $recRequestID: String!, $language: String!, $location: String, $context: RecommendationsContext, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  currentUser {\n    id\n    recommendations {\n      liveRecommendations(first: $first, recRequestID: $recRequestID, language: $language, location: $location, context: $context) {\n        edges {\n          ...recommendationEdge\n        }\n      }\n    }\n  }\n}\n\nfragment recommendationEdge on StreamRecommendationEdge {\n  node {\n    ...stream\n    previewThumbnailProperties {\n      blurReason\n    }\n  }\n  trackingID\n}\n"
    },
    "FollowedStreams": {
        "hash": "7730d3f7eeee231707a05518313bf8a0155df8592ade9b608f1d7d7b19a7505b",
        "query": "query FollowedStreams($userID: ID!, $limit: Int!) {\n  followedUpcomingStreams(userID: $userID, first: $limit) {\n    edges {\n      node {\n        id\n        title\n        startAt\n        categories {\n          id\n          slug\n          displayName\n        }\n        hasReminder\n        baseSegmentID\n        repeatEndsAfterCount\n        channel {\n          id\n          owner {\n            id\n            displayName\n            login\n            isPartner\n            profileImageURL(width: 50)\n            primaryColorHex\n            bannerImageURL\n            subscriptionProducts {\n              id\n              emotes {\n                id\n                order\n                subscriptionTier\n                token\n                assetType\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "FollowedStreamsContinueWatching": {
        "hash": "d93f9d1b4ae8127066f204ae2497e23feb4508b1da67e3d12a375a87b00438b0",
        "query": "query FollowedStreamsContinueWatching($limit: Int, $includePreviewBlur: Boolean) {\n  currentUser {\n    id\n    viewedVideos(first: $limit) {\n      edges {\n        ...ContinueWatchingViewedVideoEdge\n      }\n    }\n  }\n}\n\nfragment ContinueWatchingViewedVideoEdge on ViewedVideosEdge {\n  history {\n    position\n    updatedAt\n  }\n  node {\n    ...PreviewCardVideo\n  }\n}\n"
    },
    "FollowingGames_CurrentUser": {
        "hash": "52b46c33e985f1000419ac94e1dca1ec2be4efc2b538a6b2ee79fa9df387595a",
        "query": "query FollowingGames_CurrentUser($limit: Int, $type: FollowedGamesType) {\n  currentUser {\n    id\n    followedGames(first: $limit, type: $type) {\n      nodes {\n        id\n        slug\n        name\n        displayName\n        boxArtURL(width: 285, height: 380)\n        viewersCount\n        tags(tagType: CONTENT) {\n          ...tagFragment\n        }\n        originalReleaseDate\n      }\n    }\n  }\n}\n"
    },
    "FollowedIndex_CurrentUser": {
        "hash": "f0356fc910300a572681560489e20f66296155ad3457bf0c7645fc7047651ba7",
        "query": "query FollowedIndex_CurrentUser() {\n  currentUser {\n    id\n  }\n}\n"
    },
    "FollowedIndex_FollowCount": {
        "hash": "846bd509134419c87eac2a9ffc8283b888d45ddfab307e0b36d27efc828f5025",
        "query": "query FollowedIndex_FollowCount() {\n  currentUser {\n    id\n    follows {\n      totalCount\n    }\n  }\n}\n"
    },
    "FollowingLive_CurrentUser": {
        "hash": "f32f292df462f65da7b0662d30a4b9ba4401efdd38872cb0f106aadeb7c18b7d",
        "query": "query FollowingLive_CurrentUser($limit: Int, $cursor: Cursor, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  currentUser {\n    id\n    follows {\n      totalCount\n    }\n    followedLiveUsers(first: $limit, after: $cursor, includeRestricted: [SUB_ONLY_LIVE, OWL_ALL_ACCESS_PASS]) {\n      edges {\n        node {\n          ...liveChannelFragment\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "FollowedVideos_CurrentUser": {
        "hash": "209aee6e61116340c53e8f9bee4d7d8464c7812588668249e64ed670b386c3ed",
        "query": "query FollowedVideos_CurrentUser($limit: Int, $cursor: Cursor, $includePreviewBlur: Boolean) {\n  currentUser {\n    id\n    follows {\n      totalCount\n    }\n    followedVideos(first: $limit, after: $cursor, sort: TIME) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        ...VideoEdge\n      }\n    }\n  }\n}\n"
    },
    "PauseRaidsSettings": {
        "hash": "5ac953f6b9b96ab2867261a29650f70a6cad7e7dd6594b2a1cea4ccaec5e7013",
        "query": "query PauseRaidsSettings($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    raidSettings {\n      isAllowingRaids\n      pausedUntil\n    }\n  }\n}\n"
    },
    "addAuthorizedStreamer": {
        "hash": "1cf24eadc6f579d21bc9b76e2d11f3c91a296eb9228743e21a1b62a605404f2f",
        "query": "mutation addAuthorizedStreamer($input: AddStreamAuthorizedUserInput!) {\n  addStreamAuthorizedUser(input: $input) {\n    channel {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "deleteAuthorizedStreamer": {
        "hash": "814b992ba0e9624a7e0ef858afafad817b8d442f77f13a04abd0c49ab30312a0",
        "query": "mutation deleteAuthorizedStreamer($input: DeleteStreamAuthorizedUserInput!) {\n  deleteStreamAuthorizedUser(input: $input) {\n    channel {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "AuthorizedStreamersPage": {
        "hash": "fceb3b8937563653c021648d8e3374a0d4dba631ace7d69de9a0483b09d4c107",
        "query": "query AuthorizedStreamersPage($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    channel {\n      id\n      videoStreamSettings {\n        authorizedEmails\n      }\n    }\n  }\n}\n"
    },
    "DevBountyBoardDashboard_UserCompanySettings": {
        "hash": "00b83cf5b2ec62be0991593bb920b91d3347dd7ee6ed7bd73b977d13a43f2af2",
        "query": "query DevBountyBoardDashboard_UserCompanySettings($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    brandPortalSettings {\n      isEnabled\n    }\n  }\n}\n"
    },
    "ResetUsername": {
        "hash": "5875ed257bd51c33b0e9b906e409aaff0891c2b19576701e1c330a0b1139b7b7",
        "query": "mutation ResetUsername($input: ResetUsernameInput!) {\n  resetUsername(input: $input) {\n    error {\n      code\n    }\n    login\n  }\n}\n"
    },
    "UpgradeTermsBannerQuery": {
        "hash": "c03a29bff3014465f6542c9a04a8f150d1267cd84e894c7b655310348d565c40",
        "query": "query UpgradeTermsBannerQuery() {\n  currentUser {\n    id\n    login\n    onboardingInvitations {\n      upgrade {\n        id\n        category\n        workflow {\n          id\n          currentStep\n        }\n      }\n    }\n  }\n}\n"
    },
    "testMessageEnforcementQuery": {
        "hash": "b8317ae5b53fd1acfb767016d7ab3d2df45c3939c87262e940dd3c504125f819",
        "query": "query testMessageEnforcementQuery($input: AutoModContentInput!, $channelID: ID!) {\n  automodContent(input: $input) {\n    ...autoModContentFragment\n  }\n  user(id: $channelID) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n  }\n}\n"
    },
    "DeleteFounderBadges": {
        "hash": "2b67545ebc8f2e9e6e21b37bf4580330f688757a57c715221099e48e8f07008a",
        "query": "mutation DeleteFounderBadges($input: DeleteFounderBadgesInput!) {\n  deleteFounderBadges(input: $input) {\n    channel {\n      id\n    }\n    users {\n      id\n    }\n  }\n}\n"
    },
    "HighlightsChatRoom": {
        "hash": "4a323ffedd674aa61338bed2f9d3c2c6a1773fda29ad3f22a195273e12b52dda",
        "query": "query HighlightsChatRoom($channelLogin: String!) {\n  badges {\n    ...badge\n  }\n  user(login: $channelLogin) {\n    id\n    broadcastBadges {\n      ...badge\n    }\n    self {\n      isEditor\n      isModerator\n    }\n  }\n  currentUser {\n    id\n    roles {\n      isGlobalMod\n      isSiteAdmin\n      isStaff\n    }\n  }\n}\n"
    },
    "ExperimentSurvey": {
        "hash": "94352ccbcc51266207a2139cca921c3b9de43303cd2b8aab9384276b96351c4a",
        "query": "query ExperimentSurvey() {\n  experimentSurvey {\n    id\n    questions {\n      id\n      text\n      type\n      choices {\n        id\n        text\n        isVeto\n      }\n    }\n  }\n}\n"
    },
    "BrandLiftSurvey": {
        "hash": "25d8b3a238f7045d93d66c0ca656fd836d7aa352ad1a0d601036d9d92a55f3f4",
        "query": "query BrandLiftSurvey() {\n  brandLiftSurvey {\n    id\n    questions {\n      id\n      text\n      type\n      choices {\n        id\n        text\n        isVeto\n      }\n    }\n  }\n}\n"
    },
    "RecordExperimentSurveyExit": {
        "hash": "6e5b9197d2288b869b56be249002483afb76e6f53220e8392189a23639ad321c",
        "query": "mutation RecordExperimentSurveyExit() {\n  recordExperimentSurveyExit {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RecordExperimentSurveyResponse": {
        "hash": "a9fa930577577809ad56b855babb924bf53262d2e308f4520589d451c48ddf4d",
        "query": "mutation RecordExperimentSurveyResponse($input: RecordExperimentSurveyResponseInput!) {\n  recordExperimentSurveyResponse(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "RecordBrandLiftSurveyResponse": {
        "hash": "a033dd2bbb7d696f257f22e67a1aab418f7c58b3dfee21a2474a77d97301a03f",
        "query": "mutation RecordBrandLiftSurveyResponse($input: RecordBrandLiftSurveyResponseInput!) {\n  recordBrandLiftSurveyResponse(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "changeUsername": {
        "hash": "3962e7dcfd37e79a0a45ae804ab0f1a54fb5c8a487639172c8cd40973f7f3ec8",
        "query": "mutation changeUsername($input: ChangeUsernameInput!) {\n  changeUsername(input: $input) {\n    error {\n      code\n    }\n    user {\n      id\n      login\n    }\n  }\n}\n"
    },
    "ChangeUsernameCurrentUser": {
        "hash": "1840ccd98aa8dbe652abc4b2a2403f23d92b5cba237b93cdaa0872c6ef5c26a5",
        "query": "query ChangeUsernameCurrentUser() {\n  currentUser {\n    id\n    login\n  }\n}\n"
    },
    "PendingOrganizationApplication": {
        "hash": "48cd5d8af105b7bca60df7106a0db876de1d23de9fc2e514c49f49d3d36e1b59",
        "query": "query PendingOrganizationApplication() {\n  pendingOrganizationApplication {\n    organizationName\n    status\n  }\n}\n"
    },
    "DJOptIn": {
        "hash": "6795a389cec8e204e9d28ca0e2f0bbb46331534f18b5bff5f0f1456ca78d09ea",
        "query": "mutation DJOptIn($input: OptInDJInput!) {\n  optInDJ(input: $input) {\n    channelID\n  }\n}\n"
    },
    "DJSignup_GetDJState": {
        "hash": "f8873e6e82d5f588f2abe00f816fd3bb0dc34b03c2d081c4ba9531371b3b6027",
        "query": "query DJSignup_GetDJState($channelID: ID) {\n  user(id: $channelID) {\n    id\n    djStatus {\n      programState\n    }\n    djEligibility {\n      isEligible\n      reason\n    }\n  }\n}\n"
    },
    "DevSiteCurrentUser_OauthApps": {
        "hash": "760df10cf89bc183b6b1f3b8a3cf1f59da5af0c93ff631ebe4c818e978ada5d2",
        "query": "query DevSiteCurrentUser_OauthApps($after: Cursor) {\n  oauthApps(after: $after) {\n    edges {\n      cursor\n      node {\n        ...oauthFields\n      }\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "Dashboard_GetEmoteUploadConfig": {
        "hash": "1dae6a12d49cd1daaabef0dacce017ee5db6d3d160807176011569a6867f2b5d",
        "query": "mutation Dashboard_GetEmoteUploadConfig($input: GetEmoteUploadConfigInput!) {\n  getEmoteUploadConfig(input: $input) {\n    ...UploadConfigs\n  }\n}\n"
    },
    "CreateCustomChannelPointsReward": {
        "hash": "ce8ba286acb50ea20034d40f6c4aa63ee770f126b6782c8872dbc77ee2c987c0",
        "query": "mutation CreateCustomChannelPointsReward($input: CreateCommunityPointsCustomRewardInput!) {\n  createCommunityPointsCustomReward(input: $input) {\n    error {\n      code\n      maxRewards\n    }\n    reward {\n      ...customRewardFragment\n    }\n  }\n}\n"
    },
    "CustomRewardByID": {
        "hash": "47dd0b81aaf3b3ab750cad17fafc8cc3021adbedcfcb6adc180afdfb53a6ff89",
        "query": "query CustomRewardByID($login: ID!, $id: ID!) {\n  user(id: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        customReward(id: $id) {\n          ...customRewardFragment\n        }\n        earning {\n          ...earningSettingsFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateCustomChannelPointsReward": {
        "hash": "7d10fa2c328d7bf0f2fe0fcad3033130e4e6c7322a01f202715f3bb4fb2a0517",
        "query": "mutation UpdateCustomChannelPointsReward($input: UpdateCommunityPointsCustomRewardInput!) {\n  updateCommunityPointsCustomReward(input: $input) {\n    error {\n      code\n    }\n    reward {\n      ...customRewardFragment\n    }\n  }\n}\n"
    },
    "DashboardSettingsUserColorDelete": {
        "hash": "ac7f543b6d6c7b7a0b2761d3789fa728c4be0258102c239733e581454bf0c67d",
        "query": "mutation DashboardSettingsUserColorDelete($input: DeleteUserColorsInput!) {\n  deleteUserColors(input: $input) {\n    user {\n      id\n      primaryColorHex\n    }\n  }\n}\n"
    },
    "DashboardSettingsUserColor": {
        "hash": "da438f397f1b1d3f4fe3b8754e1f26ade5df5217e4d214219875cdd3123c5751",
        "query": "query DashboardSettingsUserColor($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    primaryColorHex\n    chatColor\n    videos {\n      edges {\n        node {\n          id\n          previewThumbnailURL(width: 320, height: 180)\n        }\n      }\n    }\n  }\n}\n"
    },
    "DashboardSettingsUserColorUpdate": {
        "hash": "bfe7191d97803d8934da67f74b7ab22e83ca50c65bc7f39ab6af9a9d92a9f6e2",
        "query": "mutation DashboardSettingsUserColorUpdate($input: UpdateUserColorsInput!) {\n  updateUserColors(input: $input) {\n    user {\n      id\n      primaryColorHex\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SunlightHomeCardsPage": {
        "hash": "58137353922d27b1ce0d02a7373693b22d0c66562d638d3369f20d70269558ac",
        "query": "query SunlightHomeCardsPage($channelID: ID, $browserTime: Time, $platform: CreatorHomePlatformType) {\n  creatorHome(channelID: $channelID, browserTime: $browserTime, platform: $platform) {\n    id\n    allCards {\n      ...creatorHomeCardsFragment\n    }\n  }\n}\n"
    },
    "IsInLinkOutExperimentClusterQuery": {
        "hash": "74fad1dcb0c99cdf1794b3ece1ac921649ac796ea77f3c09811932b9ab5cd86d",
        "query": "query IsInLinkOutExperimentClusterQuery($clusterID: ID!, $userID: ID!) {\n  experimentCluster(input: {clusterID: $clusterID, userID: $userID}) {\n    id\n    isEligible\n    experimentGroup\n  }\n}\n"
    },
    "CreatorHomeGetEmoteData": {
        "hash": "c20fff8e9345bec525e4ca959e5b831570116072200c9a59a0e4cb46f38c054d",
        "query": "query CreatorHomeGetEmoteData($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    emoticonPrefix {\n      name\n    }\n    subscriptionProducts {\n      id\n      tier\n      emoteSetID\n      emoteGroups {\n        id\n      }\n    }\n    isInEmoteGoodStanding\n  }\n}\n"
    },
    "DismissCreatorHomeCardCommunityCategory": {
        "hash": "f2c377f38499abfb55d5eaf1b1094a2f59eb614b8edc77f7c32845f9af932402",
        "query": "mutation DismissCreatorHomeCardCommunityCategory($input: DismissCreatorHomeCardCommunityCategoryInput!) {\n  dismissCreatorHomeCardCommunityCategory(input: $input) {\n    identifier\n    error\n  }\n}\n"
    },
    "DismissCreatorHomeCardCommunityChannel": {
        "hash": "a36fab1150c0c6ccf5e6b413823471595f42c5e6e1a5f0243a3fcb9d10ef7ea9",
        "query": "mutation DismissCreatorHomeCardCommunityChannel($input: DismissCreatorHomeCardCommunityChannelInput!) {\n  dismissCreatorHomeCardCommunityChannel(input: $input) {\n    identifier\n    error\n  }\n}\n"
    },
    "DismissCreatorHomeCardFeature": {
        "hash": "4762c16615f467ac29a96cdea364bf83b21c87a411ed6b7274a91d9effa84a51",
        "query": "mutation DismissCreatorHomeCardFeature($input: DismissCreatorHomeCardFeatureInput!) {\n  dismissCreatorHomeCardFeature(input: $input) {\n    identifier\n    error\n  }\n}\n"
    },
    "DismissCreatorHomeCard": {
        "hash": "c181eb2a882629c776e12b02730ce34ab7ef499cd9b0ee28592288f79d1f674e",
        "query": "mutation DismissCreatorHomeCard($input: DismissCreatorHomeCardInput!) {\n  dismissCreatorHomeCard(input: $input) {\n    identifier\n    error\n  }\n}\n"
    },
    "CreatorHome_StartCommunityChallenge": {
        "hash": "32b0890e3ff34a980630300f3c64f01c9a4363dd0e0ff62f9a2e62557b942a2f",
        "query": "mutation CreatorHome_StartCommunityChallenge($input: UpdateCommunityPointsCommunityGoalInput!) {\n  updateCommunityPointsCommunityGoal(input: $input) {\n    error {\n      code\n    }\n    goal {\n      id\n      status\n      title\n      type\n    }\n  }\n}\n"
    },
    "CreatorHomeCardsByIds": {
        "hash": "7f4419709d1eb8ebaa0c1b25b8bdf43822db0280af0a8b288b3b272d7ddb95c1",
        "query": "query CreatorHomeCardsByIds($channelID: ID, $browserTime: Time, $platform: CreatorHomePlatformType, $cardIDs: [ID!]) {\n  creatorHome(channelID: $channelID, browserTime: $browserTime, platform: $platform) {\n    id\n    cards(cardIDs: $cardIDs) {\n      identifier\n      ...creatorHomeCardsFragment\n    }\n  }\n}\n"
    },
    "SunlightHomePageCards": {
        "hash": "4dde67401b247debf393b0de358ab7c23890a1a23e116b8ca1694653b0b99c40",
        "query": "query SunlightHomePageCards($channelID: ID, $browserTime: Time, $platform: CreatorHomePlatformType) {\n  creatorHome(channelID: $channelID, browserTime: $browserTime, platform: $platform) {\n    id\n    clusters {\n      id\n    }\n    panels {\n      type\n      cards {\n        ...creatorHomeCardsFragment\n      }\n    }\n  }\n}\n"
    },
    "CreatorHomeUploadProfilePictureModal": {
        "hash": "c04a84ebff79ab98e709f79ddd8740d2756470c8d8b8e3d3ce94b33652724017",
        "query": "query CreatorHomeUploadProfilePictureModal($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    profileImageURL(width: 150)\n  }\n}\n"
    },
    "ChannelTrailerSelect": {
        "hash": "d28d38652f0609ea18118a29328f484319a2a7d470e2a1808e923d044e970f3d",
        "query": "fragment trailerSetupVideo on Video {\n  id\n  createdAt\n  lengthSeconds\n  previewThumbnailURL(height: 360, width: 640)\n  title\n}\n\nfragment trailerSetupVideos on VideoConnection {\n  totalCount\n  edges {\n    node {\n      ...trailerSetupVideo\n    }\n  }\n}\n\nquery ChannelTrailerSelect($channelLogin: String!, $limit: Int!, $cursor: Cursor) {\n  user(login: $channelLogin) {\n    id\n    videos(first: $limit, after: $cursor, type: UPLOAD, options: {maxLengthSeconds: 61}) {\n      ...trailerSetupVideos\n    }\n  }\n}\n"
    },
    "GenerateAnimatedEmote": {
        "hash": "cad5be2a7b91f62818d20a4fbef69ce57eec08f830c7db9019cbea886794d434",
        "query": "mutation GenerateAnimatedEmote($input: GenerateAnimatedEmoteInput!) {\n  generateAnimatedEmote(input: $input) {\n    ...AnimatedEmotesPayload\n  }\n}\n"
    },
    "PublishSubscriptionEmote": {
        "hash": "93b3f89cabed6526fb108d8f0ce4001ffa2098655c791310e04acc267676c171",
        "query": "mutation PublishSubscriptionEmote($input: PublishSubscriptionEmoteInput!) {\n  publishSubscriptionEmote(input: $input) {\n    emote {\n      ...emotesSettingsEmote\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CollectionCreator_AddCollectionItem": {
        "hash": "b18ed2aed80f0e6b8924dbac193d0042aa30420bf1fd8469a71fd8834ae1e08c",
        "query": "mutation CollectionCreator_AddCollectionItem($input: AddCollectionItemInput!) {\n  addCollectionItem(input: $input) {\n    collection {\n      id\n      thumbnailURL(width: 80, height: 45)\n      lengthSeconds\n    }\n  }\n}\n"
    },
    "CollectionCreator_CreateCollection": {
        "hash": "1e5f486ca7b53575d8672b0b936f0fab0d4375a4f713b76a33c85329205e5e8f",
        "query": "mutation CollectionCreator_CreateCollection($input: CreateCollectionInput!) {\n  createCollection(input: $input) {\n    collection {\n      id\n      title\n    }\n  }\n}\n"
    },
    "CollectionCreator_CurrentUser": {
        "hash": "e1f81362b73d761abd0eda06a6b80119de389b387b6bbe7e5aa4264652c77c13",
        "query": "query CollectionCreator_CurrentUser() {\n  currentUser {\n    id\n  }\n}\n"
    },
    "CollectionsList_AddCollectionItem": {
        "hash": "85bce2ac2edc5cd52f850efd8f43aa034e57b7f27088220331791c99c2e51089",
        "query": "mutation CollectionsList_AddCollectionItem($input: AddCollectionItemInput!) {\n  addCollectionItem(input: $input) {\n    collection {\n      id\n    }\n  }\n}\n"
    },
    "CollectionList_Collections": {
        "hash": "3525555b6dd184b7cb444a5ce292638043b5b05eb4daf374f49a55f38b615ea8",
        "query": "query CollectionList_Collections($channelID: ID!, $after: Cursor) {\n  user(id: $channelID) {\n    id\n    collections(first: 15, after: $after, options: {includeEmpty: true}) {\n      edges {\n        cursor\n        node {\n          ...CollectionsListCollection\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "CollectionList_CollectionsWithVideoID": {
        "hash": "192847620e268403166c82225465333804e2bfdac203c3d92df4267624b401d6",
        "query": "query CollectionList_CollectionsWithVideoID($channelID: ID!, $videoID: ID!) {\n  user(id: $channelID) {\n    id\n    collections(first: 100, options: {withVideoID: $videoID}) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n"
    },
    "CollectionsList_RemoveCollectionItem": {
        "hash": "9f76acf3ef8a5a117ff8c37fa559e613949f55f372aa0899627128081c02c802",
        "query": "mutation CollectionsList_RemoveCollectionItem($input: RemoveCollectionItemInput!) {\n  removeCollectionItem(input: $input) {\n    collection {\n      id\n    }\n  }\n}\n"
    },
    "VideoFieldEditor__UpdateContentTags": {
        "hash": "dc0ee69ea25d758fc782359161d62422f179e33e3d54ddaca378c7008f4064bf",
        "query": "mutation VideoFieldEditor__UpdateContentTags($input: UpdateContentTagsInput!) {\n  updateContentTags(input: $input) {\n    content {\n      ... on Video {\n        id\n        contentTags {\n          ...contentTag\n        }\n      }\n      ... on Stream {\n        id\n      }\n      ... on Game {\n        id\n      }\n      ... on Clip {\n        id\n      }\n      ... on User {\n        id\n      }\n    }\n  }\n}\n"
    },
    "VideoManagerActions_CreateVideoThumbnailUploadRequest": {
        "hash": "8c064b43c14358e0291c30fdabd1cf43677e3919b7ca8dbce628152ec0a13b23",
        "query": "mutation VideoManagerActions_CreateVideoThumbnailUploadRequest($input: CreateVideoThumbnailUploadRequestInput!) {\n  createVideoThumbnailUploadRequest(input: $input) {\n    url\n  }\n}\n"
    },
    "VideoManagerActions_CreateVideoAppeal": {
        "hash": "b6635340a31ce079f583bc0e4d0754e367b180182937f79cf58b62d0565918d9",
        "query": "mutation VideoManagerActions_CreateVideoAppeal($input: CreateVideoAppealInput!) {\n  createVideoAppeal(input: $input) {\n    videoID\n  }\n}\n"
    },
    "VideoManagerActions_DeleteVideoThumbnail": {
        "hash": "5294e14453b60403c4d5d550e63659ba28d91bfb0eca7f9339e6a194ad03512f",
        "query": "mutation VideoManagerActions_DeleteVideoThumbnail($input: DeleteVideoThumbnailInput!) {\n  deleteVideoThumbnail(input: $input) {\n    video {\n      id\n      thumbnailURLs\n      previewThumbnailURL\n    }\n  }\n}\n"
    },
    "VideoManagerActions_DeleteAllChannelVideos": {
        "hash": "3ca5291a3d582a812019084b3efb0a20b1d00862466b52bea6efe96ff4a1e91d",
        "query": "mutation VideoManagerActions_DeleteAllChannelVideos($input: DeleteAllChannelVideosInput!) {\n  deleteAllChannelVideos(input: $input) {\n    status {\n      code\n    }\n  }\n}\n"
    },
    "VideoManagerActions_DeleteVideos": {
        "hash": "88e50546ff1fecf809d367918c79bf207442866e53d561e43b2acc6bafe2bef9",
        "query": "mutation VideoManagerActions_DeleteVideos($input: DeleteVideosInput!) {\n  deleteVideos(input: $input) {\n    videos {\n      id\n    }\n  }\n}\n"
    },
    "VideoManagerActions_UpdateAllChannelVideosViewability": {
        "hash": "e5872a14fedc99ccfb5571dcea3241e412679e5af409710ce83da01c007198e3",
        "query": "mutation VideoManagerActions_UpdateAllChannelVideosViewability($input: UpdateAllChannelVideosViewabilityInput!) {\n  updateAllChannelVideosViewability(input: $input) {\n    status {\n      code\n    }\n  }\n}\n"
    },
    "VideoManagerActions_UpdateVideo": {
        "hash": "6f1a7d42954c332378d1fb6e09694f0ba5f71e18c45893e0bc92f292eb1c3e07",
        "query": "mutation VideoManagerActions_UpdateVideo($input: UpdateVideoInput!) {\n  updateVideo(input: $input) {\n    video {\n      id\n      scope\n      title\n      description\n      previewThumbnailURL\n      game {\n        id\n        name\n      }\n      language\n    }\n  }\n}\n"
    },
    "VideoManagerActions_UpdateVideosScope": {
        "hash": "9a6a7127211afaa0f73c028a28c22e4a024e7e10052ebb1148f21cabf4d086da",
        "query": "mutation VideoManagerActions_UpdateVideosScope($input: UpdateVideosViewabilityInput!) {\n  updateVideosViewability(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "VideoManagerActions_FetchMutedTracks": {
        "hash": "cc736a0254c4f7d4de1cae7ef064ec9effa7f6a8af0dedd1f6dc981f45ab3d4c",
        "query": "fragment FlaggedTrack on FlaggedTrack {\n  appeal {\n    id\n    reason\n    status\n  }\n  id\n  muteDurationSeconds\n  performer\n  title\n}\n\nquery VideoManagerActions_FetchMutedTracks($vodID: ID, $includePrivate: Boolean) {\n  video(id: $vodID, options: {includePrivate: $includePrivate}) {\n    id\n    muteInfo {\n      tracks {\n        ...FlaggedTrack\n      }\n    }\n  }\n}\n"
    },
    "VideoManagerActions_FetchVideo": {
        "hash": "ea74065b04399b1244e847781ebcd9af2e06b3fe86c565eb9d75af3fa4bad153",
        "query": "query VideoManagerActions_FetchVideo($videoID: ID!) {\n  video(id: $videoID, options: {includePrivate: true}) {\n    ...videoManagerVideo\n  }\n}\n"
    },
    "VideoManagerQuery_ChannelVideos": {
        "hash": "642627471345d8b60a7d81d738d12e1127ab0defe1a9bda47528b83971efb818",
        "query": "query VideoManagerQuery_ChannelVideos($id: ID!, $first: Int, $after: Cursor, $statuses: [VideoStatus!], $types: [BroadcastType!], $sort: VideoSort) {\n  user(id: $id) {\n    id\n    login\n    channel {\n      id\n      managedVideos(first: $first, after: $after, statuses: $statuses, types: $types, sort: $sort) {\n        totalCount\n        edges {\n          node {\n            ...videoManagerVideo\n          }\n          cursor\n        }\n      }\n    }\n  }\n}\n"
    },
    "VideoManagerQuery_ChannelVideosV2": {
        "hash": "22d12a0d44d438cf830478fce173bde326c28da328c53213ef0396b4fa638939",
        "query": "query VideoManagerQuery_ChannelVideosV2($id: ID!, $after: Cursor, $types: [BroadcastType!], $sort: VideoSort, $limit: Int, $options: VideoConnectionOptionsInput) {\n  user(id: $id) {\n    id\n    login\n    videos(first: $limit, after: $after, types: $types, sort: $sort, options: $options) {\n      totalCount\n      edges {\n        node {\n          ...videoManagerVideo\n        }\n        cursor\n      }\n    }\n  }\n}\n"
    },
    "VideoManagerQuery_StorageQuota": {
        "hash": "878d4204b8629d42f56f2ea52f4dcee574bee70adf0f34135ba24cea7f88b915",
        "query": "query VideoManagerQuery_StorageQuota($id: ID!) {\n  user(id: $id) {\n    id\n    videoStorageQuota {\n      usageInSeconds\n      limitInSeconds\n    }\n  }\n}\n"
    },
    "VideoManagerActions_VideoManagerProperties": {
        "hash": "7a7941952f965245a86a53e2038489e2d5092adf24c48a4a24ffaf8ba3a16c39",
        "query": "query VideoManagerActions_VideoManagerProperties($id: ID!) {\n  user(id: $id) {\n    id\n    accountConnections {\n      youtube {\n        channelURL\n      }\n    }\n  }\n}\n"
    },
    "CompleteVideoUpload": {
        "hash": "819e8ce4addf46a9137e9a1b628fb069dc6fa8e4f2fcbbba66ae0a5cf1e876a6",
        "query": "mutation CompleteVideoUpload($input: CompleteVideoUploadInput!) {\n  completeVideoUpload(input: $input) {\n    video {\n      ...videoManagerVideo\n    }\n    owner {\n      id\n    }\n    channel {\n      id\n    }\n    status\n    createdAt\n    lastUpdatedAt\n  }\n}\n"
    },
    "CreateVideoUploadParts": {
        "hash": "55b14088762d8c51c8ba67e4bd81b7f1d8a949b8ba16766131179efbd5b82214",
        "query": "mutation CreateVideoUploadParts($input: CreateVideoUploadPartsInput!) {\n  createVideoUploadParts(input: $input) {\n    video {\n      ...videoManagerVideo\n    }\n    startIndex\n    urls {\n      index\n      url\n    }\n  }\n}\n"
    },
    "CreateVideoUpload": {
        "hash": "7f4c6d0ed3d344882ffb86a3ec71ead092080935d268836191e2e46112911450",
        "query": "mutation CreateVideoUpload($input: CreateVideoUploadInput!) {\n  createVideoUpload(input: $input) {\n    video {\n      ...videoManagerVideo\n    }\n    owner {\n      id\n    }\n    channel {\n      id\n    }\n    status\n    createdAt\n    lastUpdatedAt\n  }\n}\n"
    },
    "SubmitAppeal__CurrentUser": {
        "hash": "1666b1d14eef7d9f21cbcaa5781ab74d232340c85a27b2b2dcc68b8e33954928",
        "query": "query SubmitAppeal__CurrentUser() {\n  currentUser {\n    id\n    login\n  }\n}\n"
    },
    "EditVideoPropertiesModal_Video": {
        "hash": "48083402341b6a1005b75b65b87c9d608c9afc7b04fb2f7f4375cf8cdbc41cc1",
        "query": "query EditVideoPropertiesModal_Video($videoID: ID!) {\n  video(id: $videoID, options: {includePrivate: true}) {\n    ...editVideoPropertiesModalVideo\n  }\n}\n"
    },
    "EditVideoPropertiesModal_UpdateVideo": {
        "hash": "7a7623a588f66c88b7b49a884f87233a90fc6c9bc273b7da761bcac98926071f",
        "query": "mutation EditVideoPropertiesModal_UpdateVideo($input: UpdateVideoInput!) {\n  updateVideo(input: $input) {\n    video {\n      id\n      title\n      description\n      previewThumbnailURL\n      game {\n        id\n        name\n      }\n      language\n    }\n  }\n}\n"
    },
    "VideoCard_StreamMarkers": {
        "hash": "5c5e189c5a2cbc1c187cc2bbbe98da709482fe251738724f13130d44f460d249",
        "query": "query VideoCard_StreamMarkers($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    ...streamMarkers\n  }\n}\n"
    },
    "VideoManagerArchiveUpsell_Channel": {
        "hash": "e7793a8345798376dcc733605c03fb134eb9a295cd8d1b7f3634547ca938cf71",
        "query": "query VideoManagerArchiveUpsell_Channel($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n    videoStreamSettings {\n      shouldArchiveVODs\n    }\n  }\n}\n"
    },
    "YoutubeExportModal_ExportVideoToYoutube": {
        "hash": "77f773684bb274219bd9c1a0752324ccc336e858ac50a338046774c8474ce728",
        "query": "mutation YoutubeExportModal_ExportVideoToYoutube($input: ExportVideoToYoutubeInput!) {\n  exportVideoToYoutube(input: $input) {\n    video {\n      id\n    }\n  }\n}\n"
    },
    "VideoManager_User": {
        "hash": "b1b540bda216fff9e8eab1f069e301c37631d087ef997af200c969d8b06c00e1",
        "query": "query VideoManager_User($login: String!) {\n  currentUser {\n    ...videoManagerCurrentUserFragment\n  }\n  requestInfo {\n    countryCode\n  }\n  user(login: $login) {\n    ...videoManagerUserFragment\n  }\n}\n\nfragment videoManagerSubscriptionProduct on SubscriptionProduct {\n  id\n  name\n  tier\n}\n\nfragment videoManagerUserFragment on User {\n  id\n  login\n  displayName\n  isEmailVerified\n  roles {\n    isAffiliate\n    isPartner\n    isSiteAdmin\n    isStaff\n    isParticipatingDJ\n  }\n  self {\n    isEditor\n  }\n  channel {\n    id\n    self {\n      permissions\n    }\n    trailer {\n      video {\n        ...videoManagerVideo\n      }\n    }\n  }\n  subscriptionProducts {\n    ...videoManagerSubscriptionProduct\n  }\n}\n\nfragment videoManagerCurrentUserFragment on User {\n  id\n  login\n  displayName\n  hasPrime\n  hasTurbo\n  channel {\n    id\n    videoStreamSettings {\n      shouldArchiveVODs\n    }\n  }\n  roles {\n    isSiteAdmin\n    isStaff\n    isAffiliate\n    isPartner\n  }\n}\n"
    },
    "VideoManager_VideoDownload": {
        "hash": "27c83c84563b12b6a13fb345ae08b4cd4f4c8bde93dfa80680e498bf302a7eed",
        "query": "query VideoManager_VideoDownload($videoID: ID) {\n  video(id: $videoID, options: {includePrivate: true}) {\n    id\n    download {\n      status\n      url\n    }\n  }\n}\n"
    },
    "AdBreaksInSecondsTimeseriesStats_StreamSummary": {
        "hash": "229801879d2b6c3e7d843ca0a8b34ad2ac757e58c59f3ec7a33a1ee5f6356a78",
        "query": "query AdBreaksInSecondsTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      adBreaksInSeconds {\n        value\n        timestamp\n      }\n    }\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: 1) {\n      items {\n        adBreaksInSecondsString\n      }\n    }\n  }\n}\n"
    },
    "ChatMessagesTimeseriesStats_StreamSummary": {
        "hash": "e2052304212ec22e31e30cb63836887551201482ef413f96c01302750ecc9a21",
        "query": "query ChatMessagesTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      chatMessages {\n        value\n        timestamp\n      }\n    }\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: 1) {\n      items {\n        totalChatMessagesString\n      }\n    }\n  }\n}\n"
    },
    "ChattersTimeseriesStats_StreamSummary": {
        "hash": "e6aab5f2fe8aa8f10a57da187b6a1492e8698d8e986dffa858a64f07de9a36db",
        "query": "query ChattersTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      uniqueChatters {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ClipViewsTimeseriesStats_StreamSummary": {
        "hash": "d5ba674080ee9fd261af8537ed48beed6dae50ad0851534801f8e45f22acd2ee",
        "query": "query ClipViewsTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      clipViews {\n        value\n        timestamp\n      }\n    }\n    creatorMetricsByInterval(startAt: $startAt, endAt: $endAt, numberOfIntervals: 1) {\n      items {\n        clipViewsString\n      }\n    }\n  }\n}\n"
    },
    "ClipsCreatedTimeseriesStats_StreamSummary": {
        "hash": "2fedc13e4fc6c987462d04f8502684784d5ef96560efe44859cf3cb055cc6a68",
        "query": "query ClipsCreatedTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      clipsCreated {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "FollowsTimeseriesStats_StreamSummary": {
        "hash": "5dedbeb4e8a9a00506ad271308c53f3b68fa1d4997ccb0b2aba008f1130570d1",
        "query": "query FollowsTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      follows {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "LiveViewsTimeseriesStats_StreamSummary": {
        "hash": "7f463627ed05c0bcd3960a22db4bf911db2d3e0c6de1ee9c58307cfaf6d33ba7",
        "query": "query LiveViewsTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      liveViews {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "NewSubscriptionsTimeseriesStats_StreamSummary": {
        "hash": "a63dca8bf5f9ef03b5669866551bcaa733f298505274643e5b4b318ccf52e9bf",
        "query": "query NewSubscriptionsTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      newSubscriptions {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "ConcurrentViewersTimeseriesStats_StreamSummary": {
        "hash": "e26d7fa80ca6cc7861c463d76fa54ddadb1fd220a4531e95f04862553e5d8c09",
        "query": "query ConcurrentViewersTimeseriesStats_StreamSummary($channelID: ID!, $startAt: Time!, $endAt: Time!, $timeZone: String!, $granularity: Granularity) {\n  user(id: $channelID) {\n    id\n    login\n    timeseriesStats(startAt: $startAt, endAt: $endAt, timeZone: $timeZone, granularity: $granularity) {\n      granularity\n      averageViewers {\n        value\n        timestamp\n      }\n    }\n  }\n}\n"
    },
    "StreamSummary_NoVodErrorConditions": {
        "hash": "362694f5433ea32c8a9b679d853697d601fdf7f7c2abe2810423db287968f3c1",
        "query": "query StreamSummary_NoVodErrorConditions($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    hasPrime\n    hasTurbo\n    channel {\n      id\n      videoStreamSettings {\n        shouldArchiveVODs\n      }\n    }\n  }\n}\n"
    },
    "QuickActionsCreateStreamMarker": {
        "hash": "254784908bcaacf06c9350a553f77a25c70f7f3b592a8af39953a59261eb51f2",
        "query": "mutation QuickActionsCreateStreamMarker($input: CreateVideoBookmarkInput!) {\n  createVideoBookmark(input: $input) {\n    videoBookmark {\n      id\n      positionSeconds\n    }\n  }\n}\n"
    },
    "HighlighterPage_Video": {
        "hash": "7062fb8f1ef5341ccd1ed6d3beaa546e9bcd50af761824afdcab68d971242376",
        "query": "query HighlighterPage_Video($videoID: ID!) {\n  video(id: $videoID) {\n    id\n    broadcastType\n    lengthSeconds\n    owner {\n      displayName\n      id\n      login\n    }\n    previewThumbnailURL(width: 160, height: 90)\n    publishedAt\n    viewCount\n    ...videoFields\n  }\n  currentUser {\n    id\n    roles {\n      isStaff\n      isAffiliate\n      isPartner\n    }\n  }\n}\n"
    },
    "HighlighterEditors": {
        "hash": "1b27093d5fec5e90f2ea3a9df6f2d0b16a907cf140865b488d2ce92b816c641e",
        "query": "query HighlighterEditors($channelID: ID!, $includeEditors: Boolean!) {\n  user(id: $channelID) {\n    id\n    editors @include(if: $includeEditors) {\n      edges {\n        node {\n          id\n        }\n      }\n    }\n  }\n}\n"
    },
    "HighlighterClips": {
        "hash": "fc621a61287c6a04ac4c513a0bc0cf71ae1f3ecc6f02f1667343d72bc709ac4f",
        "query": "query HighlighterClips($videoID: ID!, $allClipUserIDs: [ID!], $cursor: Cursor) {\n  video(id: $videoID) {\n    id\n    clips(curatorIDs: $allClipUserIDs, first: 100, after: $cursor) {\n      edges {\n        ...HighlighterClipEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    topClips(first: 20) {\n      edges {\n        ...HighlighterClipEdge\n      }\n    }\n  }\n}\n\nfragment HighlighterClipEdge on ClipEdge {\n  node {\n    id\n    slug\n    title\n    curator {\n      id\n      displayName\n    }\n    videoOffsetSeconds\n    createdAt\n  }\n  cursor\n}\n"
    },
    "HighlighterMarkers": {
        "hash": "89f21c7bbb96e818c07b6b72a098aa1e42cdc696c35c8845e92e788dfecdad49",
        "query": "query HighlighterMarkers($videoID: ID!, $cursor: Cursor) {\n  video(id: $videoID) {\n    id\n    bookmarks(first: 100, after: $cursor) {\n      edges {\n        ...HighlighterMarkersBookmarkEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment HighlighterMarkersBookmarkEdge on VideoBookmarkEdge {\n  node {\n    id\n    positionSeconds\n    user {\n      id\n      displayName\n    }\n    description\n  }\n  cursor\n}\n"
    },
    "HighlighterVODSelector_SearchCreatorVideos": {
        "hash": "6990875d655beb89cbc5720533b494080db17cc2af64a91f184235533129cf2d",
        "query": "query HighlighterVODSelector_SearchCreatorVideos($creatorLogin: String!, $after: Cursor, $search: VideoConnectionSearchParams) {\n  user(login: $creatorLogin) {\n    id\n    login\n    searchVideos(first: 20, after: $after, search: $search) {\n      edges {\n        cursor\n        node {\n          id\n          lengthSeconds\n          previewThumbnailURL(width: 160, height: 90)\n          publishedAt\n          title\n          broadcastType\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "Highlighter_StitchHighlights": {
        "hash": "6a210ae4708d894a334333d7a8750b40a325cd10aa1f094a3ca6fb09f6c8337e",
        "query": "mutation Highlighter_StitchHighlights($input: CreateMultiVideoHighlightInput!) {\n  createMultiVideoHighlight(input: $input) {\n    highlight {\n      title\n      id\n      lengthSeconds\n    }\n  }\n}\n"
    },
    "UserIdByLogin": {
        "hash": "9a4ea702fd67138ee8a506d87466f94b09deb0225605ca0ed8d3f06b9d9a6dc2",
        "query": "query UserIdByLogin($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n  }\n}\n"
    },
    "DashboardSettingsPage": {
        "hash": "35dee7a1914c49fb5d5ed2a71a46a666e9b452114bac74c19a7056312366df39",
        "query": "query DashboardSettingsPage() {\n  currentUser {\n    id\n  }\n}\n"
    },
    "updateRaidSettingsV2": {
        "hash": "eee3422595d7ba0b07e2087ebfa9ebc5d31e65c44e7492a6a81aea23776d7c6c",
        "query": "mutation updateRaidSettingsV2($input: UpdateRaidSettingsInput!) {\n  updateRaidSettings(input: $input) {\n    user {\n      id\n      raidSettings {\n        ...RaidSettingsV2\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "DashboardSettingsRaidSettingsV2": {
        "hash": "eb53e76b7aff08854e91db6ca5f31a5c4e0aeb4d56ba22ef1d26d0249930580d",
        "query": "query DashboardSettingsRaidSettingsV2($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    raidSettings {\n      ...RaidSettingsV2\n    }\n  }\n}\n"
    },
    "ChatSettings_ChannelModes": {
        "hash": "fdfb3857a46aba3812b4cdd0879e40ac0cd02ace13cf91029e2df4c70d8e56f4",
        "query": "query ChatSettings_ChannelModes($login: String!) {\n  user(login: $login) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n  }\n}\n"
    },
    "PartnerPlusQuery": {
        "hash": "e43f7a553bfea1e8c143c849ae3807c9841a2d6adfdc279429155d2dcf7db1f1",
        "query": "query PartnerPlusQuery($channelID: ID!, $endDate: Time!, $contractIdentifier: String!) {\n  plusStatus(channelID: $channelID, endDate: $endDate) {\n    partnerPlusProgram {\n      level\n      threshold\n      qualification {\n        blockEndDate\n        blockStartDate\n        disallowedReason\n        endDate\n        progress {\n          year\n          month\n          count\n          qualifiedLevel\n        }\n      }\n      widgetSetting\n      hasMetCriteria\n    }\n  }\n  creatorTermsStatus(contractIdentifier: $contractIdentifier, channelID: $channelID) {\n    contract {\n      markdown\n      version\n      language\n      metadata {\n        key\n        value\n      }\n    }\n    isAccepted\n  }\n}\n"
    },
    "ManagePlusGoalPrompt": {
        "hash": "c2afe31bf3821087dbbdf6dab1855be36adf44bc35ea77ef940bfb4379d9a5c3",
        "query": "query ManagePlusGoalPrompt($channelID: ID!) {\n  plusStatus(channelID: $channelID) {\n    partnerPlusProgram {\n      widgetSetting\n    }\n  }\n}\n"
    },
    "PartnerPlusPageQuery": {
        "hash": "233896d3c579c6332e72b425edd7c187e4cd5d55ba571372d9f3dc319169c905",
        "query": "query PartnerPlusPageQuery($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n  }\n}\n"
    },
    "DeleteOauthApp": {
        "hash": "edb67caadb48c52f868b0ed07a6ef706a99c85671f12f408a81caee4c2c56adb",
        "query": "mutation DeleteOauthApp($input: DeleteOauthAppInput!) {\n  deleteOauthApp(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CelebrationContextChannelID": {
        "hash": "8aa658721fc2bb061bf95d51d1ccbbc6c9578bd5e0cf39f5aaf11c0ab44a84eb",
        "query": "query CelebrationContextChannelID($channelLogin: String!) {\n  channel(name: $channelLogin) {\n    id\n  }\n}\n"
    },
    "CelebrationEmotes": {
        "hash": "0fd9828d54babf3ab428bb078b9627b4617577742b3a3b6e6a3b629b719a55cd",
        "query": "query CelebrationEmotes($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    subscriptionProducts {\n      id\n      emoteGroups {\n        id\n        emotes {\n          id\n          setID\n          token\n          assetType\n        }\n      }\n      tier\n    }\n  }\n}\n"
    },
    "DevMutateCloneExtensionDiscoveryManifest": {
        "hash": "462133990c8672fa5883a0625ad4dea43e64b654a94ea6334379a73b783ba8fa",
        "query": "mutation DevMutateCloneExtensionDiscoveryManifest($input: CloneExtensionDiscoveryDataInput!) {\n  cloneExtensionDiscoveryData(input: $input) {\n    error\n    manifest {\n      id\n      version\n      discoveryManifest {\n        ...extensionDiscoveryManifest\n      }\n    }\n  }\n}\n"
    },
    "DevMutateCloneExtensionManifest": {
        "hash": "545f40792749fe66775e3e844355ac400c15e96b4ff91d43557d1947cf2483c1",
        "query": "mutation DevMutateCloneExtensionManifest($input: CloneExtensionManifestInput!) {\n  cloneExtensionManifest(input: $input) {\n    error\n    manifest {\n      ...extensionManifest\n    }\n  }\n}\n"
    },
    "DevExtensionVersionsGetManifests": {
        "hash": "33da4beaed0920a9ba0095df4575df015cce9f0b47154ef4016ed9c7a9c7f26c",
        "query": "query DevExtensionVersionsGetManifests($id: ID!, $after: Cursor) {\n  extensionManifests(id: $id, after: $after) {\n    edges {\n      cursor\n      node {\n        id\n        version\n        developerManifest {\n          createdAt\n          versionState\n        }\n        discoveryManifest {\n          name\n        }\n        views {\n          component {\n            viewerPath\n          }\n          mobile {\n            viewerPath\n          }\n          videoOverlay {\n            viewerPath\n          }\n          panel {\n            viewerPath\n          }\n        }\n      }\n    }\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n"
    },
    "UnVIPUser": {
        "hash": "8e46f656e3e9b61b10e904af938cc85cfb5dd3891c2d923f6f5d0cbf6d877946",
        "query": "mutation UnVIPUser($input: RevokeVIPInput!) {\n  revokeVIP(input: $input) {\n    channel {\n      id\n    }\n    revokee {\n      id\n      login\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "VIPUser": {
        "hash": "50c18956bb3ad2d316daa066e17b5100a4f0ba9c777190b7162bc00fbdea9d80",
        "query": "mutation VIPUser($input: GrantVIPInput!) {\n  grantVIP(input: $input) {\n    channel {\n      id\n    }\n    grantee {\n      id\n      login\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "Mods": {
        "hash": "06d146dbdd957cbb8a01afe609239d9c72d69576dbd7febb08f082f0a052b4cf",
        "query": "query Mods($login: String!) {\n  user(login: $login) {\n    id\n    mods(first: 100) {\n      edges {\n        node {\n          id\n          login\n        }\n      }\n    }\n  }\n}\n"
    },
    "VIPs": {
        "hash": "d466974c674ceb378a6030f52077a7730ee07439fb4e966e0b7260e8c5a1d4cd",
        "query": "query VIPs($login: String!) {\n  user(login: $login) {\n    id\n    vips(first: 100) {\n      edges {\n        node {\n          id\n          login\n        }\n      }\n    }\n  }\n}\n"
    },
    "CreateVideoBookmark": {
        "hash": "4d11831cacba89c4bd8e6a60f5ad696a78b43431d3cd7872e12aa7a0d834b1aa",
        "query": "mutation CreateVideoBookmark($input: CreateVideoBookmarkInput!) {\n  createVideoBookmark(input: $input) {\n    videoBookmark {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "VideoMarkersChatCommand": {
        "hash": "ff18c3889cf40138bf7147e072d35aa75031ac88eb2796acf37a28e5dee97e5c",
        "query": "query VideoMarkersChatCommand($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      createdAt\n    }\n  }\n}\n"
    },
    "CommercialCommandHandler_ChannelData": {
        "hash": "f4079db918c4092291b72e21064a2ed043a4c27d4410d23dd7cdf8a1a0cb6684",
        "query": "query CommercialCommandHandler_ChannelData($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    roles {\n      isPartner\n      isAffiliate\n    }\n  }\n}\n"
    },
    "Moment_Command_CommunityMomentDetails": {
        "hash": "456258cae6b714d9f37e7802d1896d5084ba7f917165831746a057244e1dbe56",
        "query": "query Moment_Command_CommunityMomentDetails($channelID: ID!) {\n  broadcasterCommunityMomentDetails(channelID: $channelID) {\n    availableMoments\n  }\n}\n"
    },
    "chatCancelRaid": {
        "hash": "e80e410a2b11a03669bd76b2519a38f3448b3312512519c21f4f896462cabad1",
        "query": "mutation chatCancelRaid($input: CancelRaidInput!) {\n  cancelRaid(input: $input) {\n    error {\n      code\n    }\n    raid {\n      id\n    }\n  }\n}\n"
    },
    "chatCreateRaid": {
        "hash": "9f5b4f21272b4b97ded3cc6f2bde15cb7866a2b2c143f1e22a64d8b22e0bc944",
        "query": "mutation chatCreateRaid($input: CreateRaidInput!) {\n  createRaid(input: $input) {\n    error {\n      code\n    }\n    raid {\n      id\n    }\n    notices {\n      isMature\n      hasRestrictedChat\n    }\n  }\n}\n"
    },
    "chatRaidChannelIDs": {
        "hash": "8ed1d75efd921f25807f03f697d2c2db7a21015ce141973ac83b6d8c7cfcdf05",
        "query": "query chatRaidChannelIDs($sourceID: String!, $targetID: String!) {\n  user(login: $sourceID) {\n    id\n  }\n  user(login: $targetID) {\n    id\n  }\n}\n"
    },
    "createShoutout": {
        "hash": "dde5a4032f01e056cac44f49d4897d0614d39211e5be412c56ff92bedead7a62",
        "query": "mutation createShoutout($input: CreateShoutoutInput!) {\n  createShoutout(input: $input) {\n    error\n    cooldownEndsAt\n  }\n}\n"
    },
    "SearchDisplayname": {
        "hash": "3d581fa59e6de29e1cc1bfd72c99d241ebbd1ecd6f8c438c8bd2be1f36250cb7",
        "query": "query SearchDisplayname($query: String!) {\n  searchUsers(userQuery: $query, first: 1) {\n    edges {\n      node {\n        id\n        displayName\n        login\n      }\n    }\n  }\n}\n"
    },
    "UpdateRoomModes": {
        "hash": "cdfcaf4f14b1ca19f2389bc1585c7207e78db821a2cf84b46071089d0005ab43",
        "query": "mutation UpdateRoomModes($input: UpdateRoomModesInput!) {\n  updateRoomModes(input: $input) {\n    room {\n      id\n      modes {\n        slowModeDurationSeconds\n        r9kModeEnabled\n        emotesOnlyModeEnabled\n      }\n    }\n    error {\n      code\n      minimumSlowModeDurationSeconds\n      maximumSlowModeDurationSeconds\n    }\n  }\n}\n"
    },
    "ChatUser": {
        "hash": "56f817442f948db3557e2413e9e33d90790c5aefce42bcde08b92a2d34b25480",
        "query": "query ChatUser($login: String!) {\n  user(login: $login, lookupType: ALL) {\n    id\n  }\n}\n"
    },
    "SendPinnedChatMessage": {
        "hash": "dd55092202d3259e858dd288bfdf12f728b55a3e1fdeda7062f1d9f73cd936bc",
        "query": "mutation SendPinnedChatMessage($input: SendPinnedChatMessageInput!) {\n  sendPinnedChatMessage(input: $input) {\n    pinnedChatMessage {\n      id\n      pinnedMessage {\n        id\n      }\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "WhisperThread": {
        "hash": "6fcf36eacdda6543f1e9a1bcfa649110779165d9b857a4191da337520e60d8fb",
        "query": "query WhisperThread($id: ID!) {\n  whisperThread(id: $id) {\n    id\n    userLastMessageRead {\n      id\n      sentAt\n      __typename\n    }\n    unreadMessagesCount\n    messages(first: 20) {\n      edges {\n        cursor\n        node {\n          id\n          nonce\n          content {\n            content\n            emotes {\n              id\n              emoteID\n              setID\n              from\n              to\n              __typename\n            }\n            __typename\n          }\n          from {\n            id\n          }\n          sentAt\n          editedAt\n          deletedAt\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"
    },
    "DevOnlyEngineTest1": {
        "hash": "e7fa299d4c0ff6bd4449fa650accd869b12f4080dc71c4ff0c049569625552f7",
        "query": "query DevOnlyEngineTest1($first: Int) {\n  games(first: $first) {\n    edges {\n      node {\n        id\n        name\n        boxArtURL(width: 250, height: 300)\n        viewersCount\n      }\n    }\n  }\n}\n"
    },
    "DevOnlyEngineTest2": {
        "hash": "572e0a6925234cf21432f26f6f707fa0153a33b2b609bdd8da5983c4f0d17fe1",
        "query": "query DevOnlyEngineTest2($first: Int) {\n  games(first: $first) {\n    edges {\n      node {\n        id\n        name\n        boxArtURL(width: 250, height: 300)\n      }\n    }\n  }\n}\n"
    },
    "DevOnlyEngineTest3": {
        "hash": "5df142ba1219d62fb2d80f1ecff298bfd8c6922a4affba923f737789777e3746",
        "query": "query DevOnlyEngineTest3($first: Int) {\n  games(first: $first) {\n    edges {\n      node {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "DevOnlySuspenseQuery1": {
        "hash": "03562efcab6d5a931ecec1cb0a684db9c0eeb82b5600325c956bfe4819f42aa3",
        "query": "query DevOnlySuspenseQuery1($first: Int) {\n  games(first: $first) {\n    edges {\n      node {\n        id\n        name\n        boxArtURL(width: 250, height: 300)\n        viewersCount\n      }\n    }\n  }\n}\n"
    },
    "DevOnlySuspenseQuery2": {
        "hash": "d69cdec4052ec56b338de79a6c2312b6e3d7885a94c199638fd2631dcf2cd139",
        "query": "query DevOnlySuspenseQuery2($first: Int) {\n  user(login: \"lirik\") {\n    id\n    clips(first: $first) {\n      edges {\n        cursor\n        node {\n          id\n          slug\n          url\n        }\n      }\n    }\n  }\n}\n"
    },
    "DevOnlyChildGQL": {
        "hash": "2ee33088e2db75cb959296c9071df1e1c3c8575ae019ac0d44b860e36b1db4e5",
        "query": "query DevOnlyChildGQL() {\n  currentUser {\n    id\n    chatColor\n    login\n    displayName\n  }\n}\n"
    },
    "DevOnlyLoadableParent": {
        "hash": "726d8b34afc18f0630a82139e754094c08ab69b74a256501b3fe97dbee556abb",
        "query": "query DevOnlyLoadableParent() {\n  currentUser {\n    id\n    hasPrime\n  }\n}\n"
    },
    "GQLLoadingPage": {
        "hash": "f60cb225aa1b02c0d5f876cf923eac09b8e9ab12817a064156b7dcd23e26b63a",
        "query": "query GQLLoadingPage() {\n  currentUser {\n    id\n    login\n  }\n}\n"
    },
    "Dev_Only_GQL": {
        "hash": "61cfeec3c525d0ae753ece12b28baa5c903f570ea5b15cdf173b231acaba0dbb",
        "query": "query Dev_Only_GQL($shouldSkip: Boolean!) {\n  currentUser {\n    id\n  }\n  currentUser @include(if: $shouldSkip) {\n    id\n  }\n  currentUser @skip(if: $shouldSkip) {\n    id\n  }\n}\n"
    },
    "StoriesForCreators": {
        "hash": "486c20a7ee06f55c3e660f81df85dea4d68aa999bcc3716801e4281b47014390",
        "query": "query StoriesForCreators($first: Int, $after: Cursor, $capabilities: [StoryFeatureCapability!]) {\n  storiesForCreator(first: $first, after: $after, capabilities: $capabilities) {\n    ...StoryConnectionFragment\n  }\n}\n"
    },
    "BrowsePage_AllDirectories": {
        "hash": "40f2f3b326a99c7fb8821837613cddcab3829a112d5dc3efc91b52f77deae2cb",
        "query": "query BrowsePage_AllDirectories($limit: Int, $cursor: Cursor, $options: GameOptions) {\n  games(first: $limit, after: $cursor, options: $options) {\n    edges {\n      ...browsePageDirectoriesWithTagsEdge\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n\nfragment browsePageDirectoriesWithTagsEdge on GameEdge {\n  cursor\n  trackingID\n  node {\n    ...browsePageGame\n  }\n}\n\nfragment browsePageGame on Game {\n  id\n  slug\n  displayName\n  name\n  avatarURL(width: 285, height: 380)\n  viewersCount\n  tags(tagType: CONTENT) {\n    ...tagFragment\n  }\n  originalReleaseDate\n}\n"
    },
    "BrowsePage_Popular": {
        "hash": "52076ea4bf92943c4470ddb32e8b5c250edc376fbca969c5b2b3e4a5da57534a",
        "query": "query BrowsePage_Popular($limit: Int, $cursor: Cursor, $platformType: PlatformType, $options: StreamOptions, $sortTypeIsRecency: Boolean!, $imageWidth: Int, $includeIsDJ: Boolean!) {\n  streams(first: $limit, after: $cursor, platformType: $platformType, options: $options) {\n    edges {\n      ...browsePagePopularStreamsWithTagsEdge\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n"
    },
    "StreamSchedule": {
        "hash": "c51f1c0200963aa23fdea937f2e668deb4ba4390c3cea3740650b1eb2ff58e86",
        "query": "query StreamSchedule($login: String!, $startAt: Time!, $endAt: Time!, $startingWeekday: String, $utcOffsetMinutes: Int) {\n  currentUser {\n    id\n    login\n  }\n  user(login: $login) {\n    id\n    primaryColorHex\n    lastBroadcast {\n      id\n      startedAt\n    }\n    broadcastSettings {\n      id\n      title\n    }\n    stream {\n      id\n      createdAt\n      viewersCount\n      previewImageURL(width: 320, height: 180)\n      game {\n        id\n        slug\n        name\n      }\n    }\n    videos(first: 30, type: ARCHIVE, sort: TIME, options: {searchRangeStartAt: $startAt, searchRangeEndAt: $endAt}) {\n      edges {\n        node {\n          id\n          title\n          createdAt\n          lengthSeconds\n          viewCount\n          previewThumbnailURL(width: 320, height: 180)\n          game {\n            id\n            slug\n            name\n          }\n        }\n      }\n    }\n    channel {\n      id\n      schedule {\n        id\n        nextSegment {\n          id\n          startAt\n        }\n        interruption {\n          startAt\n          endAt\n          reason\n        }\n        segments(startingWeekday: $startingWeekday, utcOffsetMinutes: $utcOffsetMinutes, relativeDate: $startAt) {\n          id\n          baseSegmentID\n          title\n          startAt\n          endAt\n          isCancelled\n          cancelledUntil\n          hasReminder\n          repeatEndsAfterCount\n          categories {\n            id\n            slug\n            name\n            boxArtURL(width: 144, height: 192)\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelScheduleSegment": {
        "hash": "fef0d3e6417ef987c1cebdb80beb3d29b2fa1fe02758a2ecb10740b5b9eb2c08",
        "query": "query ChannelScheduleSegment($idToFind: ID!, $isVodID: Boolean!, $isSegmentID: Boolean!, $relativeDate: Time!, $startingWeekday: ScheduleSegmentDay!) {\n  scheduleSegment(id: $idToFind, options: {relativeDate: $relativeDate, startingWeekday: $startingWeekday}) @include(if: $isSegmentID) {\n    id\n    startAt\n  }\n  video(id: $idToFind) @include(if: $isVodID) {\n    id\n    createdAt\n  }\n}\n"
    },
    "ExtensionQuickActionsStore": {
        "hash": "a77c0e260d401b7db1cc6b5b971585d69a5b3339674943d044992447b119de6c",
        "query": "query ExtensionQuickActionsStore($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    installedExtensions {\n      id\n      extension {\n        id\n        iconURLs {\n          square100\n        }\n        name\n      }\n    }\n  }\n}\n"
    },
    "SunlightChannelQuery": {
        "hash": "8d7573c9293ded777641466a2fca8aad8b4976fcce4ecba4818656a2fa492159",
        "query": "query SunlightChannelQuery($login: String!) {\n  user(login: $login) {\n    id\n  }\n}\n"
    },
    "AccountCheckupEmailQuery": {
        "hash": "819db775fc20dbfd50054e617cfdcc14be45978a948d9d546214fd03a80ddf7c",
        "query": "query AccountCheckupEmailQuery() {\n  currentUser {\n    id\n    email\n  }\n}\n"
    },
    "OneTap_BitsOffers": {
        "hash": "efd4f6995a5735043ababad449388028ffee1b9b577788dc2937b7e7cbdcb787",
        "query": "query OneTap_BitsOffers() {\n  currentUser {\n    id\n    bitsOffers {\n      ...bitsOffer\n    }\n  }\n}\n"
    },
    "RedeemGifts": {
        "hash": "51afa47df8115dcf43d56cabebe64952044da4bbccbe16637467f7edac892ddd",
        "query": "mutation RedeemGifts($input: RedeemGiftsInput!) {\n  redeemGifts(input: $input) {\n    currentUser {\n      id\n    }\n  }\n}\n"
    },
    "CharityDiscoveryPage": {
        "hash": "6555b6259f0cdbcdc5d0a83f6bb37615e5519250f0f1f37214d8efc96581e77e",
        "query": "query CharityDiscoveryPage($channelLogin: String!, $one: ID!, $two: ID!, $three: ID!, $four: ID!) {\n  channel(name: $channelLogin) {\n    id\n  }\n  charity(id: $one) {\n    ...charityCard\n  }\n  charity(id: $two) {\n    ...charityCard\n  }\n  charity(id: $three) {\n    ...charityCard\n  }\n  charity(id: $four) {\n    ...charityCard\n  }\n}\n"
    },
    "CharityDiscoveryPage_SearchCharities": {
        "hash": "03eeca3e507ef12e83b3f0a55367bd5d5ae46f79ef6caadae525a633acc8a398",
        "query": "query CharityDiscoveryPage_SearchCharities($first: Int, $after: Cursor, $search: SearchCharitiesParams!) {\n  searchCharities(first: $first, after: $after, search: $search) {\n    edges {\n      node {\n        ...charityCard\n      }\n      cursor\n    }\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n    }\n    totalCount\n  }\n}\n"
    },
    "TicketDescription": {
        "hash": "8e8b629469f443c5a3516579c6411df7da5545cdc15c075ae3b9ea793104dee2",
        "query": "query TicketDescription($productName: String!, $taxCountry: String) {\n  subscriptionProduct(productName: $productName) {\n    id\n    displayName\n    priceInfo(taxCountry: $taxCountry) {\n      currency\n      exponent\n      id\n      isTaxInclusive\n      price\n      tax\n      total\n    }\n    interval {\n      unit\n    }\n    hasAdFree\n    hasFastChat\n    hasSubonlyVideoArchive\n    tier\n    owner {\n      id\n      displayName\n      login\n      bannerImageURL\n      profileImageURL(width: 300)\n      broadcastBadges {\n        ...badge\n      }\n      subscriptionProducts {\n        id\n        tier\n        emotes {\n          id\n          token\n        }\n      }\n    }\n    giftPromotion {\n      newPrice\n    }\n    self {\n      promotion {\n        newPrice\n      }\n      paidUpgradePromotion {\n        newPrice\n      }\n      benefit {\n        id\n        gift {\n          isGift\n        }\n      }\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "TurboSubscriptionProduct": {
        "hash": "b0c22c7c3038f62d1e56371e6f6fa605bfd8f325a6d4850dce0ed995b251b3e8",
        "query": "query TurboSubscriptionProduct($name: String!) {\n  subscriptionProduct(productName: $name) {\n    id\n    offers {\n      id\n      listing {\n        chargeModel {\n          internal {\n            previewPrice {\n              id\n              currency\n              exponent\n              total\n              discount {\n                total\n              }\n            }\n          }\n        }\n      }\n    }\n    self {\n      benefit {\n        id\n        states {\n          state\n          createdAt\n        }\n        renewsAt\n        pendingSubscription {\n          startsAt\n        }\n        isTurboFreeTrial\n      }\n    }\n  }\n}\n"
    },
    "DoNotRenewSubscription": {
        "hash": "f6110e6dea201c4d68ef76cc82c455813f18b16f562d7f0ccbe79d0be3f44ca8",
        "query": "mutation DoNotRenewSubscription($input: DoNotRenewSubscriptionInput!) {\n  doNotRenewSubscription(input: $input) {\n    subscriptionID\n    errorCode\n  }\n}\n"
    },
    "UnsubscribePage": {
        "hash": "95f426f80fcf615a4e1ab6929338c082469504fb82d034b0ec5845ccd7c08e83",
        "query": "query UnsubscribePage($productName: String!) {\n  subscriptionProduct(productName: $productName) {\n    id\n    owner {\n      id\n      displayName\n    }\n    self {\n      benefit {\n        id\n        originID\n        renewsAt\n        endsAt\n        platform\n        isTurboFreeTrial\n        states {\n          state\n          createdAt\n        }\n      }\n    }\n  }\n}\n"
    },
    "CreateCharityCampaign": {
        "hash": "05163146c6db453a809b9710d3930632c6285a420ad287e86f4ff99cf52be226",
        "query": "mutation CreateCharityCampaign($input: CreateCharityCampaignInput!) {\n  createCharityCampaign(input: $input) {\n    campaign {\n      id\n      goal {\n        id\n      }\n      charities {\n        id\n      }\n      startsAt\n      endsAt\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "FundraiserSetupPage": {
        "hash": "58853657ad587dca0074166c201d212838c51dd938b830577be64b6690f69994",
        "query": "query FundraiserSetupPage($channelLogin: String!, $charityID: ID!) {\n  user(login: $channelLogin) {\n    id\n  }\n  charity(id: $charityID) {\n    id\n    offers {\n      id\n      listing {\n        chargeModel {\n          internal {\n            previewPrice {\n              id\n              currency\n              exponent\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsManagerSliderTooltips_Query": {
        "hash": "b39bba10de896be02593104ab7a6e4be519677fff5a07efb58aaf9096c6ad177",
        "query": "query AdsManagerSliderTooltips_Query($login: String) {\n  user(login: $login) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    payoutPlans {\n      category\n      tags\n    }\n    adProperties {\n      incentiveOffers(status: AVAILABLE) {\n        ...AdsManagerSliderTooltips_Fields\n      }\n      disablePrerollsAbility {\n        hasDisablePrerollsAbilityAccess\n        hasDisablePrerollsAbilityEnabled\n      }\n    }\n  }\n}\n\nfragment AdsManagerSliderTooltips_Fields on AdIncentiveOffer {\n  id\n  targetHoursBroadcast\n  rank\n  density\n  isViewed\n  isRecommendedDensity\n  revenueForecastInCents {\n    min\n    max\n  }\n}\n"
    },
    "AdsGeneralSettings_UpdatePrerollNotifications": {
        "hash": "33574ccf8f1b056a17c544cd390e856f931131b8690edfe4a268ce5e8e3fe17d",
        "query": "mutation AdsGeneralSettings_UpdatePrerollNotifications($input: UpdateAdPropertiesInput!) {\n  updateAdProperties(input: $input) {\n    targetUser {\n      id\n      adProperties {\n        disablePrerollsAbility {\n          hasDisablePrerollsNotificationsEnabled\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsGeneralSettingsPrerollNotifications_Query": {
        "hash": "27aba35a62ce8668f37acb6dc38f927eb592550443f04eb58da2f9bde90f1e4a",
        "query": "query AdsGeneralSettingsPrerollNotifications_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      disablePrerollsAbility {\n        hasDisablePrerollsAbilityAccess\n        hasDisablePrerollsNotificationsEnabled\n      }\n    }\n  }\n}\n"
    },
    "AdsGeneralSettings_UpdatePrerolls": {
        "hash": "8f40ad59ffc3d4a3944a8359acdc008e694222b6e4968979a2c65368273dd895",
        "query": "mutation AdsGeneralSettings_UpdatePrerolls($input: UpdateAdPropertiesInput!) {\n  updateAdProperties(input: $input) {\n    targetUser {\n      id\n      adProperties {\n        disablePrerollsAbility {\n          hasDisablePrerollsAbilityEnabled\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsGeneralSettingsPrerolls_Query": {
        "hash": "22deffe9e05068e72e8961306044b8f88769bea6548a5289a1e579c317c55b75",
        "query": "query AdsGeneralSettingsPrerolls_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      disablePrerollsAbility {\n        hasDisablePrerollsAbilityAccess\n        hasDisablePrerollsAbilityEnabled\n        disablePrerollsTimeEarned {\n          midrollLengthSeconds\n          prerollFreeTimeSeconds\n        }\n      }\n    }\n  }\n}\n"
    },
    "AdsGeneralSettingsRevshare_Query": {
        "hash": "f1b63148db519441b879148e9627417bc7e2371fd7c5c931e8a7761dd3db1424",
        "query": "query AdsGeneralSettingsRevshare_Query($login: String!) {\n  user(login: $login) {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    payoutPlans {\n      category\n      tags\n    }\n  }\n}\n"
    },
    "AdsGeneralSettings_UpdateSDAEnabled": {
        "hash": "138b619c26dfcad0d8d891841cc759598a9de77bcd4dbf25c6dc44ba6b232e0a",
        "query": "mutation AdsGeneralSettings_UpdateSDAEnabled($input: UpdateAdPropertiesInput!) {\n  updateAdProperties(input: $input) {\n    targetUser {\n      id\n      adProperties {\n        isStreamDisplayAdsDisabled\n      }\n    }\n  }\n}\n"
    },
    "AdsGeneralSettingsSDAEnabled_Query": {
        "hash": "1213586897cf022fb159bd6e1d2a19c8048e89e5f6be713c045c98bab4ea5184",
        "query": "query AdsGeneralSettingsSDAEnabled_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      isStreamDisplayAdsDisabled\n      isStreamDisplayAdsProductEligible\n    }\n  }\n}\n"
    },
    "AdsManagerSLYGameText_Query": {
        "hash": "cafb01d83e1fc982271a46dddf1ac830c4302dcc32c36cd6a3b8e106820df580",
        "query": "query AdsManagerSLYGameText_Query($id: ID, $hasGameID: Boolean!) {\n  game(id: $id) @include(if: $hasGameID) {\n    id\n    displayName\n  }\n}\n"
    },
    "AdsManagerSLYBanner_Query": {
        "hash": "df2d8aad670d28dcbb0fbf6273a23ff1519388e4c3438fcc31b2fe6596b5e3c2",
        "query": "query AdsManagerSLYBanner_Query($login: String!) {\n  user(login: $login) {\n    id\n    adProperties {\n      adRecommendations {\n        ...streamersLikeYou\n      }\n    }\n  }\n}\n\nfragment streamersLikeYou on AdRecommendation {\n  density\n  hoursBroadcast\n  avgCCV\n  game\n  isGaming\n  countryCode\n}\n"
    },
    "ArchiveCharityCampaign": {
        "hash": "48d3b4939e40f2fbaf3907a6b625b8f995924564bbcae840635b72dbae40c6e4",
        "query": "mutation ArchiveCharityCampaign($input: ArchiveCharityCampaignInput!) {\n  archiveCharityCampaign(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CharityParticipationPageQuery": {
        "hash": "af7725cf2e61ba91f7478ba48b0860ff2cbe79b3b7842400f4f998efd485fb17",
        "query": "query CharityParticipationPageQuery($channelName: String!, $charityID: ID!, $first: Int!, $after: Cursor) {\n  channel(name: $channelName) {\n    id\n    charityCampaignParticipationEvents(id: $charityID, first: $first, after: $after) {\n      edges {\n        node {\n          ...charityCampaignParticipationEvents\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment charityCampaignParticipationEvents on CharityDonationEvent {\n  donator {\n    displayName\n    id\n    login\n    profileImageURL(width: 50)\n  }\n  time\n  donation {\n    amount\n    exponent\n    currencyType\n  }\n}\n"
    },
    "EndCharityCampaign": {
        "hash": "3150376adaa4f7f3116253aac7e9a87ed4c0f189b2b22014e0e61f0affe7d856",
        "query": "mutation EndCharityCampaign($input: EndCharityCampaignInput!) {\n  endCharityCampaign(input: $input) {\n    endedCampaign {\n      id\n      endsAt\n    }\n  }\n}\n"
    },
    "FundraisersManagementPage": {
        "hash": "b18011f3aec1c554b2b91968e50cd6fef387719ba13cc18ae9e52a23b5f2e8ca",
        "query": "query FundraisersManagementPage($channelName: String!, $first: Int!, $after: Cursor) {\n  channel(name: $channelName) {\n    id\n    activeCharityCampaign {\n      ...charityCampaignItem\n    }\n    charityCampaigns(first: $first, after: $after) {\n      edges {\n        node {\n          ...charityCampaignItem\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment charityCampaignItem on CharityCampaign {\n  id\n  startsAt\n  endsAt\n  donationTotal\n  goal {\n    id\n    currentContributions\n    targetContributions\n  }\n  charities {\n    id\n    name\n    description\n    logoURL\n    websiteURL\n    causeAreas\n    location {\n      city\n      state\n      country\n    }\n    offers {\n      ...charityOffer\n    }\n  }\n}\n"
    },
    "UpdateCharityCampaign": {
        "hash": "2e2d7b474a429a5acc5691efd53b22636f75cb9870b5fc148d788155fd11e423",
        "query": "mutation UpdateCharityCampaign($input: UpdateCharityCampaignInput!) {\n  updateCharityCampaign(input: $input) {\n    campaign {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ExtensionDashboardNav": {
        "hash": "2362de92d3cc4b6c2f1b332f6f175d9d4fc90e04427b5a5c6954c07049bf2358",
        "query": "query ExtensionDashboardNav() {\n  currentUser {\n    id\n    login\n  }\n  extensionCategory(id: \"whitelisted\") {\n    id\n    extensions(first: 1) {\n      totalCount\n    }\n  }\n}\n"
    },
    "RecommendedExtension": {
        "hash": "e3469ef87cb4ed31c0e2cf7e51d8cac4a3a23aa5085243479ededc824ec4917e",
        "query": "query RecommendedExtension($extensionID: ID!) {\n  currentUser {\n    id\n    installedExtensions {\n      id\n      activationConfig {\n        slot\n        state\n      }\n      extension {\n        id\n        version\n        clientID\n        isBitsEnabled\n        bitsSupportLevel\n      }\n      permittedFeatures {\n        canSendChat\n        canRetrieveSubscriptionStatus\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n    }\n  }\n  extension(id: $extensionID) {\n    id\n    clientID\n    summary\n    name\n    anchor\n    version\n    isBitsEnabled\n    bitsSupportLevel\n    hasChatSupport\n    subscriptionsSupportLevel\n    contentMatchedGames {\n      id\n      name\n      displayName\n    }\n    iconURLs {\n      square100\n    }\n  }\n}\n"
    },
    "ExtensionConfigureModal_ApplyExtensionActivations": {
        "hash": "c7acf54b0228fa7102d92cd6f77b498d855c9eb5073cbf6d26f06f1c3a47c045",
        "query": "mutation ExtensionConfigureModal_ApplyExtensionActivations($input: ApplyExtensionActivationsInput!) {\n  applyExtensionActivations(input: $input) {\n    installedExtensions {\n      id\n      activationConfig {\n        anchor\n        slot\n        state\n      }\n      extension {\n        id\n        clientID\n        contentMatchedGames {\n          id\n          displayName\n        }\n        name\n        hasChatSupport\n        bitsSupportLevel\n        isBitsEnabled\n        subscriptionsSupportLevel\n        version\n      }\n      permittedFeatures {\n        canSendChat\n        canRetrieveSubscriptionStatus\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n      requiredActions {\n        type\n      }\n      self {\n        canActivate\n      }\n    }\n  }\n}\n"
    },
    "ExtensionConfigure_CreatePanel": {
        "hash": "da2278582c0f931a40606c75989be5f40c959a89eb56cf0f299e564eeb5ff119",
        "query": "mutation ExtensionConfigure_CreatePanel($input: CreatePanelInput!) {\n  createPanel(input: $input) {\n    panel {\n      id\n      type\n      ... on ExtensionPanel {\n        slotID\n      }\n    }\n  }\n}\n"
    },
    "ExtensionConfigure": {
        "hash": "c8280933b56fe3348486063bf7182658eccd52564bbf926cfc5499f1cfc7623c",
        "query": "query ExtensionConfigure() {\n  currentUser {\n    id\n    installedExtensions {\n      id\n      activationConfig {\n        anchor\n        slot\n        state\n      }\n      extension {\n        id\n        clientID\n        iconURLs {\n          square100\n        }\n        hasChatSupport\n        isBitsEnabled\n        bitsSupportLevel\n        name\n        sku\n        state\n        subscriptionsSupportLevel\n        vendorCode\n        version\n        views {\n          component {\n            viewerURL\n          }\n          hidden {\n            viewerURL\n          }\n          mobile {\n            viewerURL\n          }\n          panel {\n            viewerURL\n          }\n          videoOverlay {\n            viewerURL\n          }\n        }\n      }\n      permittedFeatures {\n        canSendChat\n        canRetrieveSubscriptionStatus\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n      requiredActions {\n        type\n      }\n      self {\n        canActivate\n      }\n    }\n    panels {\n      id\n      type\n      ... on ExtensionPanel {\n        slotID\n      }\n    }\n  }\n}\n"
    },
    "ExtensionInstallationOAuthModal": {
        "hash": "4c0638d38cfb3194971f4be3e89bfa370b6872142d9451926da6406b801635d9",
        "query": "query ExtensionInstallationOAuthModal() {\n  currentUser {\n    id\n    installedExtensions {\n      id\n      extension {\n        ...extensionInstallationOAuthModalExtension\n      }\n    }\n  }\n}\n\nfragment extensionInstallationOAuthModalExtension on Extension {\n  id\n  clientID\n}\n"
    },
    "ExtensionsDiscoveryPage_InstallExtension": {
        "hash": "e8c51db130b2b0d814b7e6cd81dfeef808c8d59d38951bb5e3f54651bb3f64a6",
        "query": "mutation ExtensionsDiscoveryPage_InstallExtension($input: InstallExtensionInput!) {\n  installExtension(input: $input) {\n    installedExtension {\n      id\n      activationConfig {\n        state\n      }\n      extension {\n        id\n        clientID\n        version\n      }\n      requiredActions {\n        type\n      }\n      permittedFeatures {\n        canSendChat\n        canRetrieveSubscriptionStatus\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n    }\n  }\n}\n"
    },
    "ExtensionsDiscoveryPage": {
        "hash": "03ffadaf2e4784a27f71794be0f8e165b3951b50ef4ac055e7bfba2024412f95",
        "query": "query ExtensionsDiscoveryPage($first: Int!, $afterCursor: Cursor, $skipCurrentUser: Boolean!, $featuredCategoryID: ID!) {\n  currentUser @skip(if: $skipCurrentUser) {\n    id\n    broadcastSettings {\n      id\n      game {\n        id\n        extensionRecommendations {\n          extension {\n            ...ExtensionsDiscoveryPage_Extension\n          }\n        }\n      }\n    }\n    cheer {\n      id\n    }\n    installedExtensions {\n      ...ExtensionsDiscoveryPage_ExtensionInstallation\n    }\n    login\n  }\n  extensionCategory(id: $featuredCategoryID) {\n    id\n    description\n    extensions {\n      edges {\n        node {\n          ...ExtensionsDiscoveryPage_Extension\n        }\n      }\n    }\n    name\n  }\n  extensionCategories(first: $first, after: $afterCursor) {\n    edges {\n      cursor\n      node {\n        id\n        description\n        extensions(first: 6) {\n          edges {\n            node {\n              ...ExtensionsDiscoveryPage_Extension\n            }\n          }\n        }\n        name\n        type\n      }\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n\nfragment ExtensionsDiscoveryPage_Extension on Extension {\n  id\n  authorName\n  clientID\n  iconURLs {\n    square100\n  }\n  screenshotURLs\n  isBitsEnabled\n  bitsSupportLevel\n  name\n  self {\n    canInstall\n  }\n  state\n  summary\n  version\n}\n\nfragment ExtensionsDiscoveryPage_ExtensionInstallation on ExtensionInstallation {\n  id\n  activationConfig {\n    state\n  }\n  extension {\n    id\n    version\n    clientID\n  }\n}\n"
    },
    "ExtensionManagementPage_ApplyExtensionActivations": {
        "hash": "af0aa4a33d9d6289701f782f4e677fb0960e418e9d56e9b77315cf66dc2e83b6",
        "query": "mutation ExtensionManagementPage_ApplyExtensionActivations($input: ApplyExtensionActivationsInput!) {\n  applyExtensionActivations(input: $input) {\n    installedExtensions {\n      id\n      activationConfig {\n        anchor\n        slot\n        state\n      }\n      extension {\n        id\n        clientID\n        contentMatchedGames {\n          id\n          displayName\n        }\n        name\n        hasChatSupport\n        bitsSupportLevel\n        isBitsEnabled\n        subscriptionsSupportLevel\n        version\n      }\n      permittedFeatures {\n        canSendChat\n        canRetrieveSubscriptionStatus\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n      requiredActions {\n        type\n      }\n      self {\n        canActivate\n      }\n    }\n  }\n}\n"
    },
    "ExtensionManagementPage_CreatePanel": {
        "hash": "96d58828d4306ffd95584efe1d0d4f3089de278020531883ac4a46017a0c4653",
        "query": "mutation ExtensionManagementPage_CreatePanel($input: CreatePanelInput!) {\n  createPanel(input: $input) {\n    panel {\n      id\n      type\n      ... on ExtensionPanel {\n        slotID\n      }\n    }\n  }\n}\n"
    },
    "ExtensionManagementPage_UninstallExtension": {
        "hash": "8ffa09acb2296c3e35825654df224ecfe09961f3b13f8fc917726a54e33e8928",
        "query": "mutation ExtensionManagementPage_UninstallExtension($input: UninstallExtensionInput!) {\n  uninstallExtension(input: $input) {\n    id\n  }\n}\n"
    },
    "ExtensionManagementPage": {
        "hash": "dd6ed95f5cac23368c23dd55bf01ee2bbe64312c492dc00bc0400cde06357221",
        "query": "query ExtensionManagementPage() {\n  currentUser {\n    id\n    installedExtensions {\n      ...ExtensionManagementPageExtensionInstallation\n    }\n    panels {\n      id\n      type\n      ... on ExtensionPanel {\n        slotID\n      }\n    }\n  }\n}\n\nfragment ExtensionManagementPageExtensionInstallation on ExtensionInstallation {\n  id\n  activationConfig {\n    anchor\n    slot\n    state\n  }\n  extension {\n    id\n    clientID\n    iconURLs {\n      square100\n    }\n    hasChatSupport\n    isBitsEnabled\n    bitsSupportLevel\n    name\n    sku\n    state\n    subscriptionsSupportLevel\n    vendorCode\n    version\n    views {\n      component {\n        viewerURL\n      }\n      hidden {\n        viewerURL\n      }\n      mobile {\n        viewerURL\n      }\n      panel {\n        viewerURL\n      }\n      videoOverlay {\n        viewerURL\n      }\n    }\n  }\n  permittedFeatures {\n    ...extensionManagementPageFeatureFlagsFragment\n  }\n  requiredActions {\n    type\n  }\n  self {\n    canActivate\n  }\n}\n\nfragment extensionManagementPageFeatureFlagsFragment on ExtensionInstallationFeatureFlags {\n  canSendChat\n  canRetrieveSubscriptionStatus\n  canUseBits\n  dynamicManagement {\n    game {\n      id\n      displayName\n    }\n    isManaged\n  }\n}\n"
    },
    "ExtensionPermissionsPageSetFeatureFlags": {
        "hash": "f2e85300bab1c9757ae3669577fcf5358406bf876e6087c401df5e720c9c1f43",
        "query": "mutation ExtensionPermissionsPageSetFeatureFlags($input: SetExtensionFeatureFlagsInput!) {\n  setExtensionFeatureFlags(input: $input) {\n    installedExtension {\n      id\n      permittedFeatures {\n        canSendChat\n        canUseBits\n        dynamicManagement {\n          game {\n            id\n            displayName\n          }\n          isManaged\n        }\n      }\n    }\n  }\n}\n"
    },
    "ExtensionPermissionsPage": {
        "hash": "50dc68f0179da94b1e5554c7ea9e740026cb6796003999a1a384f11c4a7ba4c8",
        "query": "query ExtensionPermissionsPage() {\n  currentUser {\n    id\n    installedExtensions {\n      id\n      extension {\n        id\n        authorName\n        clientID\n        iconURLs {\n          square100\n        }\n        subscriptionsSupportLevel\n        hasChatSupport\n        isBitsEnabled\n        bitsSupportLevel\n        name\n        version\n      }\n      permittedFeatures {\n        ...extensionPermissionsPageFeatureFlagsFragment\n      }\n    }\n  }\n}\n\nfragment extensionPermissionsPageFeatureFlagsFragment on ExtensionInstallationFeatureFlags {\n  canSendChat\n  canRetrieveSubscriptionStatus\n  canUseBits\n  dynamicManagement {\n    game {\n      id\n      displayName\n    }\n    isManaged\n  }\n}\n"
    },
    "ChannelPointsPredictionsPopout": {
        "hash": "e96d3baf026ffc63168bfe7d1597a92871f189bce462269366c5572b2c83f343",
        "query": "query ChannelPointsPredictionsPopout($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        isAvailable\n        isEnabled\n      }\n      predictionSettings {\n        isEligibleForPredictions\n      }\n    }\n    self {\n      isModerator\n    }\n  }\n}\n"
    },
    "ChatSettings_EditAppearance": {
        "hash": "bcc118d5438db3ffc6e11626e6ee022d33d69dd282d8eba5f84e58e0ee6b557e",
        "query": "query ChatSettings_EditAppearance($channelID: ID!) {\n  currentUser {\n    id\n    login\n    displayName\n    chatColor\n  }\n  user(id: $channelID) {\n    id\n    login\n    self {\n      displayBadges {\n        ...badge\n      }\n    }\n  }\n}\n"
    },
    "ChannelLeaderboards": {
        "hash": "e3cec432aa18ea4b2e8ea74ae4e6972fb7da0a95f89cfaf53ba3577b1f97fe8b",
        "query": "query ChannelLeaderboards($channelID: ID!, $first: Int, $isClipLeaderboardEnabled: Boolean) {\n  user(id: $channelID) {\n    id\n    login\n    displayName\n    channel {\n      id\n      leaderboardTimePeriod\n      leaderboardSet(first: $first) {\n        bits {\n          ...channelLeaderboard\n        }\n        subGift {\n          ...channelLeaderboard\n        }\n        clip @include(if: $isClipLeaderboardEnabled) {\n          ...clipLeaderboard\n        }\n      }\n    }\n    cheer {\n      id\n      settings {\n        id\n        cheerMinimumBits\n      }\n    }\n    subscriptionProducts {\n      ...channelLeaderboardSubscriptionProduct\n    }\n  }\n  currentUser {\n    id\n  }\n}\n"
    },
    "ChannelPage__ChannelViewersCount": {
        "hash": "d3bdd348f6106301558981f18be34ae6c788edd0ab51e12a6b02dc62bfc296f5",
        "query": "query ChannelPage__ChannelViewersCount($login: String!) {\n  user(login: $login) {\n    id\n    stream {\n      id\n      viewersCount\n    }\n  }\n}\n"
    },
    "ChatBadgeListItem_UpdateBitsBadgeTiers": {
        "hash": "8a40f720ffc1e9a86bedd333db3a1097276cd848994dd66eb4415f993b521d55",
        "query": "mutation ChatBadgeListItem_UpdateBitsBadgeTiers($input: UpdateBitsBadgeTiersInput!) {\n  updateBitsBadgeTiers(input: $input) {\n    tiers {\n      threshold\n      isEnabled\n      unlockedUsersCount\n      lastUpdated\n      badge {\n        id\n        title\n        imageURL(size: NORMAL)\n        imageURL(size: DOUBLE)\n        imageURL(size: QUADRUPLE)\n        user {\n          id\n        }\n      }\n      emoticons {\n        id\n        token\n        state\n        suffix\n      }\n      emoticonUploadConfigurations {\n        imageUploadConfig1X {\n          uploadID\n          uploadURL\n        }\n        imageUploadConfig2X {\n          uploadID\n          uploadURL\n        }\n        imageUploadConfig4X {\n          uploadID\n          uploadURL\n        }\n      }\n      canUploadEmoticons\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ChatBadgeList_GetBadgeTiers": {
        "hash": "610e5cc7c0b1f6807da93a76179f4fa5981354491c7ceb1a4a7958c48cb15d38",
        "query": "query ChatBadgeList_GetBadgeTiers($login: String!) {\n  user(login: $login) {\n    id\n    login\n    isInEmoteGoodStanding\n    settings {\n      cheer {\n        id\n        badges {\n          tiers {\n            ...bitsBadgeTier\n          }\n          canUploadBadgeTierEmoticons\n        }\n      }\n    }\n    emoticonPrefix {\n      name\n      state\n    }\n  }\n}\n"
    },
    "ChatBadgeTiersForm_UpdateBadgeTiers": {
        "hash": "81ef1cd1e748f3c525439d5cd263b01956e371d50f130bc64efa948ffa1b619e",
        "query": "mutation ChatBadgeTiersForm_UpdateBadgeTiers($input: UpdateBitsBadgeTiersInput!) {\n  updateBitsBadgeTiers(input: $input) {\n    tiers {\n      threshold\n      isEnabled\n      unlockedUsersCount\n      lastUpdated\n      badge {\n        id\n        title\n        imageURL(size: NORMAL)\n        imageURL(size: DOUBLE)\n        imageURL(size: QUADRUPLE)\n        user {\n          id\n        }\n      }\n      emoticons {\n        id\n        token\n        state\n        suffix\n      }\n      canUploadEmoticons\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ClaimCommunityPoints": {
        "hash": "95d2099b2d390b8ddb3b55ea437300afc42aa20a44bc91aa95b4e5867c4ea283",
        "query": "mutation ClaimCommunityPoints($input: ClaimCommunityPointsInput!) {\n  claimCommunityPoints(input: $input) {\n    claim {\n      id\n      multipliers {\n        factor\n        reasonCode\n      }\n      pointsEarnedBaseline\n      pointsEarnedTotal\n    }\n    currentPoints\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CommunityPointsAvailableClaim": {
        "hash": "e5283c208a6eaf9ff5958d5d0a1cc79a9b575aad6b461f27be6786ab1f33b640",
        "query": "query CommunityPointsAvailableClaim($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    login\n    ...availableClaimFragment\n    ...communityPointsBalanceFragment\n  }\n}\n"
    },
    "ChannelPointsAvailableEarns": {
        "hash": "55985caebedd1a42730b4111146960aa88bfd93547613d1edacd277fcbafeef0",
        "query": "query ChannelPointsAvailableEarns($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      self {\n        communityPoints {\n          limitedEarnings {\n            id\n            cheerAvailableAt\n            subscriptionGiftAvailableAt\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "AcceptPredictionTermsMutation": {
        "hash": "eec5dbdd61f1c089fd639b486581393380fb6cfaacd8fd0406c03a69e0802c4c",
        "query": "mutation AcceptPredictionTermsMutation($input: UpdateUserPredictionSettingsInput!) {\n  updateUserPredictionSettings(input: $input) {\n    error {\n      code\n    }\n    settings {\n      hasAcceptedTOS\n      isTemporaryChatBadgeEnabled\n    }\n  }\n}\n"
    },
    "MakePrediction": {
        "hash": "cca875061ed256ad575c9519471964319051a9535c025c63c8c1dd9b42515660",
        "query": "mutation MakePrediction($input: MakePredictionInput!) {\n  makePrediction(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UserPredictionEventRestriction": {
        "hash": "a7cd01ab6bef07389e49749bceaed55d85a56202b3cdd267a64a46e510db929d",
        "query": "query UserPredictionEventRestriction($eventID: ID!) {\n  predictionEvent(id: $eventID) {\n    id\n    self {\n      restriction\n    }\n  }\n}\n"
    },
    "RewardCenter_BitsOffers": {
        "hash": "8b23a016fb49d22b28ef4c509717c282bed3f3b74b1743d71e06f82beef9c6ad",
        "query": "query RewardCenter_BitsOffers() {\n  currentUser {\n    id\n    bitsBalance\n    bitsOffers {\n      ...bitsOffer\n    }\n  }\n}\n"
    },
    "ContributeCommunityPointsCommunityGoal": {
        "hash": "6a20176fd27ec15e72e18b68a6a704d799ccbc30227641677b8b3941e6db6fe4",
        "query": "mutation ContributeCommunityPointsCommunityGoal($input: ContributeCommunityPointsCommunityGoalInput!) {\n  contributeCommunityPointsCommunityGoal(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "ModifyEmoteOwnedEmotes": {
        "hash": "d05f0dbc74b120ee017d70ba5d29487fc16833e02f33e2921e4a3d00eb95d0f5",
        "query": "query ModifyEmoteOwnedEmotes() {\n  currentUser {\n    id\n    emoteSets {\n      id\n      emotes {\n        id\n        modifiers {\n          code\n          name\n        }\n      }\n    }\n  }\n}\n"
    },
    "SendCelebration": {
        "hash": "77631e30373adf61b3ad951a7e6cf84c65609e10b1a517d543e4df8cdcf4ca45",
        "query": "mutation SendCelebration($input: SendCelebrationInput!) {\n  sendCelebration(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SendGigantifiedChatEmote": {
        "hash": "9b7a636f8973099a3d1819725401f2d0615f3d6cf3f53a2ac9e779a1fb418ebb",
        "query": "mutation SendGigantifiedChatEmote($input: SendGigantifiedChatEmoteInput!) {\n  sendGigantifiedChatEmote(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UserPointsContribution": {
        "hash": "1bbe63a32996a7f91bf20e44f86718d4fa1a35660fedf100051cee16ec150178",
        "query": "query UserPointsContribution($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    channel {\n      id\n      self {\n        communityPoints {\n          goalContributions {\n            goal {\n              id\n            }\n            userPointsContributedThisStream\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "AlertWidgetAlertEmotesByCodesQuery": {
        "hash": "4763981f946b2016ecd82d31ea774ef30aa8ce3109c415c0565f510274a6f1b2",
        "query": "query AlertWidgetAlertEmotesByCodesQuery($alertSetToken: Token!, $alertEmoteCodes: [String!]!) {\n  alertEmotesByCodes(token: $alertSetToken, alertEmoteCodes: $alertEmoteCodes) {\n    ...alertEmoteFragment\n  }\n}\n"
    },
    "convertAlertTextToSpeech": {
        "hash": "c16d1ee43244427e41de0cdc4805bfef710b18d89c413b0560da1c459c07103f",
        "query": "mutation convertAlertTextToSpeech($input: ConvertAlertTextToSpeechInput!) {\n  convertAlertTextToSpeech(input: $input) {\n    speech {\n      id\n      url\n    }\n    error\n  }\n}\n"
    },
    "Alerts_ChannelPointsConfigContext": {
        "hash": "becc59c6e1dba446762d4a060f6994422f13f0545a04ac18f147cf99ec9860bd",
        "query": "query Alerts_ChannelPointsConfigContext($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    communityPointsSettings {\n      isAvailable\n      customRewards {\n        ...alertsChannelPointsReward\n      }\n    }\n  }\n}\n"
    },
    "AlertAssets": {
        "hash": "1f9c1cc9991fd2a062617c458e1ec2929fddc9e1b6976df651770a8509a1037b",
        "query": "query AlertAssets($channelID: ID!) {\n  defaultAlertAssets(type: IMAGE) {\n    ...alertAssetFragment\n  }\n  defaultAlertAssets(type: AUDIO) {\n    ...alertAssetFragment\n  }\n  defaultAlertAssets(type: VIDEO) {\n    ...alertAssetFragment\n  }\n  alertAssets(channelID: $channelID) {\n    totalSize\n    imageAssets {\n      ...alertAssetFragment\n    }\n    videoAssets {\n      ...alertAssetFragment\n    }\n    audioAssets {\n      ...alertAssetFragment\n    }\n  }\n  alertAssetLimit(channelID: $channelID) {\n    size\n  }\n}\n"
    },
    "AlertAssetsSizeLimits": {
        "hash": "0c207cf7a1ac50e6ebe9d528595105af123831f4592da8230b2d97afcb6cb7aa",
        "query": "query AlertAssetsSizeLimits($channelID: ID!) {\n  alertAssets(channelID: $channelID) {\n    totalSize\n  }\n  alertAssetLimit(channelID: $channelID) {\n    size\n  }\n}\n"
    },
    "AcknowledgeAlertsAudioScanningDisclosure": {
        "hash": "0814e0cc8623b3eaefc87eebd3ac82f5b57faf977edf06fc0838707e8eda2f59",
        "query": "mutation AcknowledgeAlertsAudioScanningDisclosure($input: AcknowledgeAlertsAudioScanningDisclosureInput!) {\n  acknowledgeAlertsAudioScanningDisclosure(input: $input) {\n    error\n    acknowledgementStatus {\n      id\n      hasAcknowledgedAudioScanningDisclosure\n    }\n  }\n}\n"
    },
    "GetAlertAssetUploadConfiguration": {
        "hash": "a2fae7e63b3726dadfb72c39d824548f59c6bab8cfdd70721b136fe43b940090",
        "query": "mutation GetAlertAssetUploadConfiguration($input: GetAlertAssetUploadConfigurationInput!) {\n  getAlertAssetUploadConfiguration(input: $input) {\n    uploadID\n    signedS3URL\n    asset {\n      ...alertAssetFragment\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "deleteAlertAsset": {
        "hash": "0638a8c1fea26b892233a96d6ac2089c58b689a53db176c7cc2d6a3d18576ca8",
        "query": "mutation deleteAlertAsset($input: DeleteAlertAssetInput!) {\n  deleteAlertAsset(input: $input) {\n    error\n  }\n}\n"
    },
    "DisplayNameByUserIds": {
        "hash": "8c22a5e427bdbbe22de071896e60522e967e87344f269aca0f51be9de7ebe327",
        "query": "query DisplayNameByUserIds($ids: [ID!]) {\n  users(ids: $ids) {\n    id\n    displayName\n  }\n}\n"
    },
    "AlertTextToSpeechVoicesQuery": {
        "hash": "cd5ed0d530c2aaa984ec0072c39ccd7da933c0defefcd7d66a269af3bb456498",
        "query": "query AlertTextToSpeechVoicesQuery() {\n  allAlertTextToSpeechVoices {\n    id\n    name\n    language\n    languageCode\n    previewSentence\n    region\n  }\n}\n"
    },
    "DisplayNameByUserId": {
        "hash": "4576b8e7ef8f4a946c3c48354b190407b74d68bc6b1946c5f1cc8429ccb60ed3",
        "query": "query DisplayNameByUserId($id: ID!) {\n  user(id: $id) {\n    id\n    displayName\n  }\n}\n"
    },
    "PhoneVerificationAudioScanningDisclosureContextQuery": {
        "hash": "2114bbdcc3ad6e58bd2d9e1c3a4c0ff6d8eb10632081e8a63d974a36770ea2b0",
        "query": "query PhoneVerificationAudioScanningDisclosureContextQuery($channelID: ID!) {\n  currentUser {\n    id\n    isPhoneNumberVerified\n  }\n  alertsAudioScanningDisclosureStatus(channelID: $channelID) {\n    id\n    hasAcknowledgedAudioScanningDisclosure\n  }\n}\n"
    },
    "UpsertViewerCustomization": {
        "hash": "ae32d545dd38cf3e93e733d3924360b6d4f5e4b72e47c77011eb5574465285c7",
        "query": "mutation UpsertViewerCustomization($input: UpsertAlertViewerCustomizationInput!) {\n  upsertAlertViewerCustomization(input: $input) {\n    alertViewerCustomization {\n      ...alertViewerCustomizationFragment\n    }\n    error\n  }\n}\n"
    },
    "BulkUpdateAlertVariations": {
        "hash": "7e9c3164f7365f2cb8c042a72f737770c14198463fd4c732228af9210a28c429",
        "query": "mutation BulkUpdateAlertVariations($input: BulkUpdateAlertVariationsInput!) {\n  bulkUpdateAlertVariations(input: $input) {\n    alertVariations {\n      ...alertVariationFragment\n    }\n    error\n  }\n}\n"
    },
    "CreateAlertSet": {
        "hash": "f5203b860d6ac3410a0ef8b7b3e09c71a9ee4c01d1bedb1b219b89e0f131156a",
        "query": "mutation CreateAlertSet($input: CreateAlertSetInput!) {\n  createAlertSet(input: $input) {\n    alertSet {\n      ...alertSetWithViewerCustomizationFragment\n    }\n    error\n  }\n}\n"
    },
    "DeleteAlertSet": {
        "hash": "965642e9f36ed9348611852306b409088a57a43433602258ac3e7496198a55e1",
        "query": "mutation DeleteAlertSet($input: DeleteAlertSetInput!) {\n  deleteAlertSet(input: $input) {\n    error\n  }\n}\n"
    },
    "DeleteAlertVariation": {
        "hash": "9d026a2926d71579cf3a5fa57008e8367bdb446caf2f11ef7453dc49b49c34d5",
        "query": "mutation DeleteAlertVariation($input: DeleteAlertVariationInput!) {\n  deleteAlertVariation(input: $input) {\n    error\n  }\n}\n"
    },
    "TestAlert": {
        "hash": "52e938064de75ef04464cf6488c911ebdee7f7119e7a0e22e8b502bfdcfebec9",
        "query": "mutation TestAlert($input: TestAlertInput!) {\n  testAlert(input: $input) {\n    error\n  }\n}\n"
    },
    "UpdateAlertSet": {
        "hash": "8135059ec4ac8f8f5b3bb426e5d19d29a3599aa913b0ea3f8d9ccc7076a1f95f",
        "query": "mutation UpdateAlertSet($input: UpdateAlertSetInput!) {\n  updateAlertSet(input: $input) {\n    alertSet {\n      ...alertSetWithViewerCustomizationFragment\n    }\n    error\n  }\n}\n"
    },
    "UpdateAlertVariationPriority": {
        "hash": "440700b2cd169b66b1b99b23cdb0181a271e6330e211a9c0deb1bb85b2015680",
        "query": "mutation UpdateAlertVariationPriority($input: UpdateAlertVariationPriorityInput!) {\n  updateAlertVariationPriority(input: $input) {\n    alertVariations {\n      ...alertVariationFragment\n    }\n    error\n  }\n}\n"
    },
    "UpsertAlertVariation": {
        "hash": "758df60078877c64d84735c0605a8e165f4775f888fdd0f9dcf16f6df3b800ac",
        "query": "mutation UpsertAlertVariation($input: UpsertAlertVariationInput!) {\n  upsertAlertVariation(input: $input) {\n    alertVariation {\n      ...alertVariationFragment\n    }\n    error\n  }\n}\n"
    },
    "StreamAlertSetQuery": {
        "hash": "ac397936b003b6f12f8564dd628ef0fdfe667a2746ee48968cb81fb82c109b7e",
        "query": "query StreamAlertSetQuery($channelID: ID!) {\n  alertSets(channelID: $channelID) {\n    ...alertSetWithViewerCustomizationFragment\n  }\n}\n"
    },
    "CurrentAlertSetQuery": {
        "hash": "30c67c24c5e968a6624554ae2b4f8791b0680df4f8c43f33f6c55437d09d3b0f",
        "query": "query CurrentAlertSetQuery($id: ID!) {\n  alertSetByID(id: $id) {\n    ...currentAlertSetFragment\n  }\n}\n"
    },
    "DefaultAlertVariations": {
        "hash": "0db4fddc6304504a67b39ea071e6093be3114dc3be8cd621ef39556d8f3631e2",
        "query": "query DefaultAlertVariations() {\n  defaultAlertVariations {\n    priority\n    styleSettings {\n      map {\n        key\n        value\n      }\n    }\n    name\n    state\n    ownerID\n    duration\n    id\n    condition {\n      ...alertConditionFragment\n    }\n    sound {\n      id\n      url\n      volume\n      isMuted\n      assetType\n      assetMimeType\n    }\n    primaryMessage {\n      message\n    }\n    image {\n      id\n      url\n      volume\n      assetType\n      assetMimeType\n    }\n    isCustomHTMLEnabled\n  }\n}\n"
    },
    "AlertVariationHTMLQuery": {
        "hash": "2074c48d34507f0c4d307117682a1a86775eb6652a343084f865d93f65b6e969",
        "query": "query AlertVariationHTMLQuery($variantId: ID!, $token: Token, $channelID: ID) {\n  alertVariationHTML(alertVariationID: $variantId, token: $token, channelID: $channelID) {\n    ...alertVariationHTMLFragment\n  }\n}\n"
    },
    "CollectionManager_CreateCollection": {
        "hash": "31b669a010c4f37df6d1a8ec1bebf8e138e5158f6c38d1edc6c653aca479c4bd",
        "query": "mutation CollectionManager_CreateCollection($input: CreateCollectionInput!) {\n  createCollection(input: $input) {\n    collection {\n      id\n      title\n    }\n  }\n}\n"
    },
    "ViewTermsPage_CurrentUser": {
        "hash": "ad61246fa1245505352c33f08948fb549f7387d4b41f20e67d3577964186af1c",
        "query": "query ViewTermsPage_CurrentUser() {\n  currentUser {\n    id\n    payoutPlans {\n      category\n      isReceivingRevenue\n      tags\n    }\n    onboardingInvitations {\n      payout {\n        id\n        category\n        workflow {\n          id\n          currentStep\n        }\n        isLegacy\n      }\n    }\n    programAgreement(invitationType: PAYOUT) {\n      body\n      startDate\n      endDate\n    }\n  }\n}\n"
    },
    "ChannelAudit": {
        "hash": "d58f600e020b2e2cb061c215f410193cf265b9ccce312e4a95b1869acb12eb67",
        "query": "query ChannelAudit($channelLogin: ID!, $first: Int, $cursor: Cursor) {\n  channelAudits(channelID: $channelLogin, first: $first, after: $cursor) {\n    edges {\n      cursor\n      node {\n        id\n        action\n        newValue\n        oldValue\n        actor {\n          displayName\n          id\n          login\n          profileImageURL(width: 300)\n        }\n        createdAt\n      }\n    }\n    pageInfo {\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n}\n"
    },
    "ChannelTrailerReview": {
        "hash": "b6aa5cb248963012848b222573851f687d1378a287fb5c5fa2df0d211abc5add",
        "query": "query ChannelTrailerReview($channelLogin: String!, $videoID: ID!, $includeVideo: Boolean!) {\n  user(login: $channelLogin) {\n    id\n    bannerImageURL\n    displayName\n    login\n    description\n    channel {\n      id\n      socialMedias {\n        ...channelHomeSocialMedia\n      }\n    }\n    broadcastSettings {\n      id\n      language\n    }\n  }\n  video(id: $videoID, options: {includePrivate: true}) @include(if: $includeVideo) {\n    ...videoManagerVideo\n  }\n}\n"
    },
    "ChannelTrailerSetup_SetChannelTrailer": {
        "hash": "b08c50e53f00eba2ca09c531c2276b9a446f3384dd7d0b7850397404b72af0c8",
        "query": "mutation ChannelTrailerSetup_SetChannelTrailer($input: SetChannelTrailerInput!) {\n  setChannelTrailer(input: $input) {\n    error\n    channel {\n      id\n      trailer {\n        video {\n          id\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelTrailerSetup_UpdateVideo": {
        "hash": "a8924f47579f0a531cb9f6caabfa952850c4d1fd880df72e958912d65760e406",
        "query": "mutation ChannelTrailerSetup_UpdateVideo($input: UpdateVideoInput!) {\n  updateVideo(input: $input) {\n    video {\n      id\n      title\n      language\n      previewThumbnailURL\n    }\n  }\n}\n"
    },
    "ClipsTrackingBase": {
        "hash": "eed8a799ef9ac007b7545451804f6ead5281961613cd466b33817caba9c7f099",
        "query": "query ClipsTrackingBase($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    broadcaster {\n      id\n      login\n      isPartner\n      stream {\n        id\n      }\n    }\n    game {\n      id\n      name\n    }\n    video {\n      id\n    }\n  }\n}\n"
    },
    "ClipsRecommendations": {
        "hash": "34f6b16c306d27c5315a74f3bc8898765bbc56607b440841c01908a1546a5114",
        "query": "fragment recommendedClip on Clip {\n  id\n  title\n  thumbnailURL\n  slug\n  broadcaster {\n    id\n    displayName\n    login\n    primaryColorHex\n  }\n  game {\n    id\n    slug\n    displayName\n    name\n  }\n  viewCount\n}\n\nquery ClipsRecommendations($slug: ID!, $requestID: String!, $first: Int!, $after: Cursor, $itemsPerRow: Int, $context: RecommendationsContext, $imageWidth: Int, $includeIsDJ: Boolean) {\n  clip(slug: $slug) {\n    id\n    slug\n    game {\n      id\n      name\n      displayName\n    }\n    broadcaster {\n      id\n      login\n      displayName\n    }\n    video {\n      id\n    }\n    relatedClips {\n      broadcaster {\n        ...recommendedClip\n      }\n      game {\n        ...recommendedClip\n      }\n      top {\n        ...recommendedClip\n      }\n    }\n    subdomainShelves(requestID: $requestID, first: $first, after: $after, itemsPerRow: $itemsPerRow, context: $context) {\n      edges {\n        node {\n          ...shelf\n        }\n        cursor\n      }\n      verboseResults\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "OnboardingModal_Recommendations": {
        "hash": "9eb806a55ba0fc92782677a8f3cfebb768ce7e96b251866647c1b42e9ec9e92f",
        "query": "query OnboardingModal_Recommendations($gamesLimit: Int, $streamsLimit: Int, $recRequestID: ID!, $location: String!, $context: RecommendationsContext!) {\n  recommendedGames(first: $gamesLimit, recRequestID: $recRequestID, location: $location, context: $context) {\n    edges {\n      trackingID\n      node {\n        id\n        slug\n        name\n        displayName\n        avatarURL(width: 285, height: 380)\n      }\n    }\n  }\n  recommendedStreams(first: $streamsLimit, recRequestID: $recRequestID, location: $location, context: $context) {\n    edges {\n      trackingID\n      node {\n        id\n        broadcaster {\n          id\n          login\n          displayName\n          profileImageURL(width: 70)\n        }\n        game {\n          id\n          displayName\n        }\n      }\n    }\n  }\n}\n"
    },
    "OnboardingFollowGame": {
        "hash": "3f7e9a81052b2939e3de883dc200acd5b082ad657a274b3041252be1802b0763",
        "query": "mutation OnboardingFollowGame($id: ID!) {\n  followGame(input: {gameID: $id}) {\n    game {\n      id\n    }\n  }\n}\n"
    },
    "OnboardingFollowUser": {
        "hash": "3db93d0264c800171c754c972e187f5cae8a4cfb5d082e65004de5d0135aea20",
        "query": "mutation OnboardingFollowUser($id: ID!) {\n  followUser(input: {targetID: $id, disableNotifications: false}) {\n    follow {\n      followedAt\n    }\n  }\n}\n"
    },
    "OnboardingChannelsSearch": {
        "hash": "1532fec1f0d988e6e881929b63ee680ff9c9bef480c4823078cee4296074d41b",
        "query": "query OnboardingChannelsSearch($query: String!, $target: SearchForTarget) {\n  searchFor(userQuery: $query, platform: \"web\", target: $target) {\n    channels {\n      ...onboardingChannelsFragment\n    }\n  }\n}\n\nfragment onboardingChannelsFragment on SearchForResultUsers {\n  cursor\n  items {\n    ...onboardingChannelFragment\n  }\n}\n\nfragment onboardingChannelFragment on User {\n  id\n  displayName\n  followers {\n    totalCount\n  }\n  login\n  profileImageURL(width: 150)\n}\n"
    },
    "OnboardingGamesSearch": {
        "hash": "48bbd5a39c04d237bc441773c0d8ecf026777ec71e48e6f25571160b939efd1a",
        "query": "query OnboardingGamesSearch($query: String!, $target: SearchForTarget) {\n  searchFor(userQuery: $query, platform: \"web\", target: $target) {\n    games {\n      ...onboardingGamesFragment\n    }\n  }\n}\n\nfragment onboardingGamesFragment on SearchForResultGames {\n  cursor\n  items {\n    ...onboardingGameFragment\n  }\n}\n\nfragment onboardingGameFragment on Game {\n  id\n  slug\n  name\n  displayName\n  boxArtURL(height: 120, width: 90)\n  viewersCount\n}\n"
    },
    "MwebDirectoryAllQuery": {
        "hash": "922473638912ea7f82a17576fbd9985e4c4222c139cf426a1e39c9466f69989e",
        "query": "query MwebDirectoryAllQuery($limit: Int, $cursor: Cursor, $options: StreamOptions, $includeIsDJ: Boolean!) {\n  streams(first: $limit, after: $cursor, options: $options) {\n    edges {\n      ...MwebDirectoryAllStreamEdge\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment MwebDirectoryAllStreamEdge on StreamEdge {\n  cursor\n  node {\n    ...MwebStreamCard\n  }\n}\n"
    },
    "MwebGamesDirectoryQuery": {
        "hash": "2f656a42ed359ba76634adb75c606dbab3d22e596195f78b79064cb758a12b5e",
        "query": "query MwebGamesDirectoryQuery($limit: Int, $cursor: Cursor, $options: GameOptions) {\n  games(first: $limit, after: $cursor, options: $options) {\n    edges {\n      ...MwebGamesDirectoryEdge\n    }\n    pageInfo {\n      hasNextPage\n    }\n  }\n}\n\nfragment MwebGamesDirectoryEdge on GameEdge {\n  cursor\n  node {\n    ...MwebGameCard\n  }\n}\n"
    },
    "Follow_User": {
        "hash": "e754393214cdce18afbfc211bb9aacbe748204b99f162a9309f175a925469643",
        "query": "query Follow_User($login: String!) {\n  user(login: $login) {\n    id\n    login\n    displayName\n    bannerImageURL\n    description\n    profileImageURL(width: 150)\n    roles {\n      isPartner\n    }\n    stream {\n      id\n      type\n    }\n    settings {\n      visibility\n    }\n    followers {\n      totalCount\n    }\n    self {\n      canFollow\n      follower {\n        disableNotifications\n        followedAt\n      }\n    }\n  }\n}\n"
    },
    "GetMusicChartsQuery": {
        "hash": "35dc58c7f1564aa22b1e2d6f5c5ed32554741732854f3e32e109f69ef9c236c8",
        "query": "query GetMusicChartsQuery() {\n  experiment {\n    musicCharts {\n      items {\n        id\n        value\n        previousRank\n        chartData {\n          ... on User {\n            id\n            description\n            displayName\n            profileImageURL(width: 150)\n            bannerImageURL\n            login\n            stream {\n              id\n            }\n            roles {\n              isPartner\n            }\n          }\n        }\n      }\n      updatedAt\n      type\n    }\n  }\n}\n"
    },
    "getChangelogEntries": {
        "hash": "664bebd93519869720960f5695a59fc4b833891463df1302fd1419124286dd3e",
        "query": "query getChangelogEntries() {\n  changelogEntries(limit: 100) {\n    content\n    iconURL\n    id\n    position\n    publishedAt\n    title\n    linkURL\n    linkText\n  }\n}\n"
    },
    "DevBountyBoardDashboard_CompanySettings": {
        "hash": "be43d4830ee38a75587439c3ad40ddec7e0912d91356e619d1d0186b60257617",
        "query": "query DevBountyBoardDashboard_CompanySettings($orgId: ID!) {\n  organization(id: $orgId) {\n    id\n    brandPortalSettings {\n      isEnabled\n    }\n  }\n}\n"
    },
    "ClipsModalDeleteAll_Clip": {
        "hash": "e19595b9d43426309e3dc9a3263761441873845060a00c4abacd456446f1592c",
        "query": "query ClipsModalDeleteAll_Clip($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    video {\n      id\n    }\n    broadcast {\n      id\n    }\n  }\n}\n"
    },
    "GuestStarExampleClipsQuery": {
        "hash": "b8629187492d8026bf692ba9e3053c14e680e7a795cfc9bbb562199ca8d0910e",
        "query": "query GuestStarExampleClipsQuery($id: ID!) {\n  clip(slug: $id) {\n    id\n    title\n    thumbnailURL(width: 480, height: 272)\n    broadcaster {\n      id\n      displayName\n      profileImageURL(width: 70)\n    }\n    game {\n      id\n      name\n    }\n  }\n}\n"
    },
    "GuestStarExampleVodsQuery": {
        "hash": "a0145e41ade4d562f660d967dc6590eab3161d65c54e24b7e56fe6b4f389ca5b",
        "query": "query GuestStarExampleVodsQuery($id: ID!) {\n  video(id: $id) {\n    id\n    creator {\n      id\n      displayName\n      profileImageURL(width: 70)\n    }\n    previewThumbnailURL(height: 360, width: 640)\n    game {\n      id\n      name\n    }\n    title\n  }\n}\n"
    },
    "ProfileBannerPreferences": {
        "hash": "b6bbdb9a69f726cb07c23d3e59fa9c2d2cfcf9d54e676c6704acdbd6da0371bb",
        "query": "query ProfileBannerPreferences($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    bannerImageURL\n    primaryColorHex\n    channel {\n      id\n      home {\n        preferences {\n          heroPreset\n        }\n      }\n    }\n  }\n}\n"
    },
    "UpdateHeroPreset": {
        "hash": "527e06817d2e877127a2320d8805497d11c8f7e353ba102b541bfec3911d3aff",
        "query": "mutation UpdateHeroPreset($input: UpdateChannelHomePreferencesInput!) {\n  updateChannelHomePreferences(input: $input) {\n    channel {\n      id\n      home {\n        preferences {\n          heroPreset\n        }\n      }\n    }\n    error\n  }\n}\n"
    },
    "DeleteUserChannelOfflineImage": {
        "hash": "c8c4bed0f9c50adbe18ca0cbf7360d60bf729c67dfc812620ad86c870f731a93",
        "query": "mutation DeleteUserChannelOfflineImage($input: SetUserDefaultChannelOfflineImageInput!) {\n  setUserDefaultChannelOfflineImage(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "UploadVideoPlayerBanner_User": {
        "hash": "e22ae69bb9870c40637672ffbbfd3a99332e12b87513976780058fa7e4e817ae",
        "query": "query UploadVideoPlayerBanner_User($login: String!) {\n  user(login: $login) {\n    id\n    offlineImageURL\n  }\n}\n"
    },
    "MwebDirectoryCollectionQuery": {
        "hash": "4df0af8f7815690f55b1be7276170c3e518d8785d6c5c9ffcd62554744485d25",
        "query": "query MwebDirectoryCollectionQuery($slug: String!, $cursor: Cursor, $limit: Int, $options: BrowsableCollectionStreamsOptions, $includeIsDJ: Boolean!) {\n  browsableCollection(input: {slug: $slug}) {\n    id\n    slug\n    name {\n      fallbackLocalizedTitle\n    }\n    description {\n      fallbackLocalizedTitle\n    }\n    streams(first: $limit, after: $cursor, options: $options) {\n      edges {\n        ...MwebDirectoryCollectionStreamEdge\n      }\n      pageInfo {\n        endCursor\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment MwebDirectoryCollectionStreamEdge on StreamEdge {\n  cursor\n  node {\n    ...MwebStreamCard\n  }\n}\n"
    },
    "DevPlaygroundClipReEditingQuery": {
        "hash": "b1ba7d7bb75c71ff89336b6f1f475341f2dec98988a9dafb162cf7a900ea1457",
        "query": "query DevPlaygroundClipReEditingQuery($slug: ID!) {\n  clip(slug: $slug) {\n    id\n    broadcaster {\n      id\n    }\n  }\n}\n"
    },
    "ExtensionCategoryPage_InstallExtension": {
        "hash": "6042ae3cae0d7bc1399fbcfc8a4b04913d1376ca03c6cccb1156241c708945ad",
        "query": "mutation ExtensionCategoryPage_InstallExtension($input: InstallExtensionInput!) {\n  installExtension(input: $input) {\n    installedExtension {\n      id\n      extension {\n        id\n        clientID\n        version\n      }\n    }\n  }\n}\n"
    },
    "ExtensionCategoryPage": {
        "hash": "7f43ebe932a2f75c5259ea136b3e8676b8135108ac66db9d00b823bac3cf0b0a",
        "query": "query ExtensionCategoryPage($categoryID: ID!, $includeCurrentUser: Boolean!, $afterCursor: Cursor) {\n  currentUser @include(if: $includeCurrentUser) {\n    id\n    cheer {\n      id\n    }\n    login\n    installedExtensions {\n      id\n      extension {\n        id\n      }\n    }\n  }\n  extensionCategory(id: $categoryID) {\n    id\n    description\n    name\n    extensions(first: 21, after: $afterCursor) {\n      edges {\n        ...ExtensionCategoryPage_ExtensionEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n\nfragment ExtensionCategoryPage_ExtensionEdge on ExtensionEdge {\n  cursor\n  node {\n    id\n    authorName\n    clientID\n    iconURLs {\n      discoverySplash\n      square100\n    }\n    isBitsEnabled\n    bitsSupportLevel\n    name\n    self {\n      canInstall\n    }\n    sku\n    state\n    summary\n    vendorCode\n    version\n    views {\n      component {\n        viewerURL\n      }\n      hidden {\n        viewerURL\n      }\n      mobile {\n        viewerURL\n      }\n      panel {\n        viewerURL\n      }\n      videoOverlay {\n        viewerURL\n      }\n    }\n  }\n}\n"
    },
    "ExtensionDetailsPage_InstallExtension": {
        "hash": "5df7161d77f3ad0c633235e66c244e25959ba612919e57dbc5a82184429ffecc",
        "query": "mutation ExtensionDetailsPage_InstallExtension($input: InstallExtensionInput!) {\n  installExtension(input: $input) {\n    installedExtension {\n      id\n      extension {\n        id\n        clientID\n        version\n      }\n    }\n  }\n}\n"
    },
    "ExtensionDetailsPage_UninstallExtension": {
        "hash": "a721010829801ff01fd9e3b305a8c5356251f7f9dd43a5d3c2b976beaa88ba6f",
        "query": "mutation ExtensionDetailsPage_UninstallExtension($input: UninstallExtensionInput!) {\n  uninstallExtension(input: $input) {\n    id\n  }\n}\n"
    },
    "ExtensionDetailsPage": {
        "hash": "137246a34cb8992810532bab59e9261214bd13f41f21c382a71c0a5eadf52013",
        "query": "query ExtensionDetailsPage($extensionID: ID!, $extensionVersion: String, $isLoggedIn: Boolean!) {\n  currentUser @include(if: $isLoggedIn) {\n    id\n    cheer {\n      id\n    }\n    installedExtensions {\n      id\n      extension {\n        id\n      }\n    }\n  }\n  extension(id: $extensionID, version: $extensionVersion) {\n    id\n    authorName\n    clientID\n    description\n    iconURLs {\n      square100\n    }\n    hasChatSupport\n    isBitsEnabled\n    bitsSupportLevel\n    name\n    privacyPolicyURL\n    screenshotURLs\n    self {\n      canInstall\n    }\n    sku\n    state\n    summary\n    supportEmail\n    termsURL\n    vendorCode\n    version\n    categories {\n      id\n      name\n    }\n    views {\n      component {\n        viewerURL\n      }\n      hidden {\n        viewerURL\n      }\n      mobile {\n        viewerURL\n      }\n      panel {\n        viewerURL\n      }\n      videoOverlay {\n        viewerURL\n      }\n    }\n  }\n}\n"
    },
    "ExtensionSearchPage_InstallExtension": {
        "hash": "c32fc8b9a6bad3d87b929ad774459a4bd19b1db3cf18c8562e1a5d40632c67de",
        "query": "mutation ExtensionSearchPage_InstallExtension($input: InstallExtensionInput!) {\n  installExtension(input: $input) {\n    installedExtension {\n      id\n      extension {\n        id\n        clientID\n        version\n      }\n    }\n  }\n}\n"
    },
    "ExtensionSearchPage": {
        "hash": "d370922267e2b0e0f467cc59759326d15e3450b7f85d9e17415dad24ab524e47",
        "query": "query ExtensionSearchPage($afterCursor: Cursor, $search: String, $includeCurrentUser: Boolean!) {\n  extensions(first: 21, after: $afterCursor, search: $search) {\n    edges {\n      ...ExtensionSearchPage_ExtensionEdge\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n  currentUser @include(if: $includeCurrentUser) {\n    id\n    cheer {\n      id\n    }\n    login\n    installedExtensions {\n      id\n      extension {\n        id\n      }\n    }\n  }\n}\n\nfragment ExtensionSearchPage_ExtensionEdge on ExtensionEdge {\n  cursor\n  node {\n    id\n    authorName\n    clientID\n    iconURLs {\n      discoverySplash\n      square100\n    }\n    isBitsEnabled\n    bitsSupportLevel\n    name\n    self {\n      canInstall\n    }\n    sku\n    state\n    summary\n    vendorCode\n    version\n    views {\n      component {\n        viewerURL\n      }\n      hidden {\n        viewerURL\n      }\n      mobile {\n        viewerURL\n      }\n      panel {\n        viewerURL\n      }\n      videoOverlay {\n        viewerURL\n      }\n    }\n  }\n}\n"
    },
    "SubsNameSettingPage_Query": {
        "hash": "412635450011e221a24e39718240791f83446019a0dea593fec6cef0e414a6b6",
        "query": "query SubsNameSettingPage_Query($login: String!) {\n  user(login: $login) {\n    id\n    subscriptionProducts {\n      id\n      displayName\n      price\n      tier\n    }\n  }\n}\n"
    },
    "SubsNamesSettingPage_UpdateSubscriptionProduct": {
        "hash": "2c6cb4f5b64a99ec9a186fd8cc13b78bbc1b6dda3d45bc4f7028743b3178c3aa",
        "query": "mutation SubsNamesSettingPage_UpdateSubscriptionProduct($input: UpdateSubscriptionProductInput!) {\n  updateSubscriptionProduct(input: $input) {\n    product {\n      id\n      displayName\n    }\n  }\n}\n"
    },
    "CodeRedemptionValidation_RedeemKey": {
        "hash": "086d7cade7c28be9fb6c8c822eb80b7e32e46521b6d46f77a0e0a46c4fa40290",
        "query": "mutation CodeRedemptionValidation_RedeemKey($input: RedeemClaimableInput!) {\n  redeemClaimable(input: $input) {\n    key {\n      description\n      id\n    }\n    error {\n      code\n    }\n    redemptionID\n  }\n}\n"
    },
    "RedemptionStatus": {
        "hash": "c4ffe89d1104f3cb8b15a3d494286ba565ce6cdc39e190e3c402cd1746221c26",
        "query": "query RedemptionStatus($id: ID!) {\n  redemptionItemByID(id: $id) {\n    currency\n    amount\n    status\n    errorCode\n  }\n}\n"
    },
    "SetGiftCardUserResidenceMutation": {
        "hash": "bbf6c4dca868a87df88d8e84d0302ffdf5e500aad1c8304a275381d7245f7b30",
        "query": "mutation SetGiftCardUserResidenceMutation($input: SetUserResidenceInput!) {\n  setUserResidence(input: $input) {\n    user {\n      id\n      residence {\n        countryCode\n      }\n    }\n  }\n}\n"
    },
    "CodeRedemptionValidation_GetKeyStatus": {
        "hash": "3e6fe0203b5bc754ffaeed1c5aec9512e317067f02e366d0848fdb4dd58f4810",
        "query": "query CodeRedemptionValidation_GetKeyStatus($code: String!) {\n  key(code: $code) {\n    id\n    type\n    self {\n      id\n      canClaim\n      statusCode\n    }\n    description\n  }\n}\n"
    },
    "GiftCardRedemptionValidation_GetKeyStatus": {
        "hash": "3449c16748d58324b68ba07fa80f6e20f9a08a8ca108381e795f64df82878ab9",
        "query": "query GiftCardRedemptionValidation_GetKeyStatus($code: String!) {\n  key(code: $code) {\n    id\n    type\n    self {\n      id\n      canClaim\n      statusCode\n    }\n    description\n  }\n  currentUser {\n    id\n    residence {\n      countryCode\n      postalCode\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "Followers": {
        "hash": "fa9ec3e98a1fbe73568af67997e5e25581b596ef3ed450fce0eca95168a313ef",
        "query": "query Followers($login: String, $limit: Int, $cursor: Cursor, $order: SortOrder) {\n  user(login: $login) {\n    id\n    followers(first: $limit, after: $cursor, order: $order) {\n      edges {\n        cursor\n        node {\n          id\n          ...userCardFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "UserCard": {
        "hash": "983c73f96a72dd5b15e61a3e6a430d156c41d60aeddfd369ea4c4db53d1fb28a",
        "query": "query UserCard($id: ID!) {\n  user(id: $id) {\n    id\n    ...userCardFragment\n  }\n}\n"
    },
    "PublishClip": {
        "hash": "31ad79503aec5c144d5bb824afe593914182c824626984283622c6fcffd1b805",
        "query": "mutation PublishClip($input: PublishClipInput!) {\n  publishClip(input: $input) {\n    clip {\n      id\n      title\n      slug\n      guestStarParticipants {\n        guests {\n          ...guestStarUser\n        }\n        sessionIdentifier\n      }\n    }\n    error {\n      message\n    }\n  }\n}\n"
    },
    "FollowedChannelsWidget": {
        "hash": "fdc94a3b9a5d841c2bff7981e93fc344a40b53c6df9c3aef16b41efc40bfc7a7",
        "query": "query FollowedChannelsWidget($cursor: Cursor) {\n  currentUser {\n    id\n    follows(first: 100, after: $cursor, order: DESC) {\n      edges {\n        cursor\n        node {\n          ...followedChannelsWidgetUser\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n    followedLiveUsers(first: 100, includeRestricted: [SUB_ONLY_LIVE, OWL_ALL_ACCESS_PASS]) {\n      edges {\n        ...followedChannelsWidgetEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsCommunityGoals": {
        "hash": "d1d8c4577b5aa1695bd1de097eb6be358e8aad4281cb62943cc6840c73420205",
        "query": "query ChannelPointsCommunityGoals($login: String!, $includeGoalTypes: [CommunityPointsCommunityGoalType!]) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        communityGoalSmallContribution\n        communityGoalMaxContributionPerStream\n        goals(includeGoalTypes: $includeGoalTypes) {\n          ...communityGoalItem\n        }\n      }\n    }\n  }\n}\n"
    },
    "DeleteCommunityPointsCommunityGoal": {
        "hash": "bfb20537ed6acbe1ae2127d325669f9995d00e54ad72647b0407ac332de7ea18",
        "query": "mutation DeleteCommunityPointsCommunityGoal($input: DeleteCommunityPointsCommunityGoalInput!) {\n  deleteCommunityPointsCommunityGoal(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CustomRewardsCollection": {
        "hash": "03cfbab5242868a1269339d682ce033f2c9bdcfeb0029444ea0239eef2ad6e57",
        "query": "query CustomRewardsCollection($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        customRewardTemplateCollections {\n          category\n          customRewardTemplates {\n            ...customRewardTemplate\n          }\n        }\n        customRewards {\n          id\n          templateID\n        }\n      }\n    }\n  }\n}\n"
    },
    "ChannelPointsCustomRewards": {
        "hash": "b29e239a1d7fb7ac87ae436ee9e32302c046a2de1f297ec48bed38fb560b6ad6",
        "query": "query ChannelPointsCustomRewards($login: String) {\n  user(login: $login) {\n    id\n    channel {\n      id\n      communityPointsSettings {\n        summarizedRewards {\n          count\n          isCountAtMaximum\n          node {\n            ...customRewardItem\n          }\n        }\n        customRewards {\n          ...customRewardItem\n        }\n      }\n    }\n  }\n}\n"
    },
    "DeleteCustomChannelPointsReward": {
        "hash": "6eee1c83cf61f5aeb274ca7e7f3a7c46a54554e8d7e828b474abc3aa9e99f09e",
        "query": "mutation DeleteCustomChannelPointsReward($input: DeleteCommunityPointsCustomRewardInput!) {\n  deleteCommunityPointsCustomReward(input: $input) {\n    error {\n      code\n    }\n    reward {\n      id\n    }\n  }\n}\n"
    },
    "ToggleAutomaticReward": {
        "hash": "576aea700e9045e1e8e2ac325ab4daab777004301f7ceb4faecc40afa683ff69",
        "query": "mutation ToggleAutomaticReward($input: UpdateCommunityPointsAutomaticRewardInput!) {\n  updateCommunityPointsAutomaticReward(input: $input) {\n    error {\n      code\n    }\n    reward {\n      id\n      type\n      isEnabled\n    }\n  }\n}\n"
    },
    "ToggleCustomReward": {
        "hash": "a35086c04bac9b034252027c6ab6a2f5080b50a112e379fe56cc594104390d27",
        "query": "mutation ToggleCustomReward($input: UpdateCommunityPointsCustomRewardInput!) {\n  updateCommunityPointsCustomReward(input: $input) {\n    error {\n      code\n    }\n    reward {\n      id\n      isEnabled\n    }\n  }\n}\n"
    },
    "UpdateSmartCostsAcknowledgement": {
        "hash": "db55b57a5b8c975eac8506d269080dd8f34ed1a53059e7f8b1ec1733cf65610f",
        "query": "mutation UpdateSmartCostsAcknowledgement($input: UpdateCommunityPointsSmartCostsAcknowledgementsInput!) {\n  updateCommunityPointsSmartCostsAcknowledgements(input: $input) {\n    acknowledgements {\n      lastAcknowledgedCost\n      rewardType\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "exportClipToTikTok": {
        "hash": "8120bc3f6af11224f51371aa29aaffde05992a59fd1267fb3c8c8ef85f074372",
        "query": "mutation exportClipToTikTok($input: ExportClipTikTokInput!) {\n  exportClipTikTok(input: $input) {\n    error\n  }\n}\n"
    },
    "GetTikTokUsername": {
        "hash": "4903acfe88c15f8e8ccc0a6616afe727ec42eceac2973d05b1d2353028d2d3a5",
        "query": "query GetTikTokUsername($userID: ID!) {\n  userPublicThirdPartyAccounts(userID: $userID) {\n    tiktokUsername\n  }\n}\n"
    },
    "acceptSponsorshipCampaignInvitation": {
        "hash": "fa3cf233922f8fbcd04bd7d3496ac995cd1caf7aa605ddb2701a729e5c0a0675",
        "query": "mutation acceptSponsorshipCampaignInvitation($input: AcceptSponsorshipCampaignInvitationInput!) {\n  acceptSponsorshipCampaignInvitation(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "declineSponsorshipCampaignInvitation": {
        "hash": "6e29814b37984d3ea68a3813891b860bdbc5c8347d5ef93ef5dfd4aa220ab7b6",
        "query": "mutation declineSponsorshipCampaignInvitation($input: DeclineSponsorshipCampaignInvitationInput!) {\n  declineSponsorshipCampaignInvitation(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "SponsorshipCampaignInstance": {
        "hash": "ec88c518e3b52dcb584bc7c042789bd7c851100b0da80789f3f09dea330ebb6e",
        "query": "query SponsorshipCampaignInstance($id: ID!) {\n  sponsorshipCampaignInstance(id: $id) {\n    ...sponsorshipCampaignInstance\n  }\n}\n"
    },
    "UpdateSponsorshipCampaignInstance": {
        "hash": "ad557974a08f9b3bc5f85ccea75f661ae86210f627eff9d832ba915fd36dd3fc",
        "query": "mutation UpdateSponsorshipCampaignInstance($input: UpdateSponsorshipCampaignInstanceInput!) {\n  updateSponsorshipCampaignInstance(input: $input) {\n    campaignInstance {\n      id\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "StreamPreviewStreamQuery": {
        "hash": "8d1e21b4874c24ace4b031c3a873ba1034e32ec0a14b98c022ad2171adec00de",
        "query": "query StreamPreviewStreamQuery($login: String!, $width: Int!, $height: Int!) {\n  user(login: $login) {\n    id\n    broadcastSettings {\n      id\n      title\n      game {\n        id\n        slug\n        boxArtURL(width: $width, height: $height)\n        displayName\n        name\n      }\n    }\n  }\n}\n"
    },
    "PbyPGame": {
        "hash": "010ed41c3ddd6239131c9bb79edd889996ac6537b857c65809ba757d1b5a5278",
        "query": "query PbyPGame($channelLogin: String!, $tagType: TagType!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      game {\n        id\n        name\n        tags(tagType: $tagType) {\n          id\n          tagName\n        }\n      }\n    }\n  }\n}\n"
    },
    "TurboAndSubUpsell": {
        "hash": "b150d4d5deefbbad547d8b84b6f453fadaf4494bcb792f71ed0e67a7795ce000",
        "query": "query TurboAndSubUpsell($channelLogin: String) {\n  user(login: $channelLogin) {\n    id\n    displayName\n    profileImageURL(width: 70)\n    login\n    subscriptionProducts {\n      id\n      name\n      emotes {\n        id\n        token\n      }\n    }\n  }\n}\n"
    },
    "ReportUserPage_User": {
        "hash": "4d43648ff8996e4c4970d743994ffe049ed1f3e8da0f3743f4cda00da755442e",
        "query": "query ReportUserPage_User($targetLogin: String!) {\n  user(login: $targetLogin, lookupType: ALL) {\n    id\n  }\n  requestInfo {\n    countryCodeAlpha2\n  }\n}\n"
    },
    "CreateOauthApp": {
        "hash": "d64dccf9ec1c69c18fa763056c32dcdcb92bbfa8dc771d32f3aa8665eb46c2f5",
        "query": "mutation CreateOauthApp($input: CreateOauthAppInput!) {\n  createOauthApp(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "MwebChannelClipPageQuery": {
        "hash": "8c41bd1d45f7ea6d6aa471ec70e38867a5cd7b9cbfd22b88957c87853737ff17",
        "query": "fragment MwebChannelClipPage_RelatedClipFragment on Clip {\n  id\n  title\n  thumbnailURL\n  viewCount\n  durationSeconds\n  createdAt\n  slug\n  broadcaster {\n    id\n    login\n  }\n  game {\n    id\n    name\n  }\n}\n\nfragment MwebChannelClipPage_ClipFragment on Clip {\n  id\n  broadcaster {\n    id\n    login\n    displayName\n    profileImageURL(width: 50)\n    clips(criteria: {period: LAST_WEEK, sort: VIEWS_DESC}) {\n      edges {\n        node {\n          ...MwebChannelClipPage_RelatedClipFragment\n        }\n      }\n    }\n    stream {\n      id\n    }\n  }\n  title\n  curator {\n    id\n    login\n    displayName\n  }\n}\n\nquery MwebChannelClipPageQuery($slug: ID!) {\n  clip(slug: $slug) {\n    ...MwebChannelClipPage_ClipFragment\n  }\n}\n"
    },
    "DevExtensionVersionStatusPage": {
        "hash": "c1d2b4d407d592b5c62f080ebebeb7b9ad790f2faf4f1312045aba6d6489d22e",
        "query": "query DevExtensionVersionStatusPage($id: ID!, $version: String!) {\n  extensionManifest(id: $id, version: $version) {\n    ...extensionManifest\n  }\n  extensionVersionDiscoveryManifest(id: $id, version: $version) {\n    id\n    discoveryManifest {\n      ...extensionDiscoveryManifest\n    }\n  }\n}\n"
    },
    "DevExtensionStateTransition": {
        "hash": "cd6849a99a2758304c5a676ce763ad0b10619b88f7ba98b2b99ee32091199050",
        "query": "mutation DevExtensionStateTransition($input: TransitionExtensionStateInput!) {\n  transitionExtensionState(input: $input) {\n    error\n    manifest {\n      ...extensionManifest\n    }\n  }\n}\n"
    },
    "GetKeyBatchDownloadURL": {
        "hash": "11eda76bb680d90cce65f162d9a2f16949ea8d508a2b80b976e8ee7821b7438f",
        "query": "mutation GetKeyBatchDownloadURL($input: MakeKeyBatchDownloadURLInput!) {\n  makeKeyBatchDownloadURL(input: $input) {\n    decryptionKey\n    url\n  }\n}\n"
    },
    "TopLevelModViewBar_LiveFollowedChannels": {
        "hash": "16120e3377f6e606f7f02ea527577dec8298ae20a2adb6a9531b7c0615bdba78",
        "query": "query TopLevelModViewBar_LiveFollowedChannels() {\n  currentUser {\n    id\n    followedLiveUsers(first: 100, includeRestricted: [SUB_ONLY_LIVE, OWL_ALL_ACCESS_PASS]) {\n      edges {\n        ...followedChannelsWidgetEdge\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "CreatorRewardCampaignsDashboard": {
        "hash": "7a1c9175f90a2755be7cad0b961762d58eb3e52ab097d19b57835e90ee38d822",
        "query": "query CreatorRewardCampaignsDashboard($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    rewardCampaignChannelSettings {\n      rewardCampaignsHidden {\n        isHidden\n        rewardCampaignID\n      }\n    }\n  }\n  rewardCampaignsAvailableToCreator {\n    ...rewardCampaign\n  }\n}\n"
    },
    "ViewMSAPartnerRevshare": {
        "hash": "97bdbf4f1d0a1b5dd84828ba5100f2d790f195e6246e02d25785706b1b1981b4",
        "query": "query ViewMSAPartnerRevshare() {\n  currentUser {\n    id\n    login\n    payoutPlans {\n      category\n      isReceivingRevenue\n      tags\n    }\n    adProperties {\n      density {\n        targetAdMinutesForRevenueShare\n      }\n    }\n  }\n}\n"
    },
    "FeatureClips_ModalFeature": {
        "hash": "39997668d9872ca4560095a3338fe4e839560d4fbac31746df50848c7e75671b",
        "query": "query FeatureClips_ModalFeature($slug: ID!) {\n  clip(slug: $slug) {\n    ...clipModalFragment\n  }\n}\n"
    },
    "ChannelFollows": {
        "hash": "c0884f40a509d5bddbc4715d79603ce92ec5ab9b8613137b8bd972a26fbb319b",
        "query": "query ChannelFollows($login: String, $limit: Int, $cursor: Cursor, $order: SortOrder) {\n  user(login: $login) {\n    id\n    follows(first: $limit, after: $cursor, order: $order) {\n      edges {\n        cursor\n        node {\n          id\n          ...userCardFragment\n        }\n      }\n      pageInfo {\n        hasNextPage\n      }\n    }\n  }\n}\n"
    },
    "MwebChannelClipsPage_Query": {
        "hash": "60833c2463b087c36ad6dae75ed0d7ebe55e198b42af209c420c23ba0c332448",
        "query": "fragment MwebChannelClipsPage_ClipListFragment on User {\n  id\n  displayName\n  clips(first: $limit, after: $cursor, criteria: {period: $period, isFeatured: $featured}) {\n    edges {\n      node {\n        id\n        ...MwebClipCard\n      }\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nquery MwebChannelClipsPage_Query($login: String!, $featured: Boolean, $period: ClipsPeriod!, $limit: Int!, $cursor: Cursor) {\n  user(login: $login) {\n    ...MwebChannelClipsPage_ClipListFragment\n  }\n}\n"
    },
    "BitsUsageHistoryTab_UserBitsTransactions": {
        "hash": "8989601dbe8bcb9e129bc873f502a1cbb5be3477ce71cf5bfd5f35f355983bcf",
        "query": "query BitsUsageHistoryTab_UserBitsTransactions($after: Cursor, $filters: BitsTransactionConnectionInput!) {\n  currentUser {\n    id\n    bitsTransactions(after: $after, criteria: $filters) {\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        ...bitsTransactionEdge\n      }\n    }\n  }\n}\n"
    },
    "DeletePaymentMethodModal_DeleteDefaultMethod": {
        "hash": "c69cab45c925d696338bf027580b7f42b74291d3d59a38bb25d005f8360ab17e",
        "query": "mutation DeletePaymentMethodModal_DeleteDefaultMethod($input: DeleteDefaultPaymentMethodInput!) {\n  deleteDefaultPaymentMethod(input: $input) {\n    updatedAt\n  }\n}\n"
    },
    "PaymentMethodCard_RecurlyCreditCard": {
        "hash": "d4bd1f5c0304cfdf06cd08888abe11357f8bd52a4ef3a807d7a3184d827bf02b",
        "query": "query PaymentMethodCard_RecurlyCreditCard() {\n  currentUser {\n    id\n    accountHealth {\n      isVerifiedEmail\n      isPhoneNumberVerified\n    }\n  }\n}\n"
    },
    "PaymentMethodCard_PaymentMethodInsertStatus": {
        "hash": "3d5e2d021d11766c5c4cf56ca710313fc09602d6cefba5b33525b0dbd0084b04",
        "query": "query PaymentMethodCard_PaymentMethodInsertStatus($workflowID: ID!) {\n  paymentMethodInsertStatus(workflowID: $workflowID) {\n    workflowID\n    outcome\n    errorCode\n    recurlyFraudSessionID\n    threeDSecureActionResultsTokenID\n  }\n}\n"
    },
    "PaymentMethodCard_SetPaymentMethodMutation": {
        "hash": "a1d4df9f570db0c0a1bf04f4c949b25af582b37ad015646120f8901ddf8ebfa2",
        "query": "mutation PaymentMethodCard_SetPaymentMethodMutation($input: SetPaymentMethodInput!) {\n  setPaymentMethod(input: $input) {\n    workflowID\n    error\n  }\n}\n"
    },
    "WalletBalances": {
        "hash": "4b1485882b558175194971a37f501a76a267d82d472b2f156d0266044eb029b6",
        "query": "query WalletBalances($bestGuessCountryCode: String!) {\n  currentUser {\n    id\n    walletBalances(walletType: GIFT_CARD, bestGuessCountryCode: $bestGuessCountryCode) {\n      allBalances {\n        amount\n        currency\n        expiresAt\n        exponent\n      }\n      eligibleCurrencies\n    }\n    subscriptionToken {\n      balance\n    }\n  }\n}\n"
    },
    "PaymentMethodsTab_UserPaymentMethods": {
        "hash": "64cb722cd0efdfb3323bcb068cfd5efa1e82aee6300d01578ecc8d1073272fc9",
        "query": "query PaymentMethodsTab_UserPaymentMethods() {\n  currentUser {\n    id\n    email\n    displayName\n    login\n    residence {\n      countryCode\n      postalCode\n      state\n      city\n      street\n      streetTwo\n    }\n    profileImageURL(width: 50)\n    paymentMethods {\n      chargeInstrumentID\n      provider\n      paymentType\n      paymentScheme\n      billingEmail\n      billingUsername\n      cardType\n      lastFour\n      expirationMonth\n      expirationYear\n      extMethodID\n      purchaseProfiles {\n        id\n        willRenew\n        expiresAt\n        renewalPrice\n        renewalCurrency\n        productType\n        subscriptionBenefit {\n          id\n          tier\n          user {\n            id\n            displayName\n            profileImageURL(width: 50)\n            login\n          }\n        }\n      }\n      recurringPaymentDetails {\n        willRenew\n        expiresAt\n        renewalPrice\n        renewalPriceDivisor\n        renewalCurrency\n        productType\n        subscriptionBenefit {\n          id\n          tier\n          user {\n            id\n            displayName\n            profileImageURL(width: 50)\n            login\n          }\n        }\n      }\n    }\n    paymentMethodConfigs {\n      recurly {\n        braintreeClientAuthorization\n        payWithAmazonConfigs {\n          clientID\n          isProduction\n          sellerID\n        }\n        publicKey\n      }\n      xsolla {\n        token\n        isSandbox\n      }\n    }\n  }\n  paymentPastDueStatuses {\n    vendor\n    isInDunning\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "TransactionHistoryTab_UserPaymentTransactions": {
        "hash": "45f3202ad3fb49e02b2cba288a9c787dc6ac33befa764ad5625b5207d2021225",
        "query": "query TransactionHistoryTab_UserPaymentTransactions($first: Int, $after: Cursor, $filters: PaymentTransactionConnectionCriteriaInput!) {\n  currentUser {\n    id\n    email\n    paymentTransactions(first: $first, after: $after, criteria: $filters) {\n      pageInfo {\n        hasNextPage\n      }\n      totalCount\n      firstPurchasedAt\n      lastPurchasedAt\n      edges {\n        cursor\n        node {\n          id\n          purchasedAt\n          purchaseOrderID\n          product {\n            type\n            name\n            tier\n            bundleSize\n            owner {\n              id\n              profileImageURL(width: 50)\n              login\n            }\n          }\n          grossAmount\n          grossAmountDivisor\n          currency\n          quantity\n          isGift\n          recipient {\n            id\n            login\n          }\n          paymentMethod {\n            provider\n            paymentType\n            cardType\n            lastFour\n            paymentScheme\n          }\n        }\n      }\n    }\n  }\n}\n"
    },
    "createPartnershipApplication": {
        "hash": "3f21ba4bdf4a222d891bba6b0a04543cabaca68e724fb9727639dfc47d5ff7ef",
        "query": "mutation createPartnershipApplication($input: CreatePartnershipApplicationInput!) {\n  createPartnershipApplication(input: $input) {\n    partnershipApplication {\n      id\n    }\n  }\n}\n"
    },
    "PartnershipSignupPageApplicationForm": {
        "hash": "14b3f4df6000b1b0c0e240063a6bfa907f6014bca8a613492bdf7f621a4100af",
        "query": "query PartnershipSignupPageApplicationForm() {\n  currentUser {\n    id\n    broadcastSettings {\n      id\n      language\n    }\n    email\n    roles {\n      isPartner\n    }\n  }\n  requestInfo {\n    countryCode\n  }\n}\n"
    },
    "VerifyAchievements": {
        "hash": "634d4fe14efa27a5ec85394acb25a06b3b8b9f5aeb46b9e70b6e66c578f974ef",
        "query": "query VerifyAchievements() {\n  currentUser {\n    id\n    roles {\n      isAffiliate\n    }\n  }\n}\n"
    },
    "VerifyAchievementsQuests": {
        "hash": "c53a31434dd79e269a84685ba9b35aaaf0586d1cc285820f9fb28c278100007c",
        "query": "query VerifyAchievementsQuests($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    quests {\n      itBegins {\n        hasStreamed\n      }\n      pathToAffiliate {\n        completedAt\n      }\n      pathToPartner {\n        completedAt\n      }\n    }\n  }\n}\n"
    },
    "Checklist": {
        "hash": "8cff072475e1071dd8265984252aa745e1b8caa92b4ee5325a73d0076d307f45",
        "query": "query Checklist() {\n  currentUser {\n    id\n    accountConnections {\n      twitter {\n        username\n      }\n      youtube {\n        channelURL\n      }\n      tikTok {\n        username\n      }\n    }\n    email\n    isEmailVerified\n  }\n}\n"
    },
    "PartnershipSignupPage_Application": {
        "hash": "ddd7f3307b5628ada45548b64c2441f2d2cd0c934ab390d255a7b0f60d8c5489",
        "query": "query PartnershipSignupPage_Application() {\n  currentUser {\n    id\n    partnershipApplication {\n      id\n      resolvedAt\n    }\n  }\n}\n"
    },
    "PartnershipSignupPage_User": {
        "hash": "2f5bb24c96612ccbc4bd498f0d629a8ca4daade26c5591735ba2e81f5eddc7c0",
        "query": "query PartnershipSignupPage_User() {\n  requestInfo {\n    countryCode\n  }\n  currentUser {\n    id\n    email\n    roles {\n      isPartner\n    }\n    broadcastSettings {\n      id\n      language\n    }\n  }\n}\n"
    },
    "UpgradeTermsPage_AcceptProgramAgreement": {
        "hash": "667fb3963e92b32350d3adf55db6c65add00ab171fa6d0e70ae47282620cc77c",
        "query": "mutation UpgradeTermsPage_AcceptProgramAgreement($input: AcceptProgramAgreementInput!) {\n  acceptProgramAgreement(input: $input) {\n    workflow {\n      id\n      currentStep\n    }\n    error\n  }\n}\n"
    },
    "UpgradeTermsPage": {
        "hash": "7c03e2efa3efadac8915799b50a47c068fd9f7432ac56c7ac0f5b91d04004aa5",
        "query": "query UpgradeTermsPage() {\n  currentUser {\n    id\n    roles {\n      isAffiliate\n      isPartner\n    }\n    payoutPlans {\n      category\n      isReceivingRevenue\n      tags\n    }\n    onboardingInvitations {\n      upgrade {\n        id\n        category\n        workflow {\n          id\n          currentStep\n          registration {\n            birthdate\n          }\n        }\n      }\n      payout {\n        id\n        workflow {\n          id\n          currentStep\n        }\n      }\n    }\n    programAgreement {\n      type\n      version\n      body\n      language\n    }\n  }\n}\n"
    },
    "DropsHighlightService_AvailableDrops": {
        "hash": "3924cc002b2366fd6710e659e7c6adcf263eeb8c03176d78e9224e11dbd121c4",
        "query": "query DropsHighlightService_AvailableDrops($channelID: ID!) {\n  channel(id: $channelID) {\n    id\n    viewerDropCampaigns {\n      id\n      name\n      game {\n        id\n        name\n      }\n      detailsURL\n      endAt\n      imageURL\n      eventBasedDrops {\n        ...DropsHighlightService_EventBasedDrop\n      }\n      timeBasedDrops {\n        ...DropsHighlightService_TimeBasedDrop\n      }\n      summary {\n        includesMWRequirement\n        includesSubRequirement\n        isSitewide\n        isRewardCampaign\n        isPermanentlyDismissible\n      }\n    }\n  }\n}\n\nfragment DropsHighlightService_EventBasedDrop on EventBasedDrop {\n  id\n  name\n  startAt\n  endAt\n  claimDurationSeconds\n  benefitEdges {\n    benefit {\n      id\n      name\n      game {\n        name\n        id\n      }\n      imageAssetURL\n    }\n    entitlementLimit\n  }\n  missionName\n}\n\nfragment DropsHighlightService_TimeBasedDrop on TimeBasedDrop {\n  id\n  name\n  startAt\n  endAt\n  benefitEdges {\n    benefit {\n      id\n      name\n      game {\n        name\n        id\n      }\n      imageAssetURL\n    }\n    entitlementLimit\n  }\n  requiredMinutesWatched\n  requiredSubs\n}\n"
    },
    "DropsHighlightService_VerifyEligibility": {
        "hash": "769adac0a967c6d144ad04f9d1f6dc0a573a99c2702418f0b87a2e6e13cf15b0",
        "query": "query DropsHighlightService_VerifyEligibility($dropInstanceID: ID!) {\n  dropEligibility(dropInstanceID: $dropInstanceID) {\n    dropInstanceID\n    status\n    claimSecondsRemaining\n    dropType {\n      id\n      name\n      campaign {\n        id\n        imageURL\n        accountLinkURL\n        detailsURL\n      }\n      benefitEdges {\n        benefit {\n          id\n          imageAssetURL\n          name\n        }\n      }\n      ... on EventBasedDrop {\n        missionName\n        claimDurationSeconds\n      }\n    }\n  }\n}\n"
    },
    "ShoutoutHighlightServiceQuery": {
        "hash": "2b310c01a33d0db96bf28450cfffbb6bab3935e19b48fb27847add97611900eb",
        "query": "query ShoutoutHighlightServiceQuery($targetLogin: String!, $isLoggedOut: Boolean!) {\n  user(login: $targetLogin) @skip(if: $isLoggedOut) {\n    id\n    self {\n      canFollow\n      follower {\n        followedAt\n      }\n      banStatus {\n        expiresAt\n      }\n    }\n  }\n}\n"
    },
    "GetActiveRocketBoostOpportunity": {
        "hash": "d0e8cd32ed0024bb273236db60400a2e97e8cb12c12109794d9af5f9ea4f359e",
        "query": "query GetActiveRocketBoostOpportunity($channelID: ID!) {\n  user(id: $channelID) {\n    id\n    channel {\n      id\n      activeRocketBoostOpportunity {\n        id\n        startedAt\n        expiresAt\n        remainingSeconds\n        boostUnitsContributed\n        impressionsContributed\n      }\n    }\n  }\n}\n"
    },
    "UseViewCount": {
        "hash": "97739fd0613ac558ec4187b025c1087612fca358c4c8d6bdb23b09375810bc66",
        "query": "query UseViewCount($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    stream {\n      id\n      viewersCount\n      collaborationViewersCount\n    }\n  }\n}\n"
    },
    "DMCAWarningBanner": {
        "hash": "eda906c4057c92920b09de41b6693399748f3bcd3074eb547da115468f4c096e",
        "query": "query DMCAWarningBanner() {\n  currentUser {\n    id\n    login\n    lastBroadcast {\n      id\n      startedAt\n    }\n  }\n}\n"
    },
    "UnbanRequestsListItemUser": {
        "hash": "80b7eeca4b5cccb27ec4b12e07a5065b5d63a726cab14cb986453a4cb2f261e3",
        "query": "query UnbanRequestsListItemUser($id: ID!) {\n  user(id: $id) {\n    id\n    login\n    createdAt\n    displayName\n    profileImageURL(width: 28)\n  }\n}\n"
    },
    "BulkApproveUnbanRequests": {
        "hash": "f2d52b20d66a1395036dae28c346a7f56e3e94476c4e1d96a7e10c1a7ebacc57",
        "query": "mutation BulkApproveUnbanRequests($input: BulkApproveUnbanRequestInput!) {\n  bulkApproveUnbanRequest(input: $input) {\n    unbanRequests {\n      id\n      status\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "BulkDenyUnbanRequests": {
        "hash": "a17fb358dcc383614e8b102dc2e4011deb8e266e268c5b1b33ba8d880ef37ff3",
        "query": "mutation BulkDenyUnbanRequests($input: BulkDenyUnbanRequestInput!) {\n  bulkDenyUnbanRequest(input: $input) {\n    unbanRequests {\n      id\n      status\n    }\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateSponsorshipProfileBannerUpload": {
        "hash": "4067fe6f7a6a36fffdc739d04bf074d2d48269b1433cdad4338640c4e60f49c0",
        "query": "mutation CreateSponsorshipProfileBannerUpload($input: CreateSponsorshipAssetUploadInput!) {\n  createSponsorshipAssetUpload(input: $input) {\n    configs {\n      fileName\n      assetURL\n      assetType\n      uploadURL\n    }\n  }\n}\n"
    },
    "SetSponsorshipCreatorProfileImageStatus": {
        "hash": "ef9693f35fb5f8ee3c7eff14f16c391347ced8c04d62b85b161651b4d9223f56",
        "query": "mutation SetSponsorshipCreatorProfileImageStatus($input: UpdateSponsorshipsCreatorProfileInput!) {\n  updateSponsorshipsCreatorProfile(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "CreateSponsorshipProfileImageUpload": {
        "hash": "b4a0b9b2d3bb1a0681bae03b1534c0ab1bad7cdeeaa262bc6d47c4b28d93030b",
        "query": "mutation CreateSponsorshipProfileImageUpload($input: CreateSponsorshipAssetUploadInput!) {\n  createSponsorshipAssetUpload(input: $input) {\n    configs {\n      fileName\n      assetURL\n      assetType\n      uploadURL\n    }\n  }\n}\n"
    },
    "UpdateSponsorshipCreatorProfile": {
        "hash": "4f4c26863c79e3b6e028e46343ddc39643ca83dd913109ea6fe4ad3c6457a602",
        "query": "mutation UpdateSponsorshipCreatorProfile($input: UpdateSponsorshipsCreatorProfileInput!) {\n  updateSponsorshipsCreatorProfile(input: $input) {\n    error {\n      code\n    }\n  }\n}\n"
    },
    "GetSponsorshipsCreatorProfileSettings": {
        "hash": "031133222256736b4d5b8b4f550d4763c6fcd7d9ff7c24c88b2c2c3840799dee",
        "query": "query GetSponsorshipsCreatorProfileSettings() {\n  currentUser {\n    id\n    isInGoodStanding\n    login\n    displayName\n    profileImageURL(width: 300)\n    followers {\n      totalCount\n    }\n    roles {\n      isPartner\n    }\n  }\n  sponsorshipsCreatorProfile {\n    ...sponsorshipsCreatorProfileFields\n  }\n}\n"
    },
    "ChannelAnalytics_GameOverlapPanel": {
        "hash": "6eb271db095faeae94405376cfe34eaa4fd967abcaf545310f64362bc16dd74e",
        "query": "query ChannelAnalytics_GameOverlapPanel($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    channelAnalyticsContentOverlap {\n      games {\n        viewersAlsoWatch {\n          boxArtURL(width: 40, height: 55)\n          id\n          slug\n          displayName\n          name\n        }\n        score\n      }\n    }\n  }\n}\n"
    },
    "RetentionRecentlyCalculatedStreamQuery": {
        "hash": "2397da4c88614b6e4ae1fc8c9e099c63c35f7a35be819078e4c4a18cb8f28ab7",
        "query": "query RetentionRecentlyCalculatedStreamQuery($channelID: ID!) {\n  retentionRecentlyCalculatedStreams(channelID: $channelID) {\n    mostRecentCalculatedRetentionStreams {\n      id\n      streamTimes {\n        startAt\n        endAt\n      }\n      totalNewViewers\n      returningNewViewers\n      categories {\n        id\n        name\n      }\n    }\n  }\n}\n"
    },
    "ChannelAnalytics_ViewerOverlapPanel": {
        "hash": "94157b78d7bbf87df9a8a8a71b192edc6f985949ed1fcfa8112d49092d0ebca8",
        "query": "query ChannelAnalytics_ViewerOverlapPanel($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    login\n    channelAnalyticsContentOverlap {\n      channels {\n        viewersAlsoWatch {\n          id\n          login\n          displayName\n          profileImageURL(width: 70)\n        }\n        score\n      }\n    }\n  }\n}\n"
    },
    "UnsubscribeEmail": {
        "hash": "140dc5c32c9273ffe470d19716786a253151fe380dc18aa7e76a2d1c0f3c5e53",
        "query": "mutation UnsubscribeEmail($input: UnsubscribeEmailInput!) {\n  unsubscribeEmail(input: $input) {\n    isSuccess\n  }\n}\n"
    },
    "storiesCreationAccess": {
        "hash": "9455fe18a578f9092c6c8d58f349b20fdf0ba80653b3f4f907909e361cf8884d",
        "query": "query storiesCreationAccess($userID: ID!) {\n  storiesCreationAccess(userID: $userID) {\n    eligibilities\n  }\n}\n"
    },
    "LiveDashboard_BountyBoard_IsEnabled": {
        "hash": "eb1ab278fcc0ede7f6e1d3a11e79d7edad3495718edd5e4172896c0a616c5e07",
        "query": "query LiveDashboard_BountyBoard_IsEnabled($channelLogin: String!) {\n  user(login: $channelLogin) {\n    id\n    bountyBoardSettings {\n      status\n    }\n  }\n}\n"
    },
    "MwebChannelSchedulePage_Query": {
        "hash": "396cf323f70aaef2a33b0760c9bb5339b65d8d1e602316b2a9cb873653c37842",
        "query": "fragment MwebChannelSchedulePage_NextSegmentTitleSegmentFragment on ScheduleSegment {\n  id\n  startAt\n}\n\nfragment MwebChannelSchedulePage_LastStreamTitleVideoFragment on Video {\n  id\n  publishedAt\n}\n\nfragment MwebChannelSchedulePage_PastBroadcastsItems on Video {\n  id\n  publishedAt\n  ...MwebVideoCard\n}\n\nfragment MwebChannelSchedulePage_TodaySectionVideosFragment on Video {\n  id\n  ...Mweb_ChannelFeaturedCardVideoFragment\n}\n\nfragment MwebChannelSchedulePage_TodaySectionStreamFragment on Stream {\n  id\n  ...Mweb_ChannelFeaturedCardStreamFragment\n}\n\nfragment MwebChannelSchedulePage_ScheduleSegmentCardSegmentFragment on ScheduleSegment {\n  id\n  title\n  startAt\n  endAt\n  isCancelled\n  categories {\n    id\n    displayName\n    boxArtURL(width: 144, height: 192)\n  }\n}\n\nfragment MwebChannelSchedulePage_TodaySectionInterruptionFragment on ScheduleInterruption {\n  startAt\n  endAt\n}\n\nfragment MwebChannelSchedulePage_TodaySectionSegmentsFragment on ScheduleSegment {\n  id\n  startAt\n  ...MwebChannelSchedulePage_ScheduleSegmentCardSegmentFragment\n}\n\nfragment MwebChannelSchedulePage_FutureSegmentsInterruptionFragment on ScheduleInterruption {\n  startAt\n  endAt\n}\n\nfragment MwebChannelSchedulePage_FutureSegmentsSegmentsFragment on ScheduleSegment {\n  id\n  startAt\n  ...MwebChannelSchedulePage_ScheduleSegmentCardSegmentFragment\n}\n\nquery MwebChannelSchedulePage_Query($login: String!) {\n  user(login: $login) {\n    id\n    displayName\n    login\n    videos(first: 30, type: ARCHIVE, sort: TIME) {\n      edges {\n        node {\n          id\n          publishedAt\n          ...MwebChannelSchedulePage_PastBroadcastsItems\n          ...MwebChannelSchedulePage_TodaySectionVideosFragment\n          ...MwebChannelSchedulePage_LastStreamTitleVideoFragment\n        }\n      }\n    }\n    stream {\n      id\n      ...MwebChannelSchedulePage_TodaySectionStreamFragment\n    }\n    channel {\n      id\n      schedule {\n        id\n        interruption {\n          ...MwebChannelSchedulePage_TodaySectionInterruptionFragment\n          ...MwebChannelSchedulePage_FutureSegmentsInterruptionFragment\n        }\n        segmentList(first: 30) {\n          edges {\n            node {\n              startAt\n              ...MwebChannelSchedulePage_TodaySectionSegmentsFragment\n              ...MwebChannelSchedulePage_FutureSegmentsSegmentsFragment\n            }\n          }\n        }\n        nextSegment {\n          id\n          isCancelled\n          ...MwebChannelSchedulePage_NextSegmentTitleSegmentFragment\n        }\n      }\n    }\n  }\n}\n"
    },
    "MwebChannelVODPage_Query": {
        "hash": "fee661db6aea3bbedc558bf964153e3f5ddfce87a4464ac8a54470b677f2d43e",
        "query": "fragment MwebChannelVODPage_RelatedVODFragment on Video {\n  id\n  title\n  previewThumbnailURL\n  viewCount\n  lengthSeconds\n  createdAt\n  game {\n    id\n    name\n  }\n}\n\nfragment MwebChannelVODPage_VODFragment on Video {\n  id\n  owner {\n    id\n    login\n    displayName\n    profileImageURL(width: 50)\n    videos(sort: TIME, first: 8) {\n      edges {\n        node {\n          ...MwebChannelVODPage_RelatedVODFragment\n        }\n      }\n    }\n    stream {\n      id\n    }\n  }\n  title\n  game {\n    id\n    name\n    displayName\n  }\n}\n\nquery MwebChannelVODPage_Query($videoId: ID!) {\n  video(id: $videoId) {\n    ...MwebChannelVODPage_VODFragment\n  }\n}\n"
    },
    "SDAUpsell_CurrentUser": {
        "hash": "a0d0e41f25629b6e7c87d3e706b3d9e137a83a47d0a3bdc6808c7d52b7f0ce4a",
        "query": "query SDAUpsell_CurrentUser() {\n  currentUser {\n    id\n    turboStatus {\n      hasActiveTurbo\n      hasUsedFreeTrial\n    }\n  }\n}\n"
    },
    "ClipsCards__Game": {
        "hash": "9346313239467d404bedfb525d8ba3eed71d44f83a763c74d5e3a6842c07ab4d",
        "query": "query ClipsCards__Game($categorySlug: String!, $limit: Int, $cursor: Cursor, $criteria: GameClipsInput) {\n  game(slug: $categorySlug) {\n    id\n    name\n    displayName\n    clips(first: $limit, after: $cursor, criteria: $criteria) {\n      banners\n      pageInfo {\n        hasNextPage\n      }\n      edges {\n        cursor\n        node {\n          ...PreviewCardClip\n        }\n      }\n    }\n  }\n}\n"
    },
    "DirectoryGameClips_Pageview": {
        "hash": "bc0f625a3aa430e31a3c2dc901988a27b859fc5a6f3d693c235ddef64237d77c",
        "query": "query DirectoryGameClips_Pageview($categorySlug: String!) {\n  game(slug: $categorySlug) {\n    id\n    name\n  }\n}\n"
    }
}
