name: Publish Tauri

on:
    workflow_dispatch:

permissions:
    contents: write # for checkout and tag
    pull-requests: write # for comments
    packages: write # for publish

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, ubuntu-latest, windows-latest]

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4
              with:
                  submodules: true

            - run: corepack enable

            - name: Install Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 8
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v4
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm i --frozen-lockfile

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-latest'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

            - name: build-pre
              run: pnpm --filter dash run build-pre

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
                  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
              with:
                  tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
                  projectPath: ./packages/dash
                  releaseName: 'App v__VERSION__'
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'ubuntu-latest'
              with:
                  name: omuchat-appimage-linux
                  path: ./packages/dash/src-tauri/target/release/bundle/appimage/omuchat_**.AppImage.*

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'ubuntu-latest'
              with:
                  name: omuchat-deb-linux
                  path: ./packages/dash/src-tauri/target/release/bundle/deb/omuchat_**.deb

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'windows-latest'
              with:
                  name: omuchat-windows
                  path: ./packages/dash/src-tauri/target/release/bundle/msi/omuchat_**.msi.*

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'macos-latest'
              with:
                  name: omuchat-macos
                  path: ./packages/dash/src-tauri/target/release/bundle/macos/omuchat.app.tar.*
