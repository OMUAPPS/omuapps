name: Build Tauri

on:
    workflow_dispatch:

permissions:
    contents: write # for checkout and tag
    pull-requests: write # for comments
    packages: write # for publish

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest' # for Arm based macs (M1 and above).
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest' # for Intel based macs.
                      args: '--target x86_64-apple-darwin'
                    - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ''
                    - platform: 'windows-latest'
                      args: ''

        runs-on: ${{ matrix.platform }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - uses: oven-sh/setup-bun@v2

            - uses: actions/cache@v4
              id: cache-bun
              if: startsWith(matrix.platform, 'ubuntu-') || startsWith(matrix.platform, 'macos-')
              with:
                  path: ~/.bun/install/cache
                  key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
                  restore-keys: |
                      bun-${{ runner.os }}-

            - uses: actions/cache@v4
              id: cache-bun-windows
              if: startsWith(matrix.platform, 'windows-')
              with:
                  path: ${{ '%userprofile%\\.bun\\install\\cache' }}
                  key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
                  restore-keys: |
                      bun-${{ runner.os }}-

            - name: Install dependencies
              if: steps.cache-bun.outputs.cache-hit != 'true' && steps.cache-bun-windows.outputs.cache-hit != 'true'
              run: bun i --frozen-lockfile

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
                  # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
                  # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: build-pre
              run: |
                  bun --filter dash run build-pre

            - name: Cache rust target
              uses: actions/cache@v4
              with:
                  key: rust-target-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
                  path: ./packages-js/dash/src-tauri/target

            - uses: tauri-apps/tauri-action@v0.5.9
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
                  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
              with:
                  tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
                  projectPath: ./packages-js/dash
                  releaseName: 'App v__VERSION__'
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false
                  updaterJsonPreferNsis: true
                  args: ${{ matrix.args }}

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'ubuntu-latest'
              with:
                  name: omuapps-appimage-linux
                  path: ./packages-js/dash/src-tauri/target/release/bundle/appimage/omuapps_**.AppImage.*

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'ubuntu-latest'
              with:
                  name: omuapps-deb-linux
                  path: ./packages-js/dash/src-tauri/target/release/bundle/deb/omuapps_**.deb

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'windows-latest'
              with:
                  name: omuapps-windows
                  path: ./packages-js/dash/src-tauri/target/release/bundle/msi/omuapps_**.msi.*

            - uses: actions/upload-artifact@v3
              if: matrix.platform == 'macos-latest'
              with:
                  name: omuapps-macos
                  path: ./packages-js/dash/src-tauri/target/release/bundle/macos/omuapps.app.tar.*
